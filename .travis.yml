#
# This is a basic build configuration for Travis CI.
# See http://conda.pydata.org/docs/travis.html for more info.
#

language: python

os:
  - linux
  - osx
  - windows

before_install:
  - source ./ci/amend_github_commit.sh "pending" "flake8 check in progress"

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
    elif [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      choco install -y openssl;
      choco install -y miniconda3;
      export PATH="/c/tools/miniconda3/Scripts:$PATH";
      source activate base;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
    fi
  - hash -r
  - conda config --set always_yes yes --set changeps1 no --set channel_priority true
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - sed -i -E 's/(python=)(.*)/\1'$TRAVIS_PYTHON_VERSION'/' ./environment.yml
  - conda env create --file environment.yml
  - source activate cate-env
  - conda list
  - python setup.py install

script:
  # For the unit-tests, disable Numba JIT, otherwise Coverage wont reach the actual Python code
  - export NUMBA_DISABLE_JIT=1
  # Uncomment following line if web testing on travis breaks our build
  - export CATE_DISABLE_WEB_TESTS=1
  - export CATE_DISABLE_PLOT_TESTS=1
  - export CATE_DISABLE_CLI_UPDATE_TESTS=1
  - py.test -v --cov=cate tests

after_success:
  - pip install codecov
  - codecov --env TRAVIS_PYTHON_VERSION
  - flake8 --exit-zero|tee flake8_report.txt
  - FLAKE8_COUNT=$(cat flake8_report.txt | wc -l)
  - if [ ${FLAKE8_COUNT} -eq 0 ]; then
      source ./ci/amend_github_commit.sh "success" "flake8 test succeeded";
    else
      source ./ci/amend_github_commit.sh "failure" "flake8 test found ${FLAKE8_COUNT} problems";
    fi
