{"version":3,"sources":["renderer/remoteStorageAPI.ts","renderer/webapi/apis/callHttpApi.ts","renderer/webapi/apis/FilesApi.ts","renderer/selectors.ts","common/objutil.ts","renderer/containers/ChooseWorkspaceDialog.tsx","renderer/electron.ts","renderer/webapi/HttpError.ts","common/types.ts","renderer/containers/FileUploadDialog.tsx","renderer/webapi/apis/ServiceInfoAPI.ts","renderer/containers/globe-view-layers.ts","common/memoize.ts","../node_modules/cesium/Source/Core sync","common/base16codec.ts","renderer/state-util.ts","common/assert.ts","renderer/webapi/WebAPIClient.ts","renderer/webapi/apis/DatasetAPI.ts","renderer/webapi/apis/OperationAPI.ts","renderer/webapi/apis/WorkspaceAPI.ts","renderer/webapi/apis/BackendConfigAPI.ts","renderer/webapi/apis/ColorMapsAPI.ts","renderer/webapi/apis/FileSystemAPI.ts","renderer/webapi/apis/ServiceShutdownAPI.ts","renderer/resources/cate-icon-128.png","renderer/containers/editor/DictValueEditor.tsx","renderer/containers/editor/LiteralValueEditor.tsx","renderer/components/ModalDialog.tsx","renderer/containers/AnimationView.tsx","common/cate-types.ts","renderer/components/ListBox.tsx","renderer/components/desktop/fs/FileNode.ts","renderer/components/field/Field.tsx","renderer/components/field/TextField.tsx","renderer/components/cesium/cesium-util.ts","common/geojson-simple-style.ts","common/paths.ts","renderer/state.ts","renderer/toast.ts","renderer/components/ViewState.ts","renderer/containers/operation-step-dialog-ids.ts","renderer/cookies.ts","renderer/initial-state.ts","renderer/reducers.ts","renderer/containers/GdprBanner.tsx","renderer/containers/WorkspacesMenu.tsx","renderer/containers/HelpMenu.tsx","renderer/containers/AppBar.tsx","renderer/messages.tsx","renderer/components/ExternalObjectComponent.tsx","common/shallow-equal.ts","common/array-diff.ts","renderer/components/cesium/SplitSlider.tsx","renderer/components/cesium/geometry-tool.ts","renderer/components/cesium/CesiumGlobe.tsx","common/geometry-util.ts","renderer/containers/GlobeView.tsx","renderer/components/matplotlib/MplFigure.ts","renderer/components/matplotlib/MplFigureContainer.tsx","renderer/components/ToolButton.tsx","renderer/components/matplotlib/MplFigurePanel.tsx","renderer/containers/FigureView.tsx","renderer/containers/ServiceAutoShutdownDialog.tsx","renderer/containers/ServiceShutdownDialog.tsx","renderer/containers/TableView.tsx","renderer/components/Splitter.tsx","renderer/components/SplitPane.tsx","renderer/components/ContentWithDetailsPanel.tsx","renderer/components/DataSourceLinks.tsx","renderer/components/Markdown.tsx","renderer/components/ScrollableContent.tsx","renderer/components/DataSourceDetails.tsx","renderer/components/DataSourceItem.tsx","renderer/components/DataSourcesList.tsx","renderer/components/DataSourceOpenHint.tsx","renderer/containers/AddDatasetDialog.tsx","common/format.ts","renderer/components/field/DateField.tsx","renderer/components/field/DateRangeField.tsx","renderer/components/LongIdLabel.tsx","renderer/components/field/NumericField.tsx","renderer/components/Region.tsx","renderer/components/LabelWithType.tsx","renderer/containers/VariablesDialog.tsx","renderer/containers/editor/VarNameValueEditor.tsx","renderer/containers/DataAccessComponent.tsx","renderer/containers/editor/InputEditor.tsx","renderer/containers/editor/BooleanValueEditor.tsx","renderer/containers/editor/ValueSetValueEditor.tsx","renderer/containers/editor/IntegerValueEditor.tsx","renderer/containers/editor/FloatValueEditor.tsx","renderer/containers/editor/TextValueEditor.tsx","renderer/containers/editor/FileValueEditor.tsx","renderer/components/GeometryDialog.tsx","renderer/components/field/GeometryField.tsx","renderer/containers/editor/GeometryValueEditor.tsx","renderer/containers/editor/TimeRangeValueEditor.tsx","renderer/containers/DimensionsDialog.tsx","renderer/containers/editor/DimNameValueEditor.tsx","renderer/containers/editor/TimeValueEditor.tsx","renderer/components/ScriptDialog.tsx","renderer/components/field/ScriptField.tsx","renderer/containers/editor/ScriptValueEditor.tsx","renderer/containers/editor/ValueEditor.tsx","renderer/containers/OperationStepDialog.tsx","renderer/containers/OpenDatasetDialog.tsx","renderer/containers/RemoveDatasetDialog.tsx","renderer/containers/DataSourcesPanel.tsx","renderer/containers/OperationsPanel.tsx","renderer/containers/WebAPIStatusBox.tsx","renderer/containers/WorkflowStepPropertiesDialog.tsx","renderer/containers/WorkspacePanel.tsx","renderer/containers/VariablesPanel.tsx","renderer/containers/LayerSourcesDialog.tsx","renderer/containers/PlacemarksPanel.tsx","renderer/containers/ViewPanel.tsx","renderer/containers/TaskComponent.tsx","renderer/containers/TasksPanel.tsx","renderer/components/TermsAndConditions.tsx","renderer/containers/VersionTags.tsx","version.ts","renderer/containers/StatusBar.tsx","renderer/components/SubPanelHeader.tsx","renderer/containers/LayersPanel.tsx","renderer/components/field/NumericRangeField.tsx","renderer/containers/StylesPanel.tsx","renderer/containers/SelectWorkspaceDialog.tsx","renderer/containers/NewWorkspaceDialog.tsx","renderer/containers/SaveWorkspaceAsDialog.tsx","renderer/containers/PreferencesDialog.tsx","renderer/components/desktop/fs/FileList.tsx","renderer/components/desktop/fs/RootNodeLoading.tsx","renderer/components/desktop/fs/FileTree.tsx","renderer/components/desktop/fs/FileDialog.tsx","renderer/components/desktop/fs/OpenDialog.tsx","renderer/containers/DirectorySelectDialog.tsx","renderer/containers/FileOpenDialog.tsx","renderer/components/desktop/fs/SaveDialog.tsx","renderer/containers/FileSaveDialog.tsx","renderer/containers/FileBrowseDialog.tsx","renderer/components/desktop/MessageBox.tsx","renderer/containers/MessageBox.tsx","renderer/components/PanelContainer.tsx","renderer/components/Panel.tsx","renderer/components/ViewManager.tsx","renderer/components/MessageDetails.tsx","renderer/containers/JobFailureDialog.tsx","renderer/containers/FileDownloadDialog.tsx","renderer/containers/AppMainPage.tsx","renderer/containers/AppMainPageWrapper.tsx","index.tsx","renderer/main.tsx","renderer/containers/editor/value-editor-assign.ts","renderer/actions.ts","renderer/components/desktop/electron.ts","renderer/components/desktop/actions.tsx","renderer/webapi/Job.ts"],"names":["RemoteStorageAPI","webAPIClient","this","call","session","callApi","endpointUrl","queryComponents","init","url","length","map","kv","encodeURIComponent","join","makeUrl","console","debug","fetch","then","response","ok","log","HttpError","status","statusText","catch","error","callBlobApi","fileName","blob","uuidv4","objectUrl","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","callJsonApi","json","FilesAPI","processId","onProgress","serviceUrl","undefined","mode","method","JSON","stringify","dir","file","formData","FormData","append","name","filePaths","target_files","electron","requireElectron","EMPTY_OBJECT","EMPTY_ARRAY","offlineModeSelector","state","offlineMode","webAPIServiceInfoSelector","communication","webAPIServiceInfo","webAPIClientSelector","webAPIServiceURLSelector","webAPIServiceURL","isLocalFSAccessAllowedSelector","ipcRenderer","userRootMode","webAPIRestUrlSelector","createSelector","makeURL","getRestUrl","apiWebSocketsUrlSelector","getAPIWebSocketsUrl","mplWebSocketUrlSelector","getMPLWebSocketsUrl","ws","path","_url","protocol","pathname","newUrl","host","startsWith","endsWith","backendConfigAPISelector","BackendConfigAPI","datasetAPISelector","DatasetAPI","operationAPISelector","OperationAPI","workspaceAPISelector","WorkspaceAPI","remoteStorageAPISelector","colorMapsAPISelector","ColorMapsAPI","fileSystemAPISelector","FileSystemAPI","activeRequestLocksSelector","activeRequestLocks","Set","jobId","tasks","task","JobStatusEnum","NEW","SUBMITTED","IN_PROGRESS","add","requestLock","DIALOG_STATE_SELECTORS","dialogStatesSelector","control","dialogs","dialogStateSelector","dialogId","dialogStates","isDialogOpenSelector","Object","getOwnPropertyNames","some","isOpen","panelContainerUndockedModeSelector","panelContainerUndockedMode","leftPanelContainerLayoutSelector","leftPanelContainerLayout","rightPanelContainerLayoutSelector","rightPanelContainerLayout","selectedLeftTopPanelIdSelector","selectedLeftTopPanelId","selectedLeftBottomPanelIdSelector","selectedLeftBottomPanelId","selectedRightTopPanelIdSelector","selectedRightTopPanelId","selectedRightBottomPanelIdSelector","selectedRightBottomPanelId","newPlacemarkToolTypeSelector","newPlacemarkToolType","placemarkCollectionSelector","placemarkCollection","selectedPlacemarkIdSelector","selectedPlacemarkId","showPlacemarkDetailsSelector","showPlacemarkDetails","defaultPlacemarkStyleSelector","defaultPlacemarkStyle","selectedPlacemarkSelector","features","placemarks","canFind","find","placemark","id","globeMousePositionSelector","location","globeMousePosition","globeViewPositionSelector","globeViewPosition","operationsSelector","data","operations","operationFilterTagsSelector","operationFilterTags","operationFilterExprSelector","operationFilterExpr","selectedOperationNameSelector","selectedOperationName","selectedOperationSelector","op","selectedCtxOperationSelector","selectedCtxOperationName","filteredOperationsSelector","hasOperations","hasFilterExpr","hasFilterTags","nameMatches","hasTag","parts","toLowerCase","split","every","part","includes","tag","tags","has","filter","operationsTagCountsSelector","tagCounts","Map","forEach","set","get","dataStoresSelector","dataStores","selectedDataStoreIdSelector","selectedDataStoreId","selectedDataSourceIdSelector","selectedDataSourceId","dataSourceFilterExprSelector","dataSourceFilterExpr","dataSourceListHeightSelector","dataSourceListHeight","showDataSourceDetailsSelector","showDataSourceDetails","showAllDataSourcesSelector","showAllDataSources","showDataSourceIDsSelector","showDataSourceIDs","showDataStoreDescriptionSelector","showDataStoreDescription","showDataStoreNoticesSelector","showDataStoreNotices","selectedDataStoreSelector","dataStore","selectedDataSourcesSelector","selectedDataStore","dataSources","filteredDataSourcesSelector","selectedDataSources","ds","searchWords","canOpenDataSource","word","title","metaInfo","matchesIdOrTitle","selectedDataSourceSelector","dataSource","selectedDataSourceTemporalCoverageSelector","selectedDataSource","time_range","canCacheDataSourceSelector","canCacheDataSource","canConstrainDataSourceTimeSelector","canMapDataSource","canConstrainDataSourceTime","canConstrainDataSourceRegionSelector","canConstrainDataSourceRegion","canConstrainDataSourceVariablesSelector","canConstrainDataSourceVariables","workspaceSelector","workspace","isScratchWorkspaceSelector","isScratch","workspaceBaseDirSelector","baseDir","resourcesSelector","resources","workflowStepsSelector","workflow","steps","resourceListHeightSelector","resourceListHeight","showResourceDetailsSelector","showResourceDetails","selectedResourceNameSelector","selectedWorkspaceResourceName","workflowStepListHeightSelector","workflowStepListHeight","showWorkflowStepDetailsSelector","showWorkflowStepDetails","selectedWorkflowStepIdSelector","selectedWorkflowStepId","selectedVariableNameSelector","selectedVariableName","workspaceIdSelector","getWorkspaceId","workspaceNameSelector","index","Math","max","lastIndexOf","substring","getFileName","workspaceDirSelector","getParentDir","lastWorkspaceDirSelector","lastWorkspacePath","resourceNamesSelector","r","resourceMapSelector","resourceMap","resource","selectedResourceSelector","selectedResourceName","selectedResourceAttributesSelector","selectedResource","attributes","array","attrName","hasOwnProperty","push","selectedWorkflowStepResourceSelector","selectedWorkflowStepSelector","workflowSteps","selectedResourceWorkflowStepSelector","selectedWorkflowStepOpSelector","selectedWorkflowStep","findOperation","figureResourcesSelector","isFigureResource","animationResourcesSelector","isAnimationResource","variablesSelector","variables","selectedVariableSelector","selectedVariables","v","selectedVariableAttributesTableDataSelector","selectedVariable","tableData","dataType","units","validMin","validMax","dimNames","shape","chunkSizes","viewLayoutSelector","viewLayout","viewsSelector","views","activeViewIdSelector","activeViewId","activeViewSelector","view","type","activeViewTypeSelector","selectedEntityIdSelector","selectedEntityId","selectedEntitySelector","unusedEntityId","getWorldViewSelectedEntity","selectedWorldViewViewerSelector","getWorldViewViewer","selectedGeometryWKTGetterSelector","getWorldViewSelectedGeometryWKTGetter","externalObjectStoreSelector","EXTERNAL_OBJECT_STORE","savedLayersSelector","savedLayers","selectedLayerIdSelector","selectedLayerId","baseMapsSelector","baseMaps","baseMapIdSelector","baseMapId","DEFAULT_BASE_MAP_ID","baseMapSelector","bm","DEFAULT_BASE_MAP","baseMapOptionsSelector","baseMap","options","layersSelector","layers","selectedLayerSelector","l","selectedLayerIndexSelector","findIndex","selectedImageLayerSelector","selectedLayer","selectedVariableImageLayerSelector","selectedVariableImageLayerDisplayMinMaxSelector","displayMin","isNumber","displayMax","selectedVectorLayerSelector","styleContextSelector","styleContext","vectorStyleSelector","entityUpdateCount","selectedVectorLayer","selectedPlacemark","selectedEntity","style","selectedLayerStyle","STYLE_CONTEXT_LAYER","STYLE_CONTEXT_ENTITY","placemarkStyle","simpleStyleFromFeatureProperties","properties","entityStyle","entityToSimpleStyle","entityVectorLayer","getWorldViewVectorLayerForEntity","entityVectorLayerStyle","savedEntityStyle","entityStyles","SIMPLE_STYLE_DEFAULTS","selectedResourceVectorLayerSelector","selectedLayerVariablesSelector","layerVariables","variable","isSpatialImageVariable","isSpatialVectorVariable","isComputingVariableStatistics","selectedVariableImageLayer","imageLayer","getLockForGetWorkspaceVariableStatistics","varIndex","colorMapCategoriesSelector","colorMaps","selectedColorMapSelector","colorMapCategories","selectedImageLayer","selectedColorMapName","colorMapName","selectedColorMap","cm","fileAPISelector","updateObject","target","sources","assign","updatePropertyObject","propertyName","newValue","oldValue","OPEN_WORKSPACE_DIALOG_ID","DELETE_WORKSPACE_DIALOG_ID","ChooseWorkspaceDialog","props","renderItem","workspaceDir","currentWorkspaceName","selectedWorkspaceName","deleteEntireWorkspace","onCancel","bind","onConfirm","canConfirm","renderBody","onWorkspaceNameChange","onWorkspaceDirChange","nextProps","setState","dispatch","actions","resetSelectedWorkspaceName","test","workspaceName","composeWorkspacePath","event","checked","ev","value","confirmTitle","checkbox","workspaceNames","marginTop","content","label","onChange","handleCheckboxChange","items","selectionMode","ListBoxSelectionMode","SINGLE","getItemKey","item","itemIndex","onSelection","newSelection","setSelectedWorkspace","selection","React","connect","ownProps","dialogState","selectors","isLocalFSAllowed","indexOf","splice","isElectron","Boolean","window","_status","message","Error","isDefined","isUndefined","isDefinedAndNotNull","isUndefinedOrNull","isString","isBoolean","DIV_STYLE","width","marginBottom","display","flexGrow","TEXT_FIELD_STYLE","BUTTON_STYLE","flex","baseStyle","flexDirection","alignItems","padding","border","borderRadius","background","color","transition","FileUploadDialog","handleOnDrop","files","handleOpenDirectoryOnClose","handleOpenDirectoryOpen","showDirectorySelectDialog","DIALOG_ID","icon","confirmIconName","confirmTooltip","key","size","fill","nullable","intent","Intent","PRIMARY","onClick","onDrop","getRootProps","getInputProps","className","FILE_UPLOAD_DIALOG_ID","ServiceInfoAPI","serviceURL","toString","fromResponse","version","timestamp","user_root_mode","hostOS","host_os","dependencies","convertLayersToLayerDescriptors","baseUrl","workspaceId","imageLayerDescriptors","vectorLayerDescriptors","layer","imageLayerDescriptor","vectorLayerDescriptor","convertVariableImageLayerToDescriptor","convertResourceVectorLayerToDescriptor","convertVectorLayerToDescriptor","AUTO_LAYER_ID","warn","findVariable","varName","resId","imageLayout","getTileUrl","rectangle","Cesium","MAX_VALUE","extent","fromDegrees","west","south","east","north","imageryProvider","createImageryProvider","imageryProviderOptions","minimumLevel","maximumLevel","numLevels","tileWidth","tileHeight","tilingScheme","numberOfLevelZeroTilesX","numLevelZeroTilesX","numberOfLevelZeroTilesY","numLevelZeroTilesY","findResource","createResourceGeoJSONDataSource","dataSourceOptions","getFeatureCollectionUrl","COUNTRIES_LAYER_ID","getGeoJSONCountriesUrl","MY_PLACES_LAYER_ID","createGeoJsonDataSource","viewer","errorEvent","addEventListener","simpleStyleToCesium","load","createResourceGeoJSONDataSourceImpl","func","maxSize","memo","memoized","args","memoize","customDataSource","cStyle","worker","Worker","process","postMessage","onmessage","pointColor","fromAlpha","pointOutlineColor","featureCollection","geoJsonDataSource","featureMap","f","scaleByDistance","translucencyByDistance","entities","suspendEvents","values","entity","feature","_simp","_resId","_idx","point","billboard","ratio","area","pixelSize","position","description","outlineColor","outlineWidth","e","removeAll","resumeEvents","changedEvent","raiseEvent","entityGeometryPropertyNames","reloadEntityWithOriginalGeometry","oldEntity","featureUrl","fromEntity","toEntity","newGeomPropertyName","oldGeomPropertyName","transferEntityGeometry","webpackEmptyContext","req","code","keys","resolve","module","exports","Base16","result","i","codePointAt","toUpperCase","parseInt","substr","Number","isNaN","String","fromCharCode","AUTO_LAYER","visible","COUNTRIES_LAYER","stroke","fillOpacity","strokeWidth","MY_PLACES_LAYER","markerSize","markerColor","markerSymbol","strokeOpacity","PLACEMARK_ID_PREFIX","encode","isLocalDataStore","isLocal","isRemoteDataStore","getDataSourceUrls","catalogUrl","infoUrl","catalog_url","catalogue_url","uuid","info_url","computeDataSourceCapabilities","dsd","canConstrainTime","isCoord1DInDataset","canConstrainRegion","data_type","coords","c","dims","d","isCoord1D","_checkDataSourceCapability","data_vars","capabilities","Array","isArray","availableCapabilities","requiredCapabilities","requiredCapability","alphaBlending","ref","getFeatureUrl","getCsvUrl","varPart","getHtmlUrl","getMPLWebSocketUrl","figureId","getMPLDownloadUrl","numDims","isFeatureAttribute","genSimpleId","prefix","floor","random","Date","now","genLayerId","isDataFrameResource","getLayerDisplayName","resName","getLayerTypeIconName","isVectorLayer","findResourceById","findResourceByName","qualifiedName","findDataSource","dataStoreId","dataSourceId","findVariableIndexCoordinates","coordVariables","coordDataMap","cv","coordIndex","dimName","coord","coordData","getNonSpatialIndexers","dimIndexers","newCfSBaseMap","BASE_MAPS","credit","newInitialWorldViewData","viewMode","projectionCode","layerSplitPosition","newInitialTableViewData","dataRows","WORLD_VIEW_COUNTER","newWorldView","viewNumber","newFigureView","getFigureViewTitle","resourceId","fixedSize","resourceName","newAnimationView","newTableView","getWorldViewExternalObject","externalObject","object","assert","dataSourceMap","dataSourceCollection","contains","layerId","entityToGeometryWkt","isImageLayer","STROKE_COLORS","FILL_COLORS","newVariableLayer","spatialImageVariable","spatialVectorVariable","restoredLayer","layerDisplayProperties","updateVariableLayerVarIndex","restoredStyle","getResourceVectorStyle","updateAutoLayer","getLockForLoadDataSources","getVariableLock","slice","defaultDisplayMin","defaultDisplayMax","opacity","brightness","contrast","hue","saturation","gamma","splitMode","SPLIT_MODE_OFF","newVariableLayerDisplayProperties","newVarIndex","_hasWebGL","hasWebGL","canvas","extensions","getContext","getSupportedExtensions","getPlacemarkTitleAndIndex","t","geometry","titles","condition","ERROR_CODE_INVALID_REQUEST","ERROR_CODE_METHOD_NOT_FOUND","ERROR_CODE_INVALID_PARAMS","ERROR_CODE_OS_ERROR","ERROR_CODE_OUT_OF_MEMORY","ERROR_CODE_METHOD_ERROR","ERROR_CODE_INVALID_RESPONSE","ERROR_CODE_CANCELLED","CANCEL_METHOD","DEBUG","newWebAPIClient","firstMessageId","socket","WebAPIClientImpl","onOpen","onClose","onError","onWarning","currentMessageId","activeJobs","WebSocket","onopen","onclose","onerror","processMessage","params","transformer","request","newId","job","JobImpl","invoke","cancel","close","jsonrpc","messageText","send","eval","err","warnInvalidJsonRcpMessage","notifyDone","progress","notifyInProgress","notifyFailed","detailsMessage","jsonRcpMessage","readyState","OPEN","onResolve","onReject","CANCELLED","promise","Promise","setHandlers","sendMessage","setStatus","getJob","getJobId","DONE","failure","FAILED","getRequest","getJobFailureIntentName","WARNING","getJobFailureIconName","exception","getJobFailureTitle","NON_DEVELOPER_ERRORS","isDeveloperError","USER_ERRORS","isUserError","responseToDataSources","responseToMetaInfo","filePathPattern","removeFiles","source","indexers","metaInfoStatus","responseToOperations","operationsResponse","responseOperationToOperation","qualified_name","header","hasMonitor","has_monitor","inputs","responseInputToOperationInput","outputs","responseOutputToOperationOutput","input","password","defaultValue","default_value","valueSet","value_set","valueSetSource","value_set_source","valueRange","value_range","scriptLang","script_lang","fileOpenMode","file_open_mode","fileFilters","file_filters","fileProps","file_props","noUI","no_ui","step_id","output","webAPI","responseToWorkspace","workspaceResponse","base_dir","is_scratch","isModified","is_modified","isSaved","is_saved","resourcesResponse","variablesResponse","validRange","rangeOk","validMinMin","responseToWorkspaceAndResName","workspaceAndResNameResponse","toDir","opName","opArgs","overwrite","persistent","newResName","fromPythonConfig","configResponse","dataStoresPath","data_stores_path","useWorkspaceImageryCache","use_workspace_imagery_cache","resourceNamePattern","default_res_pattern","proxyUrl","http_proxy","config","backendConfig","responseToColorMaps","colorMapsResponse","v1","v2","imageData","ServiceShutdownAPI","DictValueEditor","textValue","toTextValue","validator","validateDictText","placeholder","trim","None","True","False","LiteralValueEditor","validatePythonLiteralText","ModalDialog","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","renderDialogContent","renderDialogFooter","Classes","DIALOG_BODY","children","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","renderActions","cancelButton","noCancelButton","extraActions","confirmButton","disabled","renderExtraActions","mapStateToProps","animationResources","mplWebSocketUrl","AnimationView","divElement","onRef","innerHTML","loading","elements","getElementsByTagName","script","getAnimationResource","animationViewData","dangerouslySetInnerHTML","__html","height","overflowX","overflowY","BOOL_TYPE","INT_TYPE","FLOAT_TYPE","STR_TYPE","ND_ARRAY_TYPE","DATASET_TYPE","DATA_ARRAY_TYPE","DATA_FRAME_TYPE","SERIES_TYPE","DATASET_LIKE_TYPE","DATA_FRAME_LIKE_TYPE","POINT_LIKE_TYPE","POLYGON_LIKE_TYPE","GEOMETRY_LIKE_TYPE","TIME_LIKE_TYPE","TIME_RANGE_LIKE_TYPE","VAR_NAME_LIKE_TYPE","VAR_NAMES_LIKE_TYPE","DIM_NAME_LIKE_TYPE","DIM_NAMES_LIKE_TYPE","DICT_LIKE_TYPE","FILE_LIKE_TYPE","LITERAL_TYPE","isAssignableFrom","targetDataType","sourceDataType","ListBox","detail","oldSelection","toSelectionArray","k","MULTIPLE","onItemClick","onItemDoubleClick","renderedItems","renderedItem","handleClick","onDoubleClick","handleDoubleClick","itemStyle","obj","constructor","ALL_FILES_FILTER","updateFileNode","rootNode","updatedFileNode","childNodes","newRootNode","currentNode","depth","childIndex","n","localeCompare","newChildNode","childNode","_updateFileNode","getFileNodePath","pathNames","fileNodePath","_getValidSubFileNodePath","rootNodes","node","getFileNode","getFileNodeIcon","isDir","compareFileNames","b","addExpandedDirPath","expandedPaths","parentDir","getParentPath","cleanedPaths","p","removeExpandedDirPath","isPathValidAtIndex","applyFileFilter","nodes","fileFilter","extSet","ext","getBasenameExtension","fromPathInputValue","inputValue","currentDirPath","multiSelection","paths","isWindows","escChar","token","char","abs","isAbsolutePath","replace","normalizePath","toAbsolutePath","denormalizePath","isWindowsRootPath","toPathInputValue","selectedPaths","escapePath","getBasename","isFieldValue","Field","_fieldValue","toFieldValue","uncontrolled","handleKeyPress","handleBlur","handleInputChange","setFieldValue","newFieldValueFromValue","newFieldValueFromValueAndTextValue","newFieldValueFromTextValue","charCode","setTextValue","parseValue","validateValue","formatValue","fieldValue","getError","errorClassName","ERROR_CLASS","nominalClassName","NOMINAL_CLASS","getTextValue","onBlur","onKeyPress","INTENT_DANGER","TextField","MARKER_SIZES","small","medium","large","defaults","getString","fromCssColorString","getNumber","pinBuilder","markerCanvas","fromColor","fromText","fromMakiIconId","pixelSizeValue","getValue","colorValue","rgbToCssColor","red","green","blue","pointGraphicsToSimpleStyle","image","scale","imageValue","scaleValue","billboardGraphicsToSimpleStyle","text","fillColor","labelGraphicsToSimpleStyle","polyline","material","alpha","polylineGraphicsToSimpleStyle","polygon","isFilled","isOutlined","outline","polygonGraphicsToSimpleStyle","applyStyleToEntityCollection","applyStyleToEntity","colorToHexString","g","entityToGeoJson","fromCartesian","_entityToGeoJson","coordinates","toDegrees","longitude","latitude","positions","hierarchy","holes","ring","cartesian3ArrayToWktArray","cartesian3ArrayToWkt","exterior","linearRings","interior","x1","toDeg","y1","x2","y2","cartesian3ToWkt","TypeError","canvasToCartographic","canvasPos","degrees","cartographic","ellipsoid","scene","globe","cartesian","camera","pickEllipsoid","cartesianToCartographic","round","clientToCanvas","clientPos","rect","getBoundingClientRect","x","y","left","right","top","bottom","pickEntity","pickedObject","pick","setViewerBaseMap","baseMapOptions","bgMapImageryProvider","z","imageryLayers","oldLayer","remove","getEntityByEntityId","entityId","getById","PI","_getValue","predicate","objects","o","styleProperties","simpleStyle","featurePropertiesFromSimpleStyle","isLinuxRootPath","isWindowsNetworkDevicePath","isWindowsDrivePath","makeAbsolutePath","path1","path2","comps1","splitPath","comps2","joinPathComponents","normPathComponents","concat","makeRelativePath","relPathComps","n1","n2","iFirstDiff","min","components","newComponents","insPos","component","basename","SPLIT_MODE_LEFT","SPLIT_MODE_RIGHT","MessageToaster","showToast","timeout","action","Toaster","create","Position","BOTTOM","NONE","SUCCESS","DANGER","show","isViewSplitState","isViewPanelState","getViewPanel","viewPath","_getViewPanel","pathIndex","viewSplit","layoutIndex","layouts","findViewPanel","viewPanel","findMoveTargetViewIds","sourceViewId","before","after","_collectMoveTargetViewIds","viewIds","lastViewId","viewId","nextViewId","layout","moveView","placement","targetViewId","_moveView","oldLayout1","oldLayout2","newLayout1","newLayout2","selectedViewId","sourceViewIndex","selectedViewIndex","targetViewIndex","addViewToPanel","placeAfterViewId","_addViewToPanel","oldViewIds","placeAfterIndex","insertionIndex","addViewToLayout","_addViewToLayout","oldLayout","splitViewPanel","pos","_splitViewPanel","charCodeAt","newLayout","viewIds1","viewIds2","changeViewSplitPos","delta","_changeViewSplitPos","selectViewInLayout","_selectViewInLayout","removeViewFromLayout","_removeViewFromLayout","removeViewFromViewArray","w","selectView","viewIndex","C_OPTIONS","expires","storeCookieConsent","trackingConsentObtained","Cookies","INITIAL_DATA_STATE","fsRootNode","lastModified","INITIAL_WORLD_VIEW","INITIAL_CONTROL_STATE","directorySelectDialog","fileOpenDialog","fileSaveDialog","fileBrowseDialog","messageBox","INITIAL_SESSION_STATE","reopenLastWorkspace","autoUpdateSoftware","autoShowNewFigures","showSelectedVariableLayer","operationListHeight","showOperationDetails","variableListHeight","showVariableDetails","layerListHeight","showLayerDetails","lastBaseMapId","horPos","verPos","placemarkListHeight","workspacePanelMode","showLayerTextOverlay","debugWorldView","cookieConsentObtained","INITIAL_COMMUNICATION_STATE","webAPIStatus","INITIAL_LOCATION_STATE","positionData","updateDataStores","createDataSources","payload","dataStoreIndex","oldDataStore","newDataStore","newDataStores","addView","newViewLayout","newViews","addViewToViewArray","oldViewLayout","viewsReducer","oldView","newView","viewReducer","isActiveView","layersReducer","selectLayer","layerIndex","temp","newLayers","newLayer","layerReducer","oldStyle","newStyle","deepEqual","updatePlacemarkProperties","placemarkId","featureIndex","oldFeature","oldProperties","newProperties","newFeature","updatePlacemarkGeometry","oldGeometry","newGeometry","stateReducer","combineReducers","UPDATE_FS_ROOT_NODE","newDataSources","dataSourceIndex","oldDataSource","newDataSource","figureView","animationView","tableView","containsActiveId","activeViewPanel","inputAssignments","removedFeatureIndex","OBTAIN_COOKIE_CONSENT","autoStopInfo","webAPIAutoStopInfo","hubStatus","taskState","customizeMode","setCustomizeMode","trackingAllowed","setTrackingAllowed","isCloseButtonShown","DRAWER_BODY","obtainCookieConsent","rightIcon","currentTarget","WorkspacesMenu","newWorkspaceInteractive","openWorkspaceInteractive","closeWorkspaceInteractive","saveWorkspaceInteractive","saveWorkspaceAsInteractive","deleteWorkspaceInteractive","HelpMenu","openUrl","open","TITLE_STYLE","marginLeft","AppBar","src","cateIcon","alt","align","PopoverPosition","self","isRunningInIFrame","CONFIG_ERROR_MESSAGE","NO_WORKSPACE","NO_WORKSPACE_RESOURCES","NO_WORKFLOW_STEPS","NO_DATA_STORES_FOUND","NO_LOCAL_DATA_SOURCES","DATA_SOURCES_LOADING","NO_DATA_SOURCES_FOUND","NO_OPERATIONS_FOUND","NO_VARIABLES","NO_ACTIVE_VIEW","NO_WEB_GL","NO_PLACES","NO_PLACE_SELECTED","NO_LAYERS_NO_VIEW","NO_LAYERS_EMPTY_VIEW","NO_LAYER_SELECTED","NO_LAYER_FOR_STYLE","NO_ENTITY_FOR_STYLE","NO_TABLE_DATA","ExternalObjectComponent","parentContainer","checkProps","externalObjectStore","prevState","container","updateExternalComponentAndSaveProps","remountExternalObject","renderChildren","externalObjectRef","unmountExternalObject","mountExistingExternalObject","mountNewExternalObject","newContainer","newExternalObject","externalObjectMounted","externalObjectUnmounted","nextState","propsToExternalObjectState","shouldExternalObjectUpdate","updateExternalObject","t1","names1","names2","shallowEqual","DEFAULT_EXTERNAL_OBJECT_STORE","arrayDiff","oldArray","newArray","computeChange","currentArray","newIds","oldIndex","oldElement","newIndex","newElement","currentElement","currentIndex","numSteps","change","SplitSlider","sliderElement","dragStartX","handleRef","mouseDown","mouseUp","sliderMove","clientX","offsetLeft","removeEventListener","splitPosition","parentElement","offsetWidth","splitPos","backgroundColor","zIndex","cursor","CHARTREUSE","withAlpha","polylineColor","YELLOW","polygonColor","AQUA","CesiumToolContext","onNewEntity","_viewer","_ellipsoid","_toolDataSource","_handler","_onNewEntity","handler","setInputAction","leftClick","tool","isActive","onLeftClick","requestRender","LEFT_CLICK","doubleClick","onLeftDoubleClick","LEFT_DOUBLE_CLICK","movement","onMouseMove","MOUSE_MOVE","cartographicToCartesian","destroy","_tool","NO_TOOL","handleLeftClick","handleLeftDoubleClick","handleMouseMove","deactivate","context","activate","ToolBase","_context","PointTool","newEntity","PolyTool","genPolygon","polylinePositions","polygonPositions","polylineEntity","polygonEntity","hasRubberband","reset","addPoint","moveLastPoint","endPosition","endInteraction","screenPosition","cartesianWithHeightDelta","updatePositions","addToolEntity","BLACK","polylinePoint","newPointAdded","numPoints","equals","polygonPoint","removeAllToolEntities","PolylineTool","PolygonTool","BoxTool","position1","position2","setPosition","doAdd","getPositions","carto1","carto2","lon1","lat1","lon2","lat2","defaultAccessToken","CENTRAL_EUROPE_BOX","DEFAULT_VIEW_RECTANGLE","DEFAULT_VIEW_FACTOR","CesiumGlobe","cesiumEventHandler","selectedEntityChangeHandler","toolContext","handleRemoteBaseLayerError","isContextMenuOpen","splitLayerPosition","onLayerSplitPosChange","div","setAttribute","baseLayerImageryProvider","getStaticNaturalEarthImageryProvider","cesiumViewerOptions","animation","baseLayerPicker","selectionIndicator","fullscreenButton","geocoder","homeButton","infoBox","sceneModePicker","timeline","navigationHelpButton","navigationInstructionsInitiallyVisible","automaticallyTrackDataSourceClocks","requestRenderMode","maximumRenderTimeChange","Infinity","oncontextmenu","handleContextMenu","debugShowFramesPerSecond","viewModel","originalUpdate","update","vm","apply","styleValue","_screenPositionY","_screenPositionX","_selectionIndicatorElement","timesRetried","getExternalObjectRef","imageryLayer","staticNaturalEarthImageryProvider","addImageryProvider","renderContextMenu","screenPos","clientY","contextMenu","preventDefault","ContextMenu","overlayHtml","geometryToolType","prevBaseMapOptions","prevSelectedPlacemarkId","prevImageLayerDescriptors","prevVectorLayerDescriptors","prevOverlayHtml","prevSplitLayerPosition","prevGeometryToolType","nextBaseMapOptions","nextSelectedPlacemarkId","nextImageLayerDescriptors","nextVectorLayerDescriptors","nextOverlayHtml","nextSplitLayerPosition","nextGeometryToolType","shouldRequestRender","updateImageLayers","updateVectorLayers","updatePlacemarkSelection","updateOverlayHtml","imagerySplitPosition","activateGeometryTool","handleInputAction","canvasPosition","shouldPickEntity","callback","onLeftUp","LEFT_UP","onRightClick","RIGHT_CLICK","onSelectedEntityChanged","selectedEntityChanged","onNewEntityAdded","onViewerMounted","onViewerUnmounted","selectedEntityInViewer","currentPlacemarks","nextPlacemarks","promises","dataSourcePromise","moveEntities","removeById","oldPlacemark","newPlacemark","all","currentLayers","nextLayers","cesiumIndex","addLayer","setLayerProps","removeLayer","minificationFilter","NEAREST","magnificationFilter","lower","raise","addDataSource","removeDataSource","updateDataSource","getDataSource","resolvedDataSource","setDataSourceProps","oldData","newData","updatePlacemarks","styleDelta","diff","oldEntityStyles","newEntityStyles","entityStylesDelta","entityStyleDelta","layerDescriptor","getImageryProvider","dataSourceDescriptor","replaceChild","splitDirection","LEFT","RIGHT","from","to","WKT_GEOMETRY_TYPES","WKT_GEOMETRIES_TEXT","s","isAlpha","parseFloatWithError","errorText","parseFloat","validateGeometryValue","geometryType","isWKT","geometryName","geometryTypeUC","validateWKTGeometryType","expectedMinCommaCount","expectedMinDepthCount","expectedMaxDepthCount","commaCount","depthCount","maxDepthCount","validateWKTBody","i1","i2","coordParts","validateGeoCoordinate","lon","lat","isBox","x0","y0","x3","y3","x4","y4","geometryGeoJsonToGeometryWkt","a1","a2","GlobeView","intervalHandle","lastPosition","positionChanged","handleSelectedEntityChanged","handleNewEntityAdded","handleSplitLayerPosChange","handlePosDataUpdate","setInterval","POS_UPDATE_PERIOD","clearInterval","newPosition","newPlacemarkProperties","geoPos","wkt","menuItems","expectedInputType","dividerAdded","operation","geometryInput","isValueUsed","constantValue","descriptors","layerDescriptors","hasSplitLayer","indexCoords","varText","textDivElement","innerText","getOverlayHtml","CESIUM_GLOBE_STYLE","isDialogOpen","overflow","MplFigureCommandSourceImpl","listenersMap","dispatchCommand","listener","listeners","delete","commandData","MplFigure","webSocketUrl","commandSource","onMessage","webSocket","figureImageCanvas","rubberBandCanvas","imageObj","imageMode","waiting","lastKey","resizeTimer","lastSize","Image","handleCommand","initCanvas","onload","canvasContext","clearRect","drawImage","onunload","addCommandListener","supportsBinary","binaryType","sendRefresh","sendResize","clientWidth","clientHeight","validSize","sizeChange","removeCommandListener","handleKeyboardEvent","onkeydown","wrapEvent","onkeyup","onwheel","step","deltaY","handleMouseEvent","onmousedown","onmouseup","onmousemove","onmouseenter","onmouseleave","strokeStyle","jsonText","figure_id","evt","Blob","blobData","sendCanvasUpdated","msg","parse","msgType","stack","resizeCanvas","xMin","yMin","rubberBandCanvasContext","strokeRect","0","1","2","3","sendDrawMessage","extraData","canvas_pos","targ","srcElement","nodeType","parentNode","bodyRect","elemRect","offsetX","offsetY","pageX","pageY","findpos","focus","button","guiEvent","simpleKeys","which","ctrlKey","altKey","shiftKey","original","reduce","MplFigureContainer","figureUpdateCount","figureDiv","figureHeight","figure","ToolButton","active","tooltipContent","tooltipPosition","AUTO","FIGURE_COMMAND_SOURCE","MplFigurePanel","handleFigureMessage","CONTAINER_DIV_STYLE","onCommand","onDownload","removeCommandListeners","MplFigureToolbar","commands","tooltip","command","messageTag","buttons","tooltipText","FigureView","imageBaseUrl","figureResource","getFigureResource","compId","updateCount","figureName","figureViewData","figureResources","availableTime","remainingTime","inactivityTime","remainingTimeMax","handleClose","getServiceInfo","formatSeconds","hours","remainder","minutes","seconds","setWaiting","shutdown","hideShutdownDialog","TableView","viewData","isLoading","TABLE_CONTAINER_STYLE","renderDataTable","LOADING_CONTAINER_STYLE","firstRow","columnNames","getData","row","col","cellRenderer","numRows","enableRowHeader","getCellClipboardData","justifyContent","resNames","Splitter","bodyEventListeners","onBodyMouseMove","onBodyMouseUp","onBodyMouseEnter","onBodyMouseLeave","isButton1Pressed","getCurrentPosition","removeBodyMouseListeners","addBodyMouseListeners","currentPosition","positionDelta","endDragging","screenX","screenY","pair","onMouseDown","SplitPane","handleSplitDelta","initialSize","oldSize","newSize","containerClass","childContainer1Style","childContainer2Style","width1","height1","ContentWithDetailsPanel","handleSwitchChange","handleContentHeightChange","onShowDetailsChange","onContentHeightChange","detailsControlPanel","contentChild","detailsChild","detailsSwitch","showDetails","alignSelf","detailsContentPanel","actionComponent","detailsPanel","isSplitPanel","contentHeight","DataSourceLinks","float","margin","CODE_STYLE","fontFamily","Colors","LIGHT_GRAY1","MARKDOWN_COMPONENTS","em","li","span","pre","Markdown","remarkPlugins","remarkGFM","linkTarget","STYLE","ScrollablePanelContent","COVERAGE_PANEL_STYLE","flexWrap","DataSourceDetails","metaInfoKeys","details","renderAbstract","renderVariablesTable","renderMetaInfoTable","renderMetaInfoLicences","renderActiveTabPanelOnly","panel","element","spatialCoverage","temporalCoverage","summary","bbox","x_min","y_min","x_max","y_max","start","end","abstract","rowIndex","long_name","licences","ECV_META","ITEM_STYLE","ID_STYLE","BLUE5","fontSize","WARN_ICON_STYLE","marginRight","DATA_TYPE_STYLE","GREEN4","TEXT_ICON_STYLE","textAlign","DataSourceItem","warnIcon","typeSpec","ecvId","idParts","actualEcvId","mappings","ecvMetaItem","ecvs","colors","dataSourceToTextIconProps","dataSourceToTitle","iconSize","DataSourcesList","setSelectedDataSourceId","doubleClickAction","DataSourceOpenHint","manualInterventionNotice","isSandboxedMode","AddDatasetDialog","dataSourceName","onDataSourceNameChange","onFilePathPatternChange","showSelectDirectoryDialog","openDialogOptions","buttonLabel","defaultPath","dirPath","formatDateAsISODateString","date","getTime","getTimezoneOffset","toISOString","formatDataTypeName","fullyQualified","indexColon","indexDot","DEFAULT_DATE_RANGE","DateField","parseDate","formatDate","validateDate","millis","valueOf","defaultProps","DateRangeField","dateStrings","date1","date2","parseDateRange","formatDateRange","validateDateRange","LONG_ID_STYLE","wordWrap","LongIdLabel","longId","NumericField","handleNumericInputChange","validateNumber","isInt","setValueAndTextValue","onValueChange","minorStepSize","selectAllOnFocus","GLOBAL","Region","onEastChange","onSouthChange","onWestChange","onNorthChange","renderField","NUMBER_FIELD_STYLE","TOOLTIP_STYLE","LabelWithType","labelText","dataTypeText","unitsText","VariablesDialog","multiSelect","getVariableItemKey","renderVariableItem","VarNameValueEditor","validate","isDetailsEditorOpen","multi","varNames","validNames","validateVarNamesText","hasSelectableVariables","justifySelf","WARNINGS_PANEL_STYLE","WARNING_ICON","IconNames","WARNING_SIGN","ERROR_ICON","ERROR","ISSUE_ICON","ISSUE","TIME_RANGE_STYLE","DataAccessComponent","onHasTimeConstraintChange","onDateRangeChange","onHasRegionConstraintChange","onRegionChange","onHasVariablesConstraintChange","onVariableNamesChange","onMakeLocalSelectedChange","onMakeLocalDataSourceIdChange","onOpenDatasetResourceNameChange","dateRange","region","hasTimeConstraint","hasRegionConstraint","hasVariablesConstraint","unused","variableNames","isCacheDataSourceSelected","cachedDataSourceId","openDatasetResourceName","minDate","maxDate","cacheConfigPanel","temporalCoverageText","timeConstraintsPanel","SUB_PANEL_STYLE","OPTION_DIV_STYLE","regionConstraintsPanel","res","dataSourceToResource","variablesConstraintPanel","canConstrainVariables","VAR_NAMES_INPUT","canCache","isLocalDataSource","isMakeLocalSelected","messagesPanel","messages","dsVar","types","dataSourceVarToVariable","validTimeConstraint","validRegion","validNorth","validSouth","validVariableNames","validDataSourceId","makeLocalDataSourceId","inputErrors","t0","var_names","force_local","local_ds_id","OPTION_CHECK_STYLE","InputEditor","editor","isValueEditorShown","valueEditor","renderResourceNameEditor","editorSwitch","renderEditorSwitch","LABEL_STYLE","firstResourceOption","otherResourceOptions","isDataTypeCompatible","resourceOptions","RESOURCE_NAME_STYLE","handleChange","interactionKind","PopoverInteractionKind","HOVER","hoverOpenDelay","hoverCloseDelay","TOP","cateTypes","renderTypeInstanceHintText","valueEditorShown","valueEditorDisabled","isValueEditorDisabled","resourceSelectorDisabled","hasCompatibleResources","switchDisabled","alignIndicator","Alignment","EDITOR_SWITCH_STYLE","BooleanValueEditor","indeterminate","ValueSetValueEditor","NULL_VALUE","VALUE_SELECTOR_STYLE","IntegerValueEditor","isValueSetGiven","FloatValueEditor","TextValueEditor","FileValueEditor","showFileDialogCallback","toRelativePath","saveDialogOptions","filters","filePath","canceled","propsSet","WKT_LINK","rel","GeometryDialog","toState","hasError","htmlFor","rows","getHelpText","helpText","GeometryField","validateGeometryText","isEditorOpen","setGeometryWKT","geometryWKTGetter","GeometryValueEditor","TimeRangeValueEditor","valueMinMax","getValueMinMax","DimensionsDialog","dimensions","getDimItemKey","renderDimItem","dimension","DimNameValueEditor","valueDims","validateDimNamesText","hasSelectableDims","TimeValueEditor","LIBS","ScriptDialog","DIALOG_STYLE","theme","showGutter","highlightActiveLine","libText","ScriptField","validateScript","ScriptValueEditor","renderValueEditor","factory","getValueEditorFactory","VALUE_EDITOR_FACTORIES","renderFileValueEditor","renderScriptValueEditor","renderTextValueEditor","findDims","inputAssignment","OperationStepDialog","onConstantValueChange","onResourceNameChange","onValidate","onDefaults","hideValidationDialog","mapPropsToState","inputAssignmentsMap","isEditMode","isNewMode","getInputArguments","getInputErrors","isValidationDialogOpen","inputArguments","inputArgument","hasInputErrors","getInitialInputAssignments","setInputAssignment","dialogTitle","bodyHeaderText","bodyFooterText","parameterPanel","renderParameterPanel","inputEditors","PARAMETER_PANEL_STYLE","NO_STATE","gridTemplateColumns","justifyItems","rowGap","columnGap","operationStep","inputPort","getInputAssignmentsFromOperationStep","lastInputAssignments","forceDefaults","defaultInputAssignment","lastInputAssignment","ValidationDialog","count","inputName","renderInputErrors","countResourceProblems","resourceProblems","introText","problems","footerText","OpenDatasetDialog","onOptionsChange","validateOptions","dsDefault","makeLocalDataSourceTitle","optionsToOperationArguments","cacheSelected","optionsToErrors","defaultOptions","ensureDateRangeIsValidated","RemoveDatasetDialog","onRemoveFilesChange","INTENTS","mapDispatchToProps","setSelectedDataStoreId","setDataSourceFilterExpr","setSessionState","setControlState","updateSessionState","refreshLocalDataStore","showDialog","hideDialog","DataSourcesPanel","handleAddDatasetDialog","handleRemoveDatasetDialog","handleShowOpenDatasetDialog","handleRefreshLocalDataStore","handleListHeightChanged","handleShowDetailsChanged","handleDataStoreSelected","handleShowDataStoreDescriptionChanged","handleShowDataStoreNoticesChanged","handleShowAllDataSourcesChanged","handleShowDataSourceIDsChanged","renderNoDataStoreMessage","hasDataSources","isLocalStore","isNotVerified","canOpen","hasWorkspace","popoverClassName","POPOVER_CONTENT_SIZING","renderDataStoreSelector","FLEX_ROW_STYLE","SPACER_STYLE","renderDataSourceFilterExprInput","filteredDataSources","renderNoDataSourcesMessage","resultsTag","MINIMAL","onRemove","paddingBottom","leftIcon","rightElement","dataStoreOptions","dataStoreDescriptionElement","hasDataStoreDescription","hasDataStoreNotices","notices","callouts","notice","LABEL_TEXT_STYLE","SELECT_STYLE","minWidth","whiteSpace","OP_CARD_STYLE","OperationsPanel","handleOperationSelection","handleOperationFilterExprCleared","handleOperationFilterExprChange","handleAddOperationStepButtonClicked","operationTagFilterPanel","renderOperationTagFilterPanel","operationsList","renderOperationsList","operationDetailsCard","renderOperationDetailsCard","filteredOperations","operationFilterExprInput","canAddStepOperation","selectedOperation","renderNoOperationsMessage","selectedOperationTags","operationsTagCounts","tagStyle","paddingTop","selectedTagItems","tagName","minimal","removeTagName","tagMenuItems","tagCount","addTagName","addTagButton","tagMenu","CLICK","outputElems","getOutputDescriptionText","getMultiplicityText","inputElems","getInputDescriptionText","elevation","formatPortDescriptionText","singularText","pluralText","WebAPIStatusBox","reload","isWaiting","onRetry","DIALOG_P_STYLE","DIALOG_ICON_STYLE","StatusBox","footer","retryButton","ErrorBox","WorkflowStepPropertiesDialog","oldStepId","newStepId","stepId","oldStepPersistent","newStepPersistent","stepPersistent","newStepIdIsValid","WorkspacePanel","handleResourceListHeightChanged","handleShowResourceDetailsChanged","handleResourceNameSelected","handleStepListHeightChanged","handleShowWorkflowStepDetailsChanged","handleWorkflowStepIdSelected","handleShowFigureButtonClicked","handleWorkflowStepPropertiesButtonClicked","handleOpenWorkspaceDirectoryClicked","handleEditOperationStepButtonClicked","renderStepItem","renderResourceAttrName","renderResourceAttrValue","renderOperationStepInputName","renderOperationStepInputValue","renderOperationStepOutputName","renderOperationStepOutputValue","handleWorkspacePanelModeChanged","handleRemoveOperationStepButtonClicked","handleCleanWorkflowButtonClicked","handleShowResourceTableView","handleCopyWorkflowAsPythonScript","handleCopyWorkflowAsShellScript","handleCopyWorkflowAsJSON","getEffectiveResource","convertSteps","getEffectiveResourceName","selectedResourceWorkflowStep","selectedWorkflowStepResource","workflowStep","getEffectiveWorkflowStep","getWorkflowStepLabel","pop","workspaceLabel","AUTO_START","workspaceState","STATE_TAG_STYLE","openItemButton","copyItemButton","selectedTabId","renderWorkflowStepsPanel","renderResourcesPanel","canShowFigure","isOperationStepSelected","hasSteps","canShowTableView","renderWorkspaceActions","renderResourcesList","renderResourceDetails","getResourceItemKey","renderResourceItem","selectedResourceAttributes","renderWorkflowStepsList","renderWorkflowStepDetails","getStepItemKey","selectedWorkflowStepOp","stepInputPanel","renderWorkflowStepPorts","showPopover","TruncatedPopoverMode","WHEN_TRUNCATED","detectTruncation","inputProps","renderWorkflowPortName","renderWorkflowPortValue","outputProps","outputPort","resourcesMap","ports","itemsTitle","noItemsTitle","renderName","renderValue","portProps","port","ALWAYS","cellValue","lines","VariablesPanel","handleSelectedVariableNameChanged","handleShowSelectedVariableLayer","handleAddVariableLayer","handleAddVariableTimeSeriesPlot","handleAddVariableHistogramPlot","handleShowVariableTableView","placemarkName","placemarkPosition","renderVariableActionRow","onSelectedVariableNameChanged","selectedVariableAttributesTableData","isSpatialVariable","hasWorldView","activeViewType","canAddLayer","canAddTimeSeriesPlot","canAddHistogramPlot","VALUE_STYLE","VariablesListPanel","getItemValue","property","handleVariableNameSelection","VariableDetailsPanel","renderAttributeName","renderAttributeValue","LayerSourcesDialog","handleChangedVariableSelection","selectedIndices","layerVariable","DIALOG_TITLE","PlacemarksPanel","handleCopyGeometryAsCsv","sep","geometryGeoJsonToCsv","handleCopyGeometryAsWkt","handleCopyGeometryAsGeoJson","geoJson","handleNewPointToolButtonClicked","handleNewPolygonToolButtonClicked","handleNewPolylineToolButtonClicked","handleNewBoxToolButtonClicked","handleRemovePlacemarkButtonClicked","handleLocatePlacemarkButtonClicked","handleChangedPlacemarkVisibility","handleChangedPlacemarkSelection","handleChangedPlacemarkName","handleChangedPointLongitude","handleChangedPointLatitude","handleCopySelectedPlacemarkAsCsv","handleCopySelectedPlacemarkAsWkt","handleCopySelectedPlacemarkAsGeoJSON","handlePlacemarkDoubleClick","renderPlacemarkItem","nameField","renderActionButtonRow","renderPlacemarksList","renderPlacemarkDetails","isPointToolActive","isPolylineToolActive","isPolygonToolActive","isBoxToolActive","getPlacemarkItemKey","onVisibilityChange","onCopyPlacemarkCsv","onCopyPlacemarkWkt","onCopyPlacemarkGeoJSON","renderPlacemarkTitle","renderPlacemarkGeometry","activeView","PlacemarkItem","placemarkItemRef","createRef","handleVisibilityChanged","handleCopyPlacemarkCsv","handleCopyPlacemarkWkt","handleCopyPlacemarksGeoJSON","rightClickMe","current","menu","Menu","MenuItem","info","toFixed","CHECK_STYLE","ICON_STYLE","NAME_STYLE","INFO_STYLE","ViewPanel","onViewModeChange","onAddWorldView","onShowLayerTextOverlayChange","ACTION_ITEM_STYLE","renderActiveViewPanel","titleField","PROPERTY_ITEM_STYLE","PROPERTY_ITEM_CONTROL_GROUP_STYLE","PROPERTY_ITEM_CONTROL_GROUP_MEMBER_STYLE","marginBlock","TaskComponent","handleShowDetails","isRunning","isMakingProgress","progressValue","total","worked","progressBar","onCancelJob","cancelableProgress","PROGRESS_STYLE","progressMag","detailsButton","renderIcon","onRemoveJob","jobFailure","paddingRight","flexFlow","cancelJob","removeJob","TasksPanel","taskComponents","TermsAndConditions","serviceInfo","uiVersion","apiVersion","VersionTag","StatusBar","globePosition","DIV_MESSAGE_STYLE","DIV_TASKS_STYLE","renderTasks","DIV_CURSOR_STYLE","DIV_TAC_STYLE","DIV_STATUS_STYLE","renderBackendStatus","numRunningTasks","numFailedTasks","render","spinner","tasksInPopover","paddingLeft","LEFT_TOP","DIV_MARGIN","SubPanelHeader","divStyle","titleStyle","SPAN_STYLE","fontWeight","LayersPanel","handleAddLayerButtonClicked","handleRemoveLayerButtonClicked","handleMoveLayerUpButtonClicked","handleMoveLayerDownButtonClicked","handleChangedLayerSelection","handleChangedLayerVisibility","handleChangedLayerSplitMode","handleChangedBaseMap","renderLayerItem","renderBackgroundMapSelector","renderLayersList","renderLayerDetails","LAYER_DIV_STYLE","LAYER_CHECKBOX_STYLE","stopPropagation","LAYER_LABEL_ELEMENT_STYLE","layerCount","selectedLayerIndex","canRemoveLayer","canMoveLayerUp","canMoveLayerDown","BG_MAP_CONTAINER_STYLE","BG_MAP_LABEL_STYLE","BG_MAP_VALUE_STYLE","bgMap","getLayerItemKey","renderDataSelectionSection","renderSplitModeSection","dimensionRows","LABEL_SPAN_STYLE_100","capitalizeFirstLetter","SLIDER_DIV_STYLE_10","stepSize","labelStepSize","handleChangedLayerVarIndex","inline","selectedValue","string","charAt","flexBasis","NumericRangeField","parseNumericPair","DISPLAY_RANGE_STYLE","StylesPanel","handleUpdateDisplayStatistics","handleChangedDisplayMinMax","handleChangedDisplayRange","handleChangedDisplayAlphaBlend","handleChangedColorMapName","handleChangedStyleContext","handleChangedFillColor","handleChangedFillColorFromPicker","handleChangedFillOpacity","handleChangedStrokeWidth","handleChangedStrokeColor","handleChangedStrokeColorFromPicker","handleChangedStrokeOpacity","handleChangedMarkerColor","handleChangedMarkerColorFromPicker","handleChangedMarkerSize","handleChangedMarkerSymbol","renderVectorLayerDetails","renderImageLayerDetails","renderStyleContext","renderFormAlphaBlending","renderFormDisplayMinMax","renderFormDisplayColorBar","renderFormImageEnhancement","selectedResourceVectorLayer","displayMinMax","SLIDER_DIV_STYLE_15","renderDisplayRangeSlider","colorBarButton","popoverContent","renderColorBarBox","renderColorBarButton","labelRenderer","handleChangedImageEnhancement","renderFillColor","renderFillOpacity","renderStrokeWidth","renderStrokeColor","renderStrokeOpacity","renderMarkerColor","renderMarkerSize","renderMarkerSymbol","entityDisplayName","layerDisplayName","LABEL_BOTTOM_MARGIN","lineHeight","vectorStyle","disableAlpha","SLIDER_DIV_STYLE_05","statistics","ORANGE3","fractionDigits","log10","getDisplayFractionDigits","toExponential","formatNumber","buttonContent","renderColorMapImage","cat","colorMap","displayRange","handleChangedVectorStyle","hex","SelectWorkspaceDialog","localWebAPI","isNewDialog","directoryChooser","NewWorkspaceDialog","SaveWorkspaceAsDialog","SYSTEM_LABEL_STYLE","SYSTEM_CONTROL_GROUP_STYLE","SYSTEM_DIV_STYLE","SYSTEM_ITEM_STYLE","PreferencesDialog","preferences","autoUpdateSoftwareChangeDetected","backendChangesDetected","showMessageBox","renderGeneralPanel","renderDataManagementPanel","renderSystemPanel","renderReopenLastWorkspace","renderAutoShowNewFigures","renderDataStoresPath","renderCacheWorkspaceImagery","renderResourceNamePrefix","showProperties","getStateValue","onShowPropertiesChange","getChangeHandler","condensed","bordered","packageName","packageVersion","renderBooleanValue","renderDirectoryPath","renderStringValue","isBackend","initialValue","showOpenDirectoryDialog","setBackendConfig","backendConfigDelta","NAME_CELL_STYLE","NAME_ICON_STYLE","SIZE_CELL_STYLE","ROW_DEFAULT_STYLE","ROW_SELECTED_STYLE","BLUE3","borderColor","DARK_GRAY2","borderStyle","borderWidth","TABLE_STYLE","FileList","multiSelections","openDirectory","onCurrentDirPathChange","onSelectedPathsChange","currentFileNodes","currentFileNodesPath","sort","getCurrentFileNodes","selectedPathSet","getRowFileNode","getRowPath","isRowSelected","fileNode","newSelectedPathSet","clear","handleRowClick","handleRowDoubleClick","renderFileNodeName","renderFileNodeLastModified","renderFileNodeSize","RootNodeLoading","TREE_CONTAINER_STYLE","FileTree","selectedPath","onSelectedPathChange","onExpandedPathsChange","showFiles","treeNodes","includeFiles","_getTreeNodes","fileNodes","idGen","_selectedPath","isSelected","_expandedPaths","isExpanded","childTreeNodes","hasCaret","secondaryLabel","treeNode","nodeData","getTreeNodes","contents","onNodeClick","nodePath","onNodeExpand","onNodeCollapse","FILE_DIALOG_STYLE","FILE_CONTAINER_STYLE","FILE_MGT_ROW_STYLE","FILE_LIST_ROW_STYLE","FILE_INPUT_ROW_STYLE","FILE_INPUT_STYLE","INVALID_FILE_INPUT_STYLE","FILE_NAV_ROW_STYLE","FILE_NAV_BC_STYLE","DARK_GRAY5","FileFilterSelect","Select","ofType","FileDialog","createFileNode","renameFileNode","deleteFileNodes","saveFile","openFile","showHiddenFiles","initSelectedPaths","initExpandedPaths","initSelectedDirPath","initCurrentDirPath","stateUpdate","selectedDirPath","pathState","dispatchPathState","isValid","inputState","dispatchInputState","fileTreeWidth","setFileTreeWidth","selectedFileFilter","setSelectedFileFilter","updateCallback","canNavigateUp","canCreateDirectory","canRename","canDelete","handleSelectedDirChangeInTree","getDefaultFileActionText","pathComponents","dirName","getBreadcrumbs","INPUT","isInputValid","expandedPath","popoverProps","filterable","itemRenderer","fileFilterItemRenderer","onItemSelect","getFileFilterText","itemProps","modifiers","OpenDialog","SaveDialog","propSet","icons","none","INFO_SIGN","question","CONFIRM","warning","MessageBox","checkboxLabel","checkboxChecked","defaultId","cancelId","_checkboxChecked","setCheckboxChecked","hasCheckbox","handleCancel","buttonText","buttonIndex","handleButtonClick","PanelContainer","onTopPanelSelected","onBottomPanelSelected","onTopPanelClose","onBottomPanelClose","onVerSplitterPosChange","onHorSplitterPosChange","panelId","isCurrent","selectedTopPanelId","onSelectedTopPanelChange","selectedBottomPanelId","onSelectedBottomPanelChange","setLayout","onLayoutChange","findPanel","selectedPanel","child","topPanelPane","bottomPanelPane","panelPane","resizablePanelPane","panelBar","PanelBar","panels","toArray","selectedTopPanel","getSelectedTopPanel","selectedBottomPanel","getSelectedBottomPanel","panelPaneWidth","panelPaneHeight","topPanelPaneStyle","renderPanelPane","bottomPanelPaneStyle","renderTwoPanelsPane","renderResizablePanelPane","panelContainerStyle","maxHeight","PanelPane","verSplitter","undockedModeStyle","undockedMode","PANEL_BAR_SIZE","PANEL_UNDOCKED_BACKGROUND_COLOR","resizablePanelPaneStyle","PANEL_PANE_PADDING","horSplitter","PanelHeader","panelIcon","panelTitle","panelCloseIcon","PANEL_ICON_SIZE","PANEL_ICON_PADDING","PANEL_BAR_PADDING","PANEL_BODY_PADDING","PANEL_BAR_ITEM_BASE_STYLE","PANEL_BAR_ITEM_NORMAL_STYLE","GRAY4","PANEL_BAR_ITEM_SELECTED_STYLE","WHITE","TOP_PANEL_BAR_STYLE","listStyleType","BOTTOM_PANEL_BAR_STYLE","CONTAINER_STYLE","PANEL_BUTTON_STYLE","verticalAlign","PANEL_BODY_CONTAINER_STYLE","tooltipPos","renderPanelButton","selectedPanelId","panelPosition","topPanelButtons","bottomPanelButtons","panelBody","panelParentStyle","Panel","ViewManager","viewMap","createViewMap","renderViewSplit","renderViewPanel","renderNoViews","NO_VIEW_CONTAINER_STYLE","noViewsDescription","noViewsAction","noViewsVisual","renderedLayout1","renderedLayout2","layout1","layout2","containerStyle","HOR_SPLIT_CONTAINER_STYLE","VER_SPLIT_CONTAINER_STYLE","onChangeViewSplitPos","viewRenderMap","onSelectView","onCloseView","onCloseAllViews","onMoveView","onSplitViewPanel","boxSizing","contentElement","onSplitHor","onSplitVer","onContentDivRef","renderedViewContent","selectedView","tabItems","viewTitle","viewIconName","tabStyle","closeIconStyle","viewRenderer","TAB_STYLE_SELECTED","TITLE_STYLE_ACTIVE","TITLE_STYLE_SELECTED","CLOSE_ICON_STYLE_SELECTED","TAB_STYLE_NORMAL","TITLE_STYLE_NORMAL","CLOSE_ICON_STYLE_NORMAL","onSelect","iconSpan","splitHorEntry","splitVerEntry","moreMenuEntry","tabs","TABS_STYLE","spacer","menuIconStyle","MENU_ICON_STYLE","moveBeforeMenuItem","moveAfterMenuItem","moveBeforeMenuItems","moveAfterMenuItems","moreMenu","MENU_STYLE","VIEW_HEADER_STYLE","VIEW_BODY_STYLE","SELECTED_BG_COLOR","DARK_GRAY1","TITLE_STYLE_BASE","GRAY5","borderBottomStyle","borderBottomWidth","borderBottomColor","DETAILS_STYLE","MessageDetails","onCopyDetails","setShowDetails","ERROR_MESSAGE_STYLE","wordBreak","JobFailureDialog","handleConfirm","handleCopyReport","copyReport","jobTitle","report","traceback","reporting","messageDiv","iconIntent","FileDownloadDialog","handleOpenFilesOnClose","handleOpenFilesOpen","showFileOpenDialog","VIEW_TYPE_RENDERERS","world","table","ROOT_DIV_STYLE","MAIN_DIV_STYLE","AppMainPage","forceAppBar","fileSystemAPI","appServiceMode","appServiceURL","appServiceHostOS","appServiceVersion","appBar","trackPageView","useMatomo","customDimensions","LeftPanel","CenterPanel","RightPanel","desktopActions","isNativeUI","_LeftPanel","onLeftPanelContainerLayoutChange","onRightPanelContainerLayoutChange","onSelectedLeftTopPanelChange","onSelectedLeftBottomPanelChange","_RightPanel","onSelectedRightTopPanelChange","onSelectedRightBottomPanelChange","_CenterPanel","matomoInstance","setMatomoInstance","instance","createInstance","urlBase","siteId","heartBeat","linkTracking","configurations","disableCookies","setSecureCookie","setRequestMethod","MatomoProvider","CESIUM_BASE_URL","middlewares","thunkMiddleware","middleware","applyMiddleware","store","createStore","connectWebAPIService","search","URLSearchParams","origin","getServiceUrl","ReactDOM","getElementById","main","isInputAssigned","assignConstantValueInput","assignResourceNameInput","UPDATE_INITIAL_STATE","SET_WEBAPI_STATUS","SET_WEBAPI_AUTO_STOP_INFO","SET_WEBAPI_CLIENT","SET_WEBAPI_SERVICE_URL","SET_WEBAPI_SERVICE_INFO","UPDATE_HUB_STATUS","UPDATE_DIALOG_STATE","UPDATE_TASK_STATE","REMOVE_TASK_STATE","UPDATE_CONTROL_STATE","UPDATE_SESSION_STATE","INVOKE_CTX_OPERATION","setWebAPIStatus","setWebAPIClient","setWebAPIServiceURL","getState","handleFetchError","formatMessage","keepAlive","available_time","inactivity_time","remaining_time","keepAliveTimer","callAPI","getBackendConfig","updateBackendConfig","loadColorMaps","loadPreferences","loadDataStores","openWorkspace","newWorkspace","planB","requireDoneNotification","getOperations","UPDATE_OPERATIONS","updateOperations","keepAliveSeconds","closeDetails","reason","wasClean","updateDialogState","updateTaskState","removeTaskState","setControlProperty","updateControlState","invokeCtxOperation","invokeCtxOperationImpl","controlState","savePreferences","postAction","updatePreferences","setSessionProperty","sessionState","storeBackendConfig","showJobFailureDetails","startToastTimeoutHandler","disableNotifications","startToastDelay","jobPromise","jobProgress","startToastShown","setTimeout","jobSubmitted","jobResult","clearTimeout","notificationDisabled","jobFailed","SET_GLOBE_MOUSE_POSITION","SET_GLOBE_VIEW_POSITION","setGlobeMousePosition","setGlobeViewPositionImpl","setGlobeViewPosition","extractPixelValues","updateFsRootNode","force","subPathsToBeUpdated","subPath","subNode","updateSubPathFileNode","subPaths","api","ACTIVATE_NEW_PLACEMARK_TOOL","ADD_PLACEMARK","REMOVE_PLACEMARK","UPDATE_PLACEMARK_GEOMETRY","UPDATE_PLACEMARK_PROPERTIES","UPDATE_PLACEMARK_STYLE","activateNewPlacemarkTool","addPlacemark","addPointPlacemark","removePlacemark","updatePlacemarkStyle","locatePlacemark","headingPitchRange","zoomTo","setSelectedPlacemarkId","UPDATE_DATA_STORES","UPDATE_DATA_SOURCES","UPDATE_DATA_SOURCE_META_INFO","getDataStores","loadDataSources","setSelection","getDataSources","updateDataSources","setSelectedDataStoreIdImpl","updateDataSourceMetaInfo","getDataSourceMetaInfo","loadDataSourceMetaInfo","openDataset","updateLocalDataSources","ds_id","data_store_id","wrappedOpArgs","setWorkspaceResource","addLocalDataset","addLocalDataSource","removeLocalDataset","removeLocalDataSource","setSelectedOperationName","setOperationFilterTags","setOperationFilterExpr","showOperationStepDialog","hideOperationStepDialog","SET_CURRENT_WORKSPACE","UPDATE_WORKSPACE_NAMES","RENAME_RESOURCE","SHOW_FIGURE_VIEW","SHOW_ANIMATION_VIEW","SHOW_TABLE_VIEW","updateWorkspaceNames","workspacePath","setCurrentWorkspace","saveWorkspace","setSelectedWorkspaceResourceName","saveWorkspaceAs","deleteWorkspace","openLocalWorkspace","showSingleFileOpenDialog","maybeSaveCurrentWorkspace","listWorkspaces","openRemoteWorkspace","deleteRemoteWorkspace","closeWorkspace","cleanWorkspaceInteractive","answer","cleanWorkspace","deleteResourceInteractive","deleteWorkspaceResource","deleteResource","setCurrentWorkspaceImpl","setSelectedWorkspaceResourceNameImpl","isDefault","setSelectedVariable","setSelectedWorkflowStepId","setSelectedWorkflowStepIdImpl","isFigure","isAnimation","showFigureView","showAnimationView","setWorkspaceResourcePersistence","renameWorkspaceResource","renameWorkspaceResourceImpl","getWorkspaceVariableStatistics","showTableView","saveFigureImageAs","imageUrl","shell","openExternal","SET_SHOW_SELECTED_VARIABLE_LAYER","SET_SELECTED_VARIABLE","setShowSelectedVariableLayer","addVariableLayer","ADD_LAYER","setLeftPanelContainerLayout","setRightPanelContainerLayout","setSelectedLeftTopPanelId","setSelectedLeftBottomPanelId","setSelectedRightTopPanelId","setSelectedRightBottomPanelId","ADD_WORLD_VIEW","ADD_TABLE_VIEW","SELECT_VIEW","CLOSE_VIEW","SPLIT_VIEW_PANEL","CHANGE_VIEW_SPLIT_POS","MOVE_VIEW","addWorldView","closeView","closeAllViews","SET_VIEW_MODE","SET_PROJECTION_CODE","SET_LAYER_SPLIT_MODE","SET_LAYER_SPLIT_POSITION","SET_SELECTED_ENTITY_ID","INC_ENTITY_UPDATE_COUNT","UPDATE_ENTITY_STYLE","UPDATE_MOUSE_IDLE_STATE","setViewMode","setLayerSplitMode","setLayerSplitPosition","notifySelectedEntityChange","setSelectedEntityId","updateEntityStyle","updateEntityStyleImpl","UPDATE_TABLE_VIEW_DATA","updateTableViewData","loadTableViewData","restUrl","csvUrl","d3","UPDATE_ANIMATION_VIEW_DATA","loadAnimationViewData","htmlUrl","xmlHttp","XMLHttpRequest","onreadystatechange","setAnimationResult","responseText","SET_SELECTED_LAYER_ID","REMOVE_LAYER","UPDATE_LAYER","UPDATE_LAYER_STYLE","MOVE_LAYER_UP","MOVE_LAYER_DOWN","SAVE_LAYER","SET_BASE_MAP_ID","setSelectedLayerId","moveLayerUp","moveLayerDown","updateLayer","layerProperties","updateLayerImpl","saveLayer","updateLayerStyle","setStyleContext","setBaseMap","UPDATE_COLOR_MAPS","getColorMaps","updateColorMaps","showPreferencesDialog","hidePreferencesDialog","showShutdownDialog","OPEN_DIRECTORY_SELECT_DIALOG","CLOSE_DIRECTORY_SELECT_DIALOG","closeDirectorySelectDialog","openDirectorySelectDialog","OPEN_FILE_OPEN_DIALOG","CLOSE_FILE_OPEN_DIALOG","closeFileOpenDialog","openFileOpenDialog","OPEN_FILE_SAVE_DIALOG","CLOSE_FILE_SAVE_DIALOG","showFileSaveDialog","closeFileSaveDialog","openFileSaveDialog","OPEN_MESSAGE_BOX","CLOSE_MESSAGE_BOX","messageBoxOptions","closeMessageBox","openMessageBox","OPEN_FILE_BROWSE_DIALOG","CLOSE_FILE_BROWSE_DIALOG","showItemInFolder","fullPath","copyTextToClipboard","hasElectron","clipboard","writeText","copyToClipboard","uploadFiles","downloadFiles","functionName","suffix","_handlersInstalled","installGlobalHandlers","on","initialState","updateInitialState","dataTransfer","readDroppedFile","dropWorkspaceResource","newDesktopActions","once","actionName","openItem","onCopy"],"mappings":"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","file":"static/js/main.327da9f8.chunk.js","sourcesContent":["import { SessionState } from \"./state\";\r\nimport { JobPromise, WebAPIClient } from \"./webapi\";\r\n\r\n\r\n/**\r\n * This interface provides access to a particular domain's session or local storage.\r\n * It allows, for example, the addition, modification, or deletion of stored data items.\r\n */\r\nexport class RemoteStorageAPI {\r\n    private readonly webAPIClient: WebAPIClient;\r\n\r\n    constructor(webAPIClient: WebAPIClient) {\r\n        this.webAPIClient = webAPIClient;\r\n    }\r\n\r\n    loadPreferences(): JobPromise<Partial<SessionState>> {\r\n        return this.webAPIClient.call('get_preferences', []);\r\n    }\r\n\r\n    updatePreferences(session: Partial<SessionState>): JobPromise<Partial<SessionState>> {\r\n        return this.webAPIClient.call('set_preferences', [session]);\r\n    }\r\n}\r\n","import { v4 as uuidv4 } from 'uuid'\r\nimport { HttpError } from '../HttpError';\r\n\r\nexport type QueryComponent = [string, string];\r\n\r\nexport function makeUrl(url: string, queryComponents?: QueryComponent[]) {\r\n    if (queryComponents && queryComponents.length > 0) {\r\n        const queryString = queryComponents.map(kv => kv.map(encodeURIComponent).join('=')).join('&');\r\n        url += '?' + queryString;\r\n    }\r\n    return url;\r\n}\r\n\r\nexport function callApi(endpointUrl: string, queryComponents?: QueryComponent[], init?: RequestInit): Promise<Response> {\r\n    const url = makeUrl(endpointUrl, queryComponents);\r\n\r\n    console.debug('Calling API: ', url);\r\n\r\n    return fetch(url, init)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                console.log(response);\r\n                throw new HttpError(response.status, response.statusText);\r\n            }\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            throw error;\r\n        });\r\n}\r\n\r\n\r\nfunction download(blob: Blob, fileName?: string) {\r\n    if (!fileName) {\r\n        const suffix = uuidv4();\r\n        fileName = 'cate_' + suffix + '.zip';\r\n    }\r\n    const objectUrl: string = URL.createObjectURL(blob);\r\n    const a: HTMLAnchorElement = document.createElement('a') as HTMLAnchorElement;\r\n\r\n    a.href = objectUrl;\r\n    a.download = fileName;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(objectUrl);\r\n}\r\n\r\n\r\nexport function callBlobApi(endpointUrl: string, queryComponents?: QueryComponent[], init?: RequestInit, fileName?: string)\r\n    : Promise<Blob> {\r\n    return callApi(endpointUrl, queryComponents, init).then(response => response.blob())\r\n        .then((blob: Blob) => {\r\n            download(blob, fileName);\r\n\r\n            return blob;\r\n        });\r\n}\r\n\r\n\r\nexport function callJsonApi<T>(endpointUrl: string, queryComponents?: QueryComponent[], init?: RequestInit): Promise<T> {\r\n    return callApi(endpointUrl, queryComponents, init).then(response => response.json());\r\n}","import { callBlobApi, callJsonApi } from \"./callHttpApi\";\r\nimport { WebAPIClient } from \"../WebAPIClient\";\r\nimport { JobProgress, JobPromise } from \"../Job\";\r\n\r\n\r\ninterface ResponseStatus {\r\n    status: 'info' | 'success' | 'notification' | 'warning' | 'error';\r\n    message?: string;\r\n}\r\n\r\n\r\nexport interface ProcessState {\r\n    process_id: string;\r\n}\r\n\r\nexport class FilesAPI {\r\n    private readonly webAPIClient: WebAPIClient;\r\n\r\n    constructor(webAPIClient: WebAPIClient) {\r\n        this.webAPIClient = webAPIClient;\r\n    }\r\n\r\n    monitorProcess(processId: string,\r\n                   onProgress: (progress: JobProgress) => void): JobPromise<void> {\r\n        return this.webAPIClient.call('monitor_download_files',\r\n                                      [processId],\r\n                                      onProgress,\r\n                                      () => {\r\n                                      });\r\n    }\r\n\r\n    registerProcess(serviceUrl: string) {\r\n        return callJsonApi<ProcessState>(\r\n            serviceUrl + '/files/download',\r\n            undefined,\r\n            {\r\n                mode: 'cors',\r\n                method: 'PUT',\r\n                body: JSON.stringify({}),\r\n            });\r\n    }\r\n\r\n    uploadFiles(dir: string, file: File, serviceUrl: string) {\r\n        let formData = new FormData();\r\n\r\n        formData.append('dir', dir);\r\n        formData.append('files', file, file.name);\r\n\r\n        return callJsonApi<ResponseStatus>(serviceUrl + '/files/upload',\r\n                                           undefined,\r\n                                           {\r\n                                               mode: 'cors',\r\n                                               method: 'POST',\r\n                                               body: formData,\r\n                                           });\r\n    }\r\n\r\n    downloadFiles(filePaths: string[], processId: string, serviceUrl: string) {\r\n        const target_files = {'target_files': filePaths, 'process_id': processId};\r\n\r\n        return callBlobApi(serviceUrl + '/files/download',\r\n                           undefined,\r\n                           {\r\n                               mode: 'cors',\r\n                               method: 'POST',\r\n                               body: JSON.stringify(target_files)\r\n                           }\r\n        );\r\n    }\r\n}\r\n","import { createSelector, Selector } from 'reselect';\nimport * as Cesium from 'cesium';\n\nimport { requireElectron } from './electron';\nimport {\n    canOpenDataSource,\n    canCacheDataSource,\n    canMapDataSource,\n    canConstrainDataSourceRegion,\n    canConstrainDataSourceTime,\n    canConstrainDataSourceVariables,\n    DEFAULT_BASE_MAP,\n    DEFAULT_BASE_MAP_ID, getWorkspaceId,\n} from './state-util';\nimport {\n    BaseMapState,\n    ColorMapCategoryState,\n    ColorMapState,\n    DataSourceState,\n    DataStoreState,\n    DialogState,\n    FigureViewDataState,\n    GeographicPosition,\n    ImageLayerState,\n    LayerState,\n    LayerVariableState,\n    OperationState,\n    Placemark,\n    PlacemarkCollection,\n    ResourceState,\n    ResourceVectorLayerState,\n    SavedLayers,\n    State,\n    STYLE_CONTEXT_ENTITY,\n    STYLE_CONTEXT_LAYER,\n    VariableImageLayerState,\n    VariableLayerBase,\n    VariableState,\n    VectorLayerState, \n    WebAPIServiceInfo, \n    WebAPIStatus,\n    WorkflowStepState,\n    WorkspaceState,\n    WorldViewDataState\n} from './state';\nimport { JobStatusEnum, WebAPIClient } from './webapi';\nimport { BackendConfigAPI, ColorMapsAPI, DatasetAPI, OperationAPI, WorkspaceAPI, FileSystemAPI } from './webapi';\nimport { PanelContainerLayout } from './components/PanelContainer';\nimport {\n    EXTERNAL_OBJECT_STORE,\n    findOperation,\n    getLockForGetWorkspaceVariableStatistics,\n    getWorldViewSelectedEntity,\n    getWorldViewSelectedGeometryWKTGetter,\n    getWorldViewVectorLayerForEntity,\n    getWorldViewViewer,\n    isAnimationResource,\n    isFigureResource,\n    isSpatialImageVariable,\n    isSpatialVectorVariable,\n} from './state-util';\nimport { ViewLayoutState, ViewState } from './components/ViewState';\nimport { isNumber } from '../common/types';\nimport { GeometryWKTGetter } from './containers/editor/ValueEditor';\nimport { BaseMapOptions, entityToSimpleStyle } from './components/cesium/cesium-util';\nimport { SIMPLE_STYLE_DEFAULTS, SimpleStyle, simpleStyleFromFeatureProperties } from '../common/geojson-simple-style';\nimport { GeometryToolType } from './components/cesium/geometry-tool';\nimport { RemoteStorageAPI } from \"./remoteStorageAPI\";\nimport { FilesAPI } from \"./webapi/apis/FilesApi\";\n\n\nconst electron = requireElectron();\n\nexport const EMPTY_OBJECT = {};\nexport const EMPTY_ARRAY = [];\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Application selectors\n\nexport const offlineModeSelector = (state: State): boolean => state.session.offlineMode;\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Remote API selectors\n\nexport const webAPIServiceInfoSelector = (state: State): WebAPIServiceInfo | null => state.communication.webAPIServiceInfo;\nexport const webAPIStatusSelector = (state: State): WebAPIStatus | null => state.communication.webAPIStatus;\nexport const webAPIClientSelector = (state: State): WebAPIClient | null => state.communication.webAPIClient;\nexport const webAPIServiceURLSelector = (state: State): string => state.communication.webAPIServiceURL;\n\nexport const isLocalFSAccessAllowedSelector = (state: State): boolean => {\n    // Note that once we have ChooseWorkspaceDialog and SelectWorkspaceDialog with directory choosers,\n    // we can get rid of the electron requirement here.\n    return !!electron\n           && !!electron.ipcRenderer\n           && !!state.communication.webAPIServiceInfo\n           && !state.communication.webAPIServiceInfo.userRootMode;\n};\n\nexport const webAPIRestUrlSelector = createSelector(\n    webAPIServiceURLSelector,\n    (webAPIServiceURL: string) => {\n        return getRestUrl(webAPIServiceURL);\n    }\n);\n\nexport const apiWebSocketsUrlSelector = createSelector(\n    webAPIServiceURLSelector,\n    (webAPIServiceURL: string) => {\n        return getAPIWebSocketsUrl(webAPIServiceURL);\n    }\n);\n\nexport const mplWebSocketUrlSelector = createSelector(\n    webAPIServiceURLSelector,\n    (webAPIServiceURL: string) => {\n        return getMPLWebSocketsUrl(webAPIServiceURL);\n    }\n);\n\nfunction getRestUrl(webAPIServiceURL: string): string {\n    return makeURL(webAPIServiceURL, false, '/');\n}\n\nfunction getAPIWebSocketsUrl(webAPIServiceURL: string): string {\n    return makeURL(webAPIServiceURL, true, 'api');\n}\n\nfunction getMPLWebSocketsUrl(webAPIServiceURL: string): string {\n    return makeURL(webAPIServiceURL, true, 'mpl/figures/');\n}\n\nfunction makeURL(url: string, ws: boolean, path: string): string {\n    // console.log(`>> makeUrl: [${url}] [${ws}] [${path}]`);\n    const _url = new URL(url);\n    const protocol = ws ? (_url.protocol === 'https:' ? 'wss:' : 'ws:') : _url.protocol;\n    const pathname = _url.pathname;\n    let newUrl = `${protocol}//${_url.host}`;\n    if (pathname && pathname !== '/') {\n        newUrl += pathname\n    }\n    if (path) {\n        if (!(path.startsWith('/') || newUrl.endsWith('/'))) {\n            newUrl += '/';\n        }\n        newUrl += path\n    }\n    // console.log(`<< makeUrl: [${newUrl}]`);\n    return newUrl;\n}\n\nexport const backendConfigAPISelector = createSelector(\n    webAPIClientSelector,\n    (webAPIClient) => {\n        return new BackendConfigAPI(webAPIClient);\n    }\n);\n\n\nexport const datasetAPISelector = createSelector(\n    webAPIClientSelector,\n    (webAPIClient) => {\n        return new DatasetAPI(webAPIClient);\n    }\n);\n\nexport const operationAPISelector = createSelector(\n    webAPIClientSelector,\n    (webAPIClient) => {\n        return new OperationAPI(webAPIClient);\n    }\n);\n\n\nexport const workspaceAPISelector = createSelector(\n    webAPIClientSelector,\n    (webAPIClient) => {\n        return new WorkspaceAPI(webAPIClient);\n    }\n);\n\n\nexport const remoteStorageAPISelector = createSelector(\n    webAPIClientSelector,\n    (webAPIClient) => {\n        return new RemoteStorageAPI(webAPIClient);\n    }\n);\n\n\nexport const colorMapsAPISelector = createSelector(\n    webAPIClientSelector,\n    (webAPIClient) => {\n        return new ColorMapsAPI(webAPIClient);\n    }\n);\n\nexport const fileSystemAPISelector = createSelector(\n    webAPIClientSelector,\n    (webAPIClient) => {\n        return webAPIClient !== null ? new FileSystemAPI(webAPIClient) : null;\n    }\n);\n\nexport const activeRequestLocksSelector = (state: State): Set<string> => {\n    const activeRequestLocks = new Set<string>();\n    for (let jobId in state.communication.tasks) {\n        const task = state.communication.tasks[jobId];\n        if (task.status === JobStatusEnum.NEW ||\n            task.status === JobStatusEnum.SUBMITTED ||\n            task.status === JobStatusEnum.IN_PROGRESS) {\n            activeRequestLocks.add(task.requestLock);\n        }\n    }\n    return activeRequestLocks;\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Dialog state selectors\n\nconst DIALOG_STATE_SELECTORS: { [dialogId: string]: Selector<State, DialogState> } = {};\n\nexport const dialogStatesSelector = (state: State): { [dialogId: string]: DialogState } => state.control.dialogs;\n\nexport const dialogStateSelector = (dialogId: string) => {\n    if (!DIALOG_STATE_SELECTORS[dialogId]) {\n        DIALOG_STATE_SELECTORS[dialogId] = createSelector<State, DialogState, { [dialogId: string]: DialogState }>(\n            dialogStatesSelector,\n            (dialogStates: { [dialogId: string]: DialogState }) => dialogStates[dialogId] || EMPTY_OBJECT\n        );\n    }\n    return DIALOG_STATE_SELECTORS[dialogId];\n};\n\nexport const isDialogOpenSelector = createSelector(\n    dialogStatesSelector,\n    (dialogStates: { [dialogId: string]: DialogState }) => {\n        return Object.getOwnPropertyNames(dialogStates).some(dialogId => dialogStates[dialogId].isOpen);\n    }\n);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AppMainPage layout selectors\n\nexport const panelContainerUndockedModeSelector = (state: State): boolean => state.session.panelContainerUndockedMode;\n\nexport const leftPanelContainerLayoutSelector = (state: State): PanelContainerLayout => state.session.leftPanelContainerLayout;\nexport const rightPanelContainerLayoutSelector = (state: State): PanelContainerLayout => state.session.rightPanelContainerLayout;\n\nexport const selectedLeftTopPanelIdSelector = (state: State): string | null => state.session.selectedLeftTopPanelId;\nexport const selectedLeftBottomPanelIdSelector = (state: State): string\n    | null => state.session.selectedLeftBottomPanelId;\nexport const selectedRightTopPanelIdSelector = (state: State): string | null => state.session.selectedRightTopPanelId;\nexport const selectedRightBottomPanelIdSelector = (state: State): string\n    | null => state.session.selectedRightBottomPanelId;\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Placemark selectors\n\nexport const newPlacemarkToolTypeSelector = (state: State): GeometryToolType => state.control.newPlacemarkToolType;\nexport const placemarkCollectionSelector = (state: State): PlacemarkCollection => state.session.placemarkCollection;\nexport const placemarksSelector = (state: State): Placemark[] => state.session.placemarkCollection.features;\nexport const selectedPlacemarkIdSelector = (state: State): string | null => state.session.selectedPlacemarkId;\nexport const showPlacemarkDetailsSelector = (state: State): boolean => state.session.showPlacemarkDetails;\nexport const defaultPlacemarkStyleSelector = (state: State): SimpleStyle => state.session.defaultPlacemarkStyle;\n\nexport const selectedPlacemarkSelector = createSelector<State,\n    Placemark | null,\n    Placemark[],\n    string | null>(\n    placemarksSelector,\n    selectedPlacemarkIdSelector,\n    (placemarks: Placemark[], selectedPlacemarkId: string | null) => {\n        if (canFind(placemarks, selectedPlacemarkId)) {\n            return placemarks.find(placemark => placemark.id === selectedPlacemarkId);\n        }\n        return null;\n    }\n);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Location selectors\n\nexport const globeMousePositionSelector = (state: State): GeographicPosition | null => state.location.globeMousePosition;\nexport const globeViewPositionSelector = (state: State): GeographicPosition | null => state.location.globeViewPosition;\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Operation selectors\n\nexport const operationsSelector = (state: State): OperationState[] | null => state.data.operations;\nexport const operationFilterTagsSelector = (state: State): string[] | null => state.session.operationFilterTags;\nexport const operationFilterExprSelector = (state: State): string | null => state.session.operationFilterExpr;\nexport const selectedOperationNameSelector = (state: State): string | null => state.session.selectedOperationName;\nexport const selectedCtxOperationNameSelector = (state: State): string | null => state.control.selectedCtxOperationName;\n\nexport const selectedOperationSelector = createSelector<State, OperationState | null, OperationState[] | null,\n    string | null>(\n    operationsSelector,\n    selectedOperationNameSelector,\n    (operations, selectedOperationName) => {\n        if (operations && operations.length && selectedOperationName) {\n            return operations.find(op => op.name === selectedOperationName);\n        }\n        return null;\n    }\n);\n\nexport const selectedCtxOperationSelector = createSelector<State, OperationState | null, OperationState[] | null,\n    string | null>(\n    operationsSelector,\n    selectedCtxOperationNameSelector,\n    (operations, selectedOperationName) => {\n        if (operations && operations.length && selectedOperationName) {\n            return operations.find(op => op.name === selectedOperationName);\n        }\n        return null;\n    }\n);\n\nexport const filteredOperationsSelector = createSelector<State, OperationState[], OperationState[] | null,\n    string[]\n    | null, string | null>(\n    operationsSelector,\n    operationFilterTagsSelector,\n    operationFilterExprSelector,\n    (operations, operationFilterTags, operationFilterExpr) => {\n        const hasOperations = operations && operations.length;\n        const hasFilterExpr = operationFilterExpr && operationFilterExpr !== '';\n        const hasFilterTags = operationFilterTags && operationFilterTags.length;\n        if (hasOperations && (hasFilterExpr || hasFilterTags)) {\n            let nameMatches;\n            if (hasFilterExpr) {\n                const filterExprLC = operationFilterExpr.toLowerCase();\n                const parts = filterExprLC.split(' ');\n                nameMatches = op => {\n                    return parts.every(part => op.name.toLowerCase().includes(part));\n                };\n            } else {\n                // noinspection JSUnusedLocalSymbols\n                nameMatches = op => true;\n            }\n            let hasTag;\n            if (hasFilterTags) {\n                hasTag = op => !operationFilterTags.length || operationFilterTags.every(tag => new Set(op.tags).has(tag));\n            } else {\n                // noinspection JSUnusedLocalSymbols\n                hasTag = op => true;\n            }\n            return operations.filter(op => nameMatches(op) && hasTag(op));\n        }\n        return operations || EMPTY_ARRAY;\n    }\n);\n\nexport const operationsTagCountsSelector = createSelector<State, Map<string, number>, OperationState[] | null>(\n    operationsSelector,\n    (operations) => {\n        let tagCounts = new Map<string, number>();\n        (operations || EMPTY_ARRAY).forEach((op: OperationState) => (op.tags || EMPTY_ARRAY).forEach((tag: string) => {\n            tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);\n        }));\n        return tagCounts;\n    }\n);\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Data store and data source selectors\n\nexport const dataStoresSelector = (state: State) => state.data.dataStores;\nexport const selectedDataStoreIdSelector = (state: State) => state.session.selectedDataStoreId;\nexport const selectedDataSourceIdSelector = (state: State) => state.session.selectedDataSourceId;\nexport const dataSourceFilterExprSelector = (state: State) => state.session.dataSourceFilterExpr;\nexport const dataSourceListHeightSelector = (state: State) => state.session.dataSourceListHeight;\nexport const showDataSourceDetailsSelector = (state: State) => state.session.showDataSourceDetails;\nexport const showAllDataSourcesSelector = (state: State): boolean => state.session.showAllDataSources;\nexport const showDataSourceIDsSelector = (state: State): boolean => state.session.showDataSourceIDs;\nexport const showDataStoreDescriptionSelector = (state: State): boolean => state.session.showDataStoreDescription;\nexport const showDataStoreNoticesSelector = (state: State): boolean => state.session.showDataStoreNotices;\n\nexport const selectedDataStoreSelector = createSelector<State, DataStoreState | null,\n    DataStoreState[] | null,\n    string | null>(\n    dataStoresSelector,\n    selectedDataStoreIdSelector,\n    (dataStores, selectedDataStoreId) => {\n        if (canFind(dataStores, selectedDataStoreId)) {\n            return dataStores.find(dataStore => dataStore.id === selectedDataStoreId);\n        }\n        return null;\n    }\n);\n\nexport const selectedDataSourcesSelector = createSelector<State, DataSourceState[] | null,\n    DataStoreState | null>(\n    selectedDataStoreSelector,\n    (selectedDataStore) => {\n        return (selectedDataStore && selectedDataStore.dataSources) || null;\n    }\n);\n\nexport const filteredDataSourcesSelector = createSelector<State, DataSourceState[] | null,\n    DataSourceState[] | null,\n    string | null,\n    boolean>(\n    selectedDataSourcesSelector,\n    dataSourceFilterExprSelector,\n    showAllDataSourcesSelector,\n    (selectedDataSources, dataSourceFilterExpr, showAllDataSources) => {\n        const hasDataSources = selectedDataSources && selectedDataSources.length;\n        const hasFilterExpr = dataSourceFilterExpr && dataSourceFilterExpr !== '';\n        if (hasDataSources && (hasFilterExpr || !showAllDataSources)) {\n            const dataSourceFilterExprLC = dataSourceFilterExpr.toLowerCase();\n            const parts = dataSourceFilterExprLC.split(' ');\n            return selectedDataSources.filter(ds => matchesIdOrTitle(ds, showAllDataSources, parts));\n        }\n        return selectedDataSources;\n    }\n);\n\nfunction matchesIdOrTitle(ds: DataSourceState, showAllDataSources: boolean, searchWords: string[]) {\n    let isCandidate = showAllDataSources || canOpenDataSource(ds);\n    if (!isCandidate) {\n        return false;\n    }\n    const id = ds.id.toLowerCase();\n    if (searchWords.every(word => id.includes(word))) {\n        return true;\n    }\n    let title = ds.title || (ds.metaInfo ? ds.metaInfo.title : null);\n    if (!title || title === '') {\n        return false;\n    }\n    title = title.toLowerCase();\n    return searchWords.every(word => title.includes(word));\n}\n\nexport const selectedDataSourceSelector = createSelector<State, DataSourceState | null, DataSourceState[] | null,\n    string\n    | null>(\n    selectedDataSourcesSelector,\n    selectedDataSourceIdSelector,\n    (selectedDataSources, selectedDataSourceId) => {\n        if (canFind(selectedDataSources, selectedDataSourceId)) {\n            return selectedDataSources.find(dataSource => dataSource.id === selectedDataSourceId);\n        }\n        return null;\n    }\n);\n\nexport const selectedDataSourceTemporalCoverageSelector = createSelector<State,\n    [string | null, string | null] | null,\n    DataSourceState\n    | null>(\n    selectedDataSourceSelector,\n    (selectedDataSource: DataSourceState): [string | null, string | null] | null => {\n        return (selectedDataSource\n                && selectedDataSource.metaInfo\n                && selectedDataSource.metaInfo.time_range) || null;\n    }\n);\n\nexport const canCacheDataSourceSelector = createSelector<State, boolean, string | null, DataSourceState | null>(\n    selectedDataStoreIdSelector,\n    selectedDataSourceSelector,\n    (selectedDataStoreId, selectedDataSource): boolean => {\n        if (selectedDataStoreId === null\n            || selectedDataStoreId === 'local'\n            || selectedDataStoreId === 'cci-zarr-store') {\n            return false;\n        }\n        return selectedDataSource ? canCacheDataSource(selectedDataSource) : false;\n    }\n);\n\nexport const canMapDataSourceSelector = createSelector<State, boolean, DataSourceState | null>(\n    selectedDataSourceSelector,\n    (selectedDataSource: DataSourceState | null): boolean => {\n        return selectedDataSource ? canMapDataSource(selectedDataSource) : false;\n    }\n);\n\nexport const canConstrainDataSourceTimeSelector = createSelector<State, boolean, DataSourceState | null>(\n    selectedDataSourceSelector,\n    (selectedDataSource: DataSourceState | null): boolean => {\n        return selectedDataSource && canConstrainDataSourceTime(selectedDataSource);\n    }\n);\n\nexport const canConstrainDataSourceRegionSelector = createSelector<State, boolean, DataSourceState | null>(\n    selectedDataSourceSelector,\n    (selectedDataSource: DataSourceState | null): boolean => {\n        return selectedDataSource && canConstrainDataSourceRegion(selectedDataSource);\n    }\n);\n\nexport const canConstrainDataSourceVariablesSelector = createSelector<State, boolean, DataSourceState | null>(\n    selectedDataSourceSelector,\n    (selectedDataSource: DataSourceState | null): boolean => {\n        return selectedDataSource && canConstrainDataSourceVariables(selectedDataSource);\n    }\n);\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Workspace, resource, step, and variable selectors\n\nexport const workspaceSelector = (state: State): WorkspaceState | null => {\n    return state.data.workspace;\n};\nexport const isScratchWorkspaceSelector = (state: State): boolean => {\n    return state.data.workspace && state.data.workspace.isScratch;\n};\nexport const workspaceBaseDirSelector = (state: State): string | null => {\n    return state.data.workspace && state.data.workspace.baseDir;\n};\nexport const resourcesSelector = (state: State): ResourceState[] => {\n    return state.data.workspace ? state.data.workspace.resources : EMPTY_ARRAY;\n};\nexport const workflowStepsSelector = (state: State): WorkflowStepState[] => {\n    return state.data.workspace ? state.data.workspace.workflow.steps : EMPTY_ARRAY;\n};\nexport const lastWorkspacePathSelector = (state: State): string | null => {\n    return state.session.lastWorkspacePath;\n};\nexport const resourceListHeightSelector = (state: State): number => {\n    return state.session.resourceListHeight;\n};\nexport const showResourceDetailsSelector = (state: State): boolean => {\n    return state.session.showResourceDetails;\n};\nexport const selectedResourceNameSelector = (state: State): string | null => {\n    return state.control.selectedWorkspaceResourceName;\n};\nexport const workflowStepListHeightSelector = (state: State): number => {\n    return state.session.workflowStepListHeight;\n};\nexport const showWorkflowStepDetailsSelector = (state: State): boolean => {\n    return state.session.showWorkflowStepDetails;\n};\nexport const selectedWorkflowStepIdSelector = (state: State): string | null => {\n    return state.control.selectedWorkflowStepId || selectedResourceNameSelector(state);\n};\nexport const selectedVariableNameSelector = (state: State): string | null => {\n    return state.control.selectedVariableName;\n};\n\nexport const workspaceIdSelector = createSelector<State, string | null, WorkspaceState | null>(\n    workspaceSelector,\n    (workspace: WorkspaceState | null) => {\n        return workspace !== null ? getWorkspaceId(workspace) : null;\n    }\n);\n\nexport const workspaceNameSelector = createSelector<State, string | null, string | null>(\n    workspaceBaseDirSelector,\n    (baseDir: string | null) => {\n        return getFileName(baseDir);\n    }\n);\n\nexport const workspaceDirSelector = createSelector<State, string | null, string | null>(\n    workspaceBaseDirSelector,\n    (baseDir: string | null) => {\n        return getParentDir(baseDir);\n    }\n);\n\nexport const lastWorkspaceDirSelector = createSelector<State, string | null, string | null>(\n    lastWorkspacePathSelector,\n    (baseDir: string | null) => {\n        return getParentDir(baseDir);\n    }\n);\n\nfunction getFileName(path: string | null): string | null {\n    if (!path) {\n        return null;\n    }\n    let index = Math.max(path.lastIndexOf('/'), path.lastIndexOf('\\\\'));\n    return index >= 0 ? path.substring(index + 1) : path;\n}\n\nfunction getParentDir(path: string | null): string | null {\n    if (!path) {\n        return null;\n    }\n    let index = Math.max(path.lastIndexOf('/'), path.lastIndexOf('\\\\'));\n    return index >= 0 ? path.substring(0, index) : '';\n}\n\nexport const resourceNamesSelector = createSelector<State, string[], ResourceState[]>(\n    resourcesSelector,\n    (resources: ResourceState[]) => {\n        return resources.map(r => r.name)\n    }\n);\n\nexport const resourceMapSelector = createSelector<State, { [name: string]: ResourceState }, ResourceState[]>(\n    resourcesSelector,\n    (resources: ResourceState[]) => {\n        const resourceMap = {};\n        resources.forEach((resource => {\n            resourceMap[resource.name] = resource;\n        }));\n        return resourceMap;\n    }\n);\n\nexport const selectedResourceSelector = createSelector<State, ResourceState | null, ResourceState[], string>(\n    resourcesSelector,\n    selectedResourceNameSelector,\n    (resources: ResourceState[], selectedResourceName: string) => {\n        if (canFind(resources, selectedResourceName)) {\n            return resources.find(r => r.name === selectedResourceName);\n        }\n        return null;\n    }\n);\n\nexport const selectedResourceAttributesSelector = createSelector<State, string[][], ResourceState | null>(\n    selectedResourceSelector,\n    (selectedResource: ResourceState | null) => {\n        if (!selectedResource || !selectedResource.attributes) {\n            return EMPTY_ARRAY;\n        }\n        const array = [];\n        const attributes = selectedResource.attributes;\n        for (let attrName in attributes) {\n            if (attributes.hasOwnProperty(attrName)) {\n                array.push([attrName, attributes[attrName]])\n            }\n        }\n        return array;\n    }\n);\n\nexport const selectedWorkflowStepResourceSelector = createSelector<State, ResourceState | null, ResourceState[], string>(\n    resourcesSelector,\n    selectedWorkflowStepIdSelector,\n    (resources: ResourceState[], selectedWorkflowStepId: string) => {\n        if (canFind(resources, selectedWorkflowStepId)) {\n            return resources.find(r => r.name === selectedWorkflowStepId);\n        }\n        return null;\n    }\n);\n\nexport const selectedWorkflowStepSelector = createSelector<State,\n    WorkflowStepState | null,\n    WorkflowStepState[],\n    string>(\n    workflowStepsSelector,\n    selectedWorkflowStepIdSelector,\n    (workflowSteps: WorkflowStepState[], selectedWorkflowStepId: string) => {\n        if (canFind(workflowSteps, selectedWorkflowStepId)) {\n            return workflowSteps.find(r => r.id === selectedWorkflowStepId);\n        }\n        return null;\n    }\n);\n\nexport const selectedResourceWorkflowStepSelector = createSelector<State,\n    WorkflowStepState | null,\n    WorkflowStepState[],\n    string>(\n    workflowStepsSelector,\n    selectedResourceNameSelector,\n    (workflowSteps: WorkflowStepState[], selectedResourceName: string) => {\n        if (canFind(workflowSteps, selectedResourceName)) {\n            return workflowSteps.find(r => r.id === selectedResourceName);\n        }\n        return null;\n    }\n);\n\nexport const selectedWorkflowStepOpSelector = createSelector<State, OperationState | null, OperationState[] | null,\n    WorkflowStepState\n    | null>(\n    operationsSelector,\n    selectedWorkflowStepSelector,\n    (operations: OperationState[] | null, selectedWorkflowStep: WorkflowStepState | null) => {\n        if (operations && selectedWorkflowStep && selectedWorkflowStep.op) {\n            return findOperation(operations, selectedWorkflowStep.op);\n        }\n        return null;\n    }\n);\n\nexport const figureResourcesSelector = createSelector<State, ResourceState[], ResourceState[]>(\n    resourcesSelector,\n    (resources: ResourceState[]) => {\n        return resources.filter(r => isFigureResource(r))\n    }\n);\n\nexport const selectedFigureResourceSelector = createSelector<State, ResourceState | null, ResourceState | null>(\n    selectedResourceSelector,\n    (resource: ResourceState | null) => {\n        return resource && isFigureResource(resource) ? resource : null;\n    }\n);\n\nexport const animationResourcesSelector = createSelector<State, ResourceState[], ResourceState[]>(\n    resourcesSelector,\n    (resources: ResourceState[]) => {\n        return resources.filter(r => isAnimationResource(r))\n    }\n);\n\nexport const variablesSelector = createSelector<State, VariableState[] | null, ResourceState | null>(\n    selectedResourceSelector,\n    (selectedResource: ResourceState | null) => {\n        return selectedResource ? (selectedResource.variables || null) : null;\n    }\n);\n\n\nexport const selectedVariableSelector = createSelector<State, VariableState | null, VariableState[] | null,\n    string\n    | null>(\n    variablesSelector,\n    selectedVariableNameSelector,\n    (selectedVariables: VariableState[] | null, selectedVariableName: string | null) => {\n        if (canFind(selectedVariables, selectedVariableName)) {\n            return (selectedVariables || EMPTY_ARRAY).find(v => v.name === selectedVariableName);\n        }\n        return null;\n    }\n);\n\nexport const selectedVariableAttributesTableDataSelector = createSelector<State, [string, any][] | null, VariableState | null>(\n    selectedVariableSelector,\n    (selectedVariable: VariableState | null) => {\n        if (!selectedVariable) {\n            return null;\n        }\n        const tableData: [string, any][] = [\n            ['Data type', selectedVariable.dataType],\n            ['Units', selectedVariable.units || ''],\n            ['Valid minimum', selectedVariable.validMin],\n            ['Valid maximum', selectedVariable.validMax],\n            ['Dimension names', selectedVariable.dimNames && selectedVariable.dimNames.join(', ')],\n            ['Array shape', selectedVariable.shape && selectedVariable.shape.join(', ')],\n            ['Chunk sizes', selectedVariable.chunkSizes && selectedVariable.chunkSizes.join(', ')],\n            [' ', ''],\n        ];\n        let attributes = selectedVariable.attributes;\n        if (attributes) {\n            Object.getOwnPropertyNames(attributes).forEach(name => {\n                tableData.push([name, attributes[name]]);\n            });\n        }\n        return tableData;\n    }\n);\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// View selectors\n\nexport const viewLayoutSelector = (state: State): ViewLayoutState => state.control.viewLayout;\nexport const viewsSelector = (state: State): ViewState<any>[] => state.control.views;\nexport const activeViewIdSelector = (state: State): string | null => state.control.activeViewId;\n\nexport const figureViewsSelector = createSelector<State, ViewState<FigureViewDataState>[], ViewState<any>[]>(\n    viewsSelector,\n    (views: ViewState<any>[]) => {\n        return (views ? views.filter(view => view.type === 'figure') : EMPTY_ARRAY) as ViewState<FigureViewDataState>[];\n    }\n);\n\nexport const activeViewSelector = createSelector<State, ViewState<any> | null, ViewState<any>[], string | null>(\n    viewsSelector,\n    activeViewIdSelector,\n    (views: ViewState<any>[], activeViewId) => {\n        if (canFind(views, activeViewId)) {\n            return views.find(view => view.id === activeViewId);\n        }\n        return null;\n    }\n);\n\nexport const activeViewTypeSelector = createSelector<State, string | null, ViewState<any> | null>(\n    activeViewSelector,\n    (view: ViewState<any>) => {\n        return view ? view.type : null\n    }\n);\n\nexport const selectedEntityIdSelector = createSelector<State, string | null, ViewState<any> | null>(\n    activeViewSelector,\n    (view: ViewState<any>) => {\n        if (view && view.type === 'world') {\n            const data = view.data as WorldViewDataState;\n            return data.selectedEntityId;\n        }\n        return null;\n    }\n);\n\n// noinspection JSUnusedLocalSymbols\nexport const selectedEntitySelector = createSelector<State, Cesium.Entity | null, ViewState<any> | null, any>(\n    activeViewSelector,\n    selectedEntityIdSelector, // we need this to invalidate selector on selection changes in Cesium\n    (view: ViewState<any>, unusedEntityId: any) => {\n        return getWorldViewSelectedEntity(view);\n    }\n);\n\nexport const selectedWorldViewViewerSelector = createSelector<State, Cesium.Viewer | null, ViewState<any> | null>(\n    activeViewSelector,\n    (view: ViewState<any>) => {\n        return view ? getWorldViewViewer(view) : null;\n    }\n);\n\nexport const selectedGeometryWKTGetterSelector = createSelector<State, GeometryWKTGetter, ViewState<any> | null>(\n    activeViewSelector,\n    getWorldViewSelectedGeometryWKTGetter\n);\n\n// noinspection JSUnusedLocalSymbols\nexport const externalObjectStoreSelector = (state: State) => EXTERNAL_OBJECT_STORE;\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Layer selectors\n\nexport const savedLayersSelector = (state: State): SavedLayers => state.session.savedLayers;\n\nexport const selectedLayerIdSelector = createSelector<State, string | null, ViewState<any> | null>(\n    activeViewSelector,\n    (view: ViewState<any> | null) => {\n        return (view && view.data.selectedLayerId) || null;\n    }\n);\n\nexport const baseMapsSelector = (state: State) => state.data.baseMaps;\n\nexport const baseMapIdSelector = createSelector<State, string, BaseMapState[], ViewState<any> | null>(\n    baseMapsSelector,\n    activeViewSelector,\n    (baseMaps: BaseMapState[], view: ViewState<any> | null) => {\n        return (view\n                && view.data.baseMapId) || DEFAULT_BASE_MAP_ID;\n    }\n);\n\nexport const baseMapSelector = createSelector<State, BaseMapState, BaseMapState[], ViewState<any> | null>(\n    baseMapsSelector,\n    activeViewSelector,\n    (baseMaps: BaseMapState[], view: ViewState<any> | null) => {\n        return (view\n                && view.data.baseMapId\n                && baseMaps.find(bm => bm.id === view.data.baseMapId)) || DEFAULT_BASE_MAP;\n    }\n);\n\nexport const baseMapOptionsSelector = createSelector<State, BaseMapOptions | null, BaseMapState>(\n    baseMapSelector,\n    (baseMap: BaseMapState) => {\n        return baseMap.options;\n    }\n);\n\nexport const layersSelector = createSelector<State, LayerState[] | null, ViewState<any> | null>(\n    activeViewSelector,\n    (view: ViewState<any> | null) => {\n        return (view && view.data.layers) || null;\n    }\n);\n\nexport const selectedLayerSelector = createSelector<State, LayerState | null, LayerState[], string | null>(\n    layersSelector,\n    selectedLayerIdSelector,\n    (layers: LayerState[] | null, selectedLayerId: string | null): LayerState | null => {\n        if (canFind(layers, selectedLayerId)) {\n            return layers.find(l => l.id === selectedLayerId);\n        }\n        return null;\n    }\n);\n\nexport const selectedLayerIndexSelector = createSelector<State, number, LayerState[], string>(\n    layersSelector,\n    selectedLayerIdSelector,\n    (layers: LayerState[] | null, selectedLayerId: string | null): number => {\n        if (canFind(layers, selectedLayerId)) {\n            return layers.findIndex(l => l.id === selectedLayerId);\n        }\n        return -1;\n    }\n);\n\nexport const selectedImageLayerSelector = createSelector<State, ImageLayerState | null, LayerState | null>(\n    selectedLayerSelector,\n    (selectedLayer: LayerState | null) => {\n        if (selectedLayer && (selectedLayer.type === 'Image' || selectedLayer.type === 'VariableImage')) {\n            return selectedLayer as ImageLayerState;\n        }\n        return null;\n    }\n);\n\nexport const selectedVariableImageLayerSelector = createSelector<State, VariableImageLayerState | null,\n    LayerState | null>(\n    selectedLayerSelector,\n    (selectedLayer: LayerState | null) => {\n        if (selectedLayer && selectedLayer.type === 'VariableImage') {\n            return selectedLayer as VariableImageLayerState;\n        }\n        return null;\n    }\n);\n\nexport const selectedVariableImageLayerDisplayMinMaxSelector = createSelector<State,\n    [number, number] | null, VariableImageLayerState | null>(\n    selectedVariableImageLayerSelector,\n    (selectedLayer: VariableImageLayerState | null) => {\n        if (selectedLayer) {\n            const displayMin = isNumber(selectedLayer.displayMin) ? selectedLayer.displayMin : 0;\n            const displayMax = isNumber(selectedLayer.displayMax) ? selectedLayer.displayMax : displayMin + 1;\n            return [displayMin, displayMax];\n        }\n        return null;\n    }\n);\n\nexport const selectedVectorLayerSelector = createSelector<State, VectorLayerState | null,\n    LayerState | null>(\n    selectedLayerSelector,\n    (selectedLayer: LayerState | null) => {\n        if (selectedLayer && (selectedLayer.type === 'Vector' || selectedLayer.type === 'ResourceVector')) {\n            return selectedLayer as VectorLayerState;\n        }\n        return null;\n    }\n);\n\nexport const entityUpdateCountSelector = (state: State) => state.control.entityUpdateCount;\n\nexport const styleContextSelector = (state: State) => state.session.styleContext;\n\n// noinspection JSUnusedLocalSymbols\nexport const vectorStyleSelector = createSelector<State, SimpleStyle, ViewState<any>, string, VectorLayerState | null, Placemark | null, Cesium.Entity | null, number>(\n    activeViewSelector,\n    styleContextSelector,\n    selectedVectorLayerSelector,\n    selectedPlacemarkSelector,\n    selectedEntitySelector,\n    entityUpdateCountSelector,\n    (view: ViewState<any>, styleContext, selectedVectorLayer, selectedPlacemark, selectedEntity, entityUpdateCount) => {\n        const selectedLayerStyle = selectedVectorLayer && selectedVectorLayer.style;\n        let style;\n        if (styleContext === STYLE_CONTEXT_LAYER) {\n            style = selectedLayerStyle;\n        } else if (styleContext === STYLE_CONTEXT_ENTITY) {\n            if (selectedPlacemark) {\n                const placemarkStyle = simpleStyleFromFeatureProperties(selectedPlacemark.properties);\n                style = {...selectedLayerStyle, ...placemarkStyle};\n            } else if (selectedEntity) {\n                const entityStyle = entityToSimpleStyle(selectedEntity);\n                const entityVectorLayer = getWorldViewVectorLayerForEntity(view, selectedEntity);\n                const entityVectorLayerStyle = entityVectorLayer && entityVectorLayer.style;\n                const savedEntityStyle = entityVectorLayer\n                                         && entityVectorLayer.entityStyles\n                                         && entityVectorLayer.entityStyles[selectedEntity.id];\n                style = {...selectedLayerStyle, ...entityVectorLayerStyle, ...entityStyle, ...savedEntityStyle};\n            }\n        }\n        return {...SIMPLE_STYLE_DEFAULTS, ...style};\n    }\n);\n\nexport const selectedResourceVectorLayerSelector = createSelector<State, ResourceVectorLayerState | null,\n    LayerState | null>(\n    selectedLayerSelector,\n    (selectedLayer: LayerState | null) => {\n        if (selectedLayer && selectedLayer.type === 'ResourceVector') {\n            return selectedLayer as ResourceVectorLayerState;\n        }\n        return null;\n    }\n);\n\nexport const selectedLayerVariablesSelector = createSelector<State, LayerVariableState[] | null, ResourceState[]>(\n    resourcesSelector,\n    (resources: ResourceState[]) => {\n        const layerVariables = [];\n        for (let resource of resources) {\n            if (resource.variables) {\n                for (let variable of resource.variables) {\n                    if (isSpatialImageVariable(variable) || isSpatialVectorVariable(variable)) {\n                        layerVariables.push({resource, variable});\n                    }\n                }\n            }\n        }\n        return layerVariables;\n    }\n);\n\nexport const isComputingVariableStatistics = createSelector<State, boolean,\n    ResourceState | null, VariableState | null, VariableLayerBase | null, Set<string>>(\n    selectedResourceSelector,\n    selectedVariableSelector,\n    selectedVariableImageLayerSelector,\n    activeRequestLocksSelector,\n    (selectedResource: ResourceState | null,\n     selectedVariable: VariableState | null,\n     selectedVariableImageLayer: VariableLayerBase | null,\n     activeRequestLocks: Set<string>) => {\n        const imageLayer = selectedVariableImageLayer;\n        if (!selectedResource || !selectedVariable || !imageLayer) {\n            return false;\n        }\n        const requestLock = getLockForGetWorkspaceVariableStatistics(selectedResource.name,\n                                                                     selectedVariable.name,\n                                                                     imageLayer.varIndex);\n        return activeRequestLocks.has(requestLock);\n    }\n);\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Color map selectors\n\nexport const colorMapCategoriesSelector = (state: State): Array<ColorMapCategoryState> => state.data.colorMaps;\n\nexport const selectedColorMapSelector = createSelector<State, ColorMapState, ColorMapCategoryState[] | null,\n    VariableImageLayerState\n    | null>(\n    colorMapCategoriesSelector,\n    selectedVariableImageLayerSelector,\n    (colorMapCategories: ColorMapCategoryState[] | null, selectedImageLayer: VariableImageLayerState | null) => {\n        const selectedColorMapName = selectedImageLayer ? selectedImageLayer.colorMapName : null;\n        if (canFind(colorMapCategories, selectedColorMapName)) {\n            for (let cat of colorMapCategories) {\n                const selectedColorMap = cat.colorMaps.find(cm => cm.name === selectedColorMapName);\n                if (selectedColorMap) {\n                    return selectedColorMap;\n                }\n            }\n        }\n        return null;\n    }\n);\n\nexport const fileAPISelector = createSelector(\n    webAPIClientSelector,\n    (webAPIClient) => {\n        return new FilesAPI(webAPIClient);\n    }\n);\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Utilities\n\nfunction canFind(array: any[], id: string): boolean {\n    return array && array.length && !!id;\n}\n\n\n","/**\r\n * Object functions used to improve readability of Redux reducer code.\r\n *\r\n * @author Norman Fomferra\r\n */\r\n\r\nimport { isDefined, isUndefined } from './types';\r\n\r\n/**\r\n * Encapsulate the idea of passing a new object as the first parameter\r\n * to <code>Object.assign</code> to ensure we correctly copy data instead of mutating.\r\n *\r\n * @param target The target object\r\n * @param sources The source objects\r\n * @returns a new {Object}\r\n */\r\nexport function updateObject(target, ...sources) {\r\n    return Object.assign({}, target, ...sources);\r\n}\r\n\r\n/**\r\n * Similar to <code>updateObject()</code> but updates just the given property in *target*.\r\n *\r\n * @param target The target object\r\n * @param propertyName The property's name.\r\n * @param newValue The property's new value.\r\n * @returns a new {Object}\r\n */\r\nexport function updatePropertyObject(target, propertyName: string, newValue) {\r\n    const oldValue = target[propertyName];\r\n    return updateObject(target, {[propertyName]: updateObject(oldValue, newValue)});\r\n}\r\n\r\n/**\r\n * Similar to <code>updateObject()</code> but will only assign a property if\r\n * a given *source* property is undefined in *target*.\r\n *\r\n * @param target The target object\r\n * @param sources The source objects\r\n * @returns a new {Object}\r\n */\r\nexport function updateConditionally(target, ...sources) {\r\n    target = {...target};\r\n    for (let source of sources) {\r\n        if (isDefined(source)) {\r\n            for (let name of Object.keys(source)) {\r\n                if (isUndefined(target[name])) {\r\n                    target[name] = source[name];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\n\r\n// TODO (nf): test & find better name\r\nexport function updateConditionally2(target, ...sources) {\r\n    target = {...target};\r\n    for (let source of sources) {\r\n        if (isDefined(source)) {\r\n            for (let name of Object.keys(source)) {\r\n                if (isDefined(source[name])) {\r\n                    target[name] = source[name];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\n","import * as React from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { Checkbox, Tooltip } from '@blueprintjs/core';\r\n\r\nimport { DialogState, State } from '../state';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { ListBox, ListBoxSelectionMode } from '../components/ListBox';\r\n\r\n\r\ninterface IChooseWorkspaceDialogState extends DialogState {\r\n    workspaceDir: string | null;\r\n    currentWorkspaceName: string;\r\n    selectedWorkspaceName: string;\r\n    deleteEntireWorkspace: boolean;\r\n}\r\n\r\ninterface IChooseWorkspaceDialogOwnProps {\r\n    dialogId: string;\r\n}\r\n\r\ninterface IChooseWorkspaceDialogProps extends IChooseWorkspaceDialogState, IChooseWorkspaceDialogOwnProps {\r\n    isOpen: boolean;\r\n    isLocalFSAllowed: boolean;\r\n    workspaceNames: string[];\r\n}\r\n\r\nexport const OPEN_WORKSPACE_DIALOG_ID = 'openWorkspaceDialog';\r\nexport const DELETE_WORKSPACE_DIALOG_ID = 'deleteWorkspaceDialog';\r\n\r\nfunction mapStateToProps(state: State, ownProps: IChooseWorkspaceDialogOwnProps): IChooseWorkspaceDialogProps {\r\n    const dialogState = selectors.dialogStateSelector(ownProps.dialogId)(state) as any;\r\n    const isOpen = dialogState.isOpen;\r\n    const dialogId = ownProps.dialogId;\r\n    const isLocalFSAllowed = selectors.isLocalFSAccessAllowedSelector(state);\r\n    let workspaceDir = dialogState.workspaceDir;\r\n    let currentWorkspaceName = dialogState.workspaceName;\r\n    let selectedWorkspaceName = '';\r\n    // TODO (forman): Fix code duplication with SelectWorkspaceDialog\r\n    if (isOpen) {\r\n        if (!selectors.isScratchWorkspaceSelector(state)) {\r\n            workspaceDir = workspaceDir || selectors.workspaceDirSelector(state);\r\n            currentWorkspaceName = currentWorkspaceName || selectors.workspaceNameSelector(state);\r\n        }\r\n        workspaceDir = workspaceDir || selectors.lastWorkspaceDirSelector(state);\r\n    }\r\n    workspaceDir = isLocalFSAllowed ? workspaceDir || '' : null;\r\n    currentWorkspaceName = currentWorkspaceName || '';\r\n    let workspaceNames: string[];\r\n    if (state.data.workspace && state.data.workspaceNames) {\r\n        workspaceNames = [...state.data.workspaceNames];\r\n        let indexOf = workspaceNames.indexOf(currentWorkspaceName);\r\n        if (indexOf > -1) {\r\n            workspaceNames.splice(indexOf, 1);\r\n        }\r\n    }\r\n    return {\r\n        workspaceDir,\r\n        currentWorkspaceName,\r\n        selectedWorkspaceName,\r\n        dialogId,\r\n        isOpen,\r\n        isLocalFSAllowed: isLocalFSAllowed,\r\n        workspaceNames: workspaceNames,\r\n        deleteEntireWorkspace: this.deleteEntireWorkspace\r\n    };\r\n}\r\n\r\nclass ChooseWorkspaceDialog extends React.Component<IChooseWorkspaceDialogProps & IChooseWorkspaceDialogOwnProps & DispatchProp<State>, IChooseWorkspaceDialogState> {\r\n\r\n    constructor(props: IChooseWorkspaceDialogProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.state = {\r\n            workspaceDir: '',\r\n            currentWorkspaceName: '',\r\n            selectedWorkspaceName: '',\r\n            deleteEntireWorkspace: true\r\n        };\r\n        // TODO (forman): Fix code duplication with SelectWorkspaceDialog\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.onWorkspaceNameChange = this.onWorkspaceNameChange.bind(this);\r\n        this.onWorkspaceDirChange = this.onWorkspaceDirChange.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IChooseWorkspaceDialogProps) {\r\n        this.setState({workspaceDir: nextProps.workspaceDir, currentWorkspaceName: nextProps.currentWorkspaceName});\r\n    }\r\n\r\n    private onCancel() {\r\n        this.props.dispatch(actions.hideDialog(this.props.dialogId));\r\n        this.resetSelectedWorkspaceName();\r\n    }\r\n\r\n    private canConfirm(): boolean {\r\n        if (this.state.selectedWorkspaceName === 'undefined' || !this.state.selectedWorkspaceName) {\r\n            return false;\r\n        }\r\n        return /^([A-Za-z_\\-\\s0-9.]+)$/.test(this.state.selectedWorkspaceName);\r\n    }\r\n\r\n    private composeWorkspacePath(): string {\r\n        let workspaceDir = this.state.workspaceDir;\r\n        let workspaceName = this.state.selectedWorkspaceName;\r\n        if (workspaceDir === null) {\r\n            return workspaceName;\r\n        }\r\n        return workspaceDir + '/' + workspaceName;\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.dispatch(actions.hideDialog(this.props.dialogId, this.state));\r\n        if (this.props.dialogId === DELETE_WORKSPACE_DIALOG_ID) {\r\n            this.props.dispatch(actions.deleteWorkspace(this.composeWorkspacePath(), this.state.deleteEntireWorkspace) as any);\r\n        } else {\r\n            this.props.dispatch(actions.openWorkspace(this.composeWorkspacePath()) as any);\r\n        }\r\n        this.resetSelectedWorkspaceName();\r\n    }\r\n\r\n    private resetSelectedWorkspaceName() {\r\n        this.setState({selectedWorkspaceName: ''});\r\n    }\r\n\r\n    private setSelectedWorkspace(workspaceName: string) {\r\n        this.setState({selectedWorkspaceName: workspaceName});\r\n    }\r\n\r\n    private handleCheckboxChange(event) {\r\n        this.setState({deleteEntireWorkspace: event.target.checked});\r\n    }\r\n\r\n    private onWorkspaceDirChange(ev: any) {\r\n        this.setState({workspaceDir: ev.target.value} as IChooseWorkspaceDialogState);\r\n    }\r\n\r\n    private onWorkspaceNameChange(ev: any) {\r\n        this.setState({currentWorkspaceName: ev.target.value} as IChooseWorkspaceDialogState);\r\n    }\r\n\r\n    render() {\r\n        let isOpen = this.props.isOpen;\r\n        if (!isOpen) {\r\n            return null;\r\n        }\r\n\r\n        let title: string;\r\n        let confirmTitle: string;\r\n        if (this.props.dialogId === DELETE_WORKSPACE_DIALOG_ID) {\r\n            title = 'Delete Workspace';\r\n            confirmTitle = 'Delete';\r\n        } else {\r\n            title = 'Open Workspace';\r\n            confirmTitle = 'Open';\r\n        }\r\n\r\n        return (\r\n            <ModalDialog\r\n                isOpen={isOpen}\r\n                title={title}\r\n                confirmTitle={confirmTitle}\r\n                onCancel={this.onCancel}\r\n                canConfirm={this.canConfirm}\r\n                onConfirm={this.onConfirm}\r\n                renderBody={this.renderBody}\r\n            />);\r\n    }\r\n\r\n    renderItem = (path: string) => {\r\n        return (<span>{path}</span>);\r\n    };\r\n\r\n    private renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        if (this.props.workspaceNames.length === 0) {\r\n            return (\r\n                <div>\r\n                    <p style={{marginTop: '1em'}}>No saved workspaces found.</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let checkbox;\r\n        if (this.props.dialogId === DELETE_WORKSPACE_DIALOG_ID) {\r\n            checkbox =\r\n                <Tooltip content={\"Also delete other files in the workspace folder\"}>\r\n                    <Checkbox\r\n                        style={{marginTop: '1em'}}\r\n                        label={'Delete entire workspace'}\r\n                        checked={this.state.deleteEntireWorkspace}\r\n                        onChange={this.handleCheckboxChange.bind(this)}\r\n                    />\r\n                </Tooltip>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <p style={{marginTop: '1em'}}>Saved workspaces:</p>\r\n                <ListBox items={this.props.workspaceNames}\r\n                         selectionMode={ListBoxSelectionMode.SINGLE}\r\n                         getItemKey={(item: any, itemIndex: number) => item}\r\n                         renderItem={this.renderItem}\r\n                         onSelection={newSelection => this.setSelectedWorkspace('' + newSelection[0])}\r\n                         selection={this.state.selectedWorkspaceName}\r\n                />\r\n                {checkbox}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChooseWorkspaceDialog);\r\n","declare global {\r\n    // noinspection JSUnusedGlobalSymbols\r\n    interface Window {\r\n        electron?: any;\r\n    }\r\n}\r\n\r\nexport function isElectron() {\r\n    return Boolean(window.electron);\r\n}\r\n\r\nexport function requireElectron(): any | null {\r\n    return window.electron || null;\r\n}\r\n\r\nif (isElectron()) {\r\n    console.debug('We are running on Electron :)');\r\n}\r\n","export class HttpError extends Error {\r\n    constructor(status: number, statusText: string) {\r\n        super(statusText);\r\n        this._status = status;\r\n    }\r\n\r\n    private _status: number;\r\n\r\n    get status(): number {\r\n        return this._status;\r\n    }\r\n\r\n    get statusText(): string {\r\n        return this.message;\r\n    }\r\n\r\n    static fromResponse(response: Response): HttpError {\r\n        return new HttpError(response.status, response.statusText);\r\n    }\r\n}\r\n","/**\r\n * Created by Norman on 22.03.2017.\r\n */\r\n\r\n\r\nexport function isDefined(value: any): boolean {\r\n    return typeof (value) !== 'undefined';\r\n}\r\n\r\nexport function isUndefined(value: any): boolean {\r\n    return typeof (value) === 'undefined';\r\n}\r\n\r\nexport function isDefinedAndNotNull(value: any): boolean {\r\n    return value !== null && typeof (value) !== 'undefined';\r\n}\r\n\r\nexport function isUndefinedOrNull(value: any): boolean {\r\n    return value === null || typeof (value) === 'undefined';\r\n}\r\n\r\nexport function isNumber(value: any): boolean {\r\n    return typeof (value) === 'number';\r\n}\r\n\r\nexport function isString(value: any): boolean {\r\n    return typeof (value) === 'string';\r\n}\r\n\r\nexport function isBoolean(value: any): boolean {\r\n    return typeof (value) === 'boolean';\r\n}\r\n","import * as React from 'react';\r\nimport { CSSProperties } from \"react\";\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { AnchorButton, ControlGroup, Intent } from \"@blueprintjs/core\";\r\nimport Dropzone from 'react-dropzone';\r\n\r\nimport { DialogState, State } from '../state';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { showDirectorySelectDialog } from \"../actions\";\r\nimport { TextField } from \"../components/field/TextField\";\r\n\r\n\r\nconst DIV_STYLE = {width: '100%', marginBottom: '2em', display: 'flex', flexGrow: 1};\r\nconst TEXT_FIELD_STYLE = {flexGrow: 1};\r\nconst BUTTON_STYLE = {flex: 'none'};\r\n\r\n\r\nconst baseStyle: CSSProperties = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    border: '2px dashed #137cbd',\r\n    borderRadius: '5px',\r\n    background: 'rgba(16, 22, 26, 0.3)',\r\n    color: '#f5f8fa',\r\n    transition: 'border .24s ease-in-out'\r\n};\r\n\r\ninterface IFileUploadDialogProps {\r\n    dialogId: string;\r\n    isOpen: boolean;\r\n}\r\n\r\ninterface IFileUploadDialogState extends DialogState {\r\n    files: File[];\r\n    dir: string;\r\n}\r\n\r\nfunction mapStateToProps(state: State): IFileUploadDialogProps {\r\n    const dialogState = selectors.dialogStateSelector(FileUploadDialog.DIALOG_ID)(state);\r\n    return {\r\n        isOpen: dialogState.isOpen,\r\n        dialogId: FileUploadDialog.DIALOG_ID\r\n    };\r\n}\r\n\r\nclass FileUploadDialog extends React.Component<IFileUploadDialogProps & DispatchProp<State>, IFileUploadDialogState> {\r\n    static readonly DIALOG_ID = 'fileUploadDialog';\r\n\r\n    constructor(props: IFileUploadDialogProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.state = {files: [], dir: './'};\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IFileUploadDialogProps) {\r\n        this.setState({files: [], dir: './'});\r\n    }\r\n\r\n    private onCancel() {\r\n        this.props.dispatch(actions.hideDialog(FileUploadDialog.DIALOG_ID));\r\n    }\r\n\r\n    private canConfirm(): boolean {\r\n        return this.state.files.length > 0;\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.dispatch(actions.hideDialog(FileUploadDialog.DIALOG_ID, this.state));\r\n        for (let file of this.state.files) {\r\n            this.props.dispatch(actions.uploadFiles(this.state.dir, file) as any);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let isOpen = this.props.isOpen;\r\n        if (!isOpen) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ModalDialog\r\n                isOpen={isOpen}\r\n                title=\"Upload files\"\r\n                icon=\"upload\"\r\n                confirmTitle=\"Upload\"\r\n                confirmIconName=\"upload\"\r\n                confirmTooltip=\"Upload files.\"\r\n                onCancel={this.onCancel}\r\n                canConfirm={this.canConfirm}\r\n                onConfirm={this.onConfirm}\r\n                renderBody={this.renderBody}\r\n            />);\r\n    }\r\n\r\n    handleOnDrop = (files: File[]) => {\r\n        this.setState({...this.state, files: files});\r\n    };\r\n\r\n    handleOpenDirectoryOnClose = (dir: string) => {\r\n        this.setState({...this.state, dir: dir});\r\n        console.log(dir);\r\n    };\r\n\r\n    handleOpenDirectoryOpen = () => {\r\n        this.props.dispatch(\r\n            showDirectorySelectDialog({title: 'Select Target Directory'}, this.handleOpenDirectoryOnClose) as any);\r\n    };\r\n\r\n    private renderBody() {\r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name} - {file.size} bytes\r\n            </li>\r\n        ));\r\n\r\n        if (!this.state.files) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    Remote target directory:\r\n                    <ControlGroup style={DIV_STYLE} fill={true}>\r\n                        <TextField style={TEXT_FIELD_STYLE}\r\n                                   value={this.state.dir}\r\n                                   onChange={value => {\r\n                                       console.log(value);\r\n                                   }}\r\n                                   nullable={false}\r\n                        />\r\n                        <AnchorButton intent={Intent.PRIMARY} style={BUTTON_STYLE}\r\n                                      onClick={this.handleOpenDirectoryOpen}>...</AnchorButton>\r\n\r\n                    </ControlGroup>\r\n                </div>\r\n\r\n                <div>Files to upload:\r\n                    <ControlGroup style={DIV_STYLE} fill={true}>\r\n                        <Dropzone onDrop={this.handleOnDrop}>\r\n                            {({getRootProps, getInputProps}) => (\r\n                                <section className=\"container\">\r\n                                    <div {...getRootProps({style: baseStyle})}>\r\n                                        <input {...getInputProps()} />\r\n                                        <p>Drag 'n' drop files here, or click to select files</p>\r\n                                    </div>\r\n                                    <aside>\r\n                                        {files.length > 0 ? (<h4>Files</h4>) : ''}\r\n                                        <ul>{files}</ul>\r\n                                    </aside>\r\n                                </section>\r\n                            )}\r\n                        </Dropzone>\r\n                    </ControlGroup>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const FILE_UPLOAD_DIALOG_ID = FileUploadDialog.DIALOG_ID;\r\n\r\nexport default connect(mapStateToProps)(FileUploadDialog);\r\n","import { WebAPIServiceInfo } from '../../state';\r\nimport { HttpError } from '../HttpError';\r\n\r\n\r\nexport class ServiceInfoAPI {\r\n\r\n    getServiceInfo(serviceURL: string): Promise<WebAPIServiceInfo> {\r\n        const url = new URL(serviceURL + \"/\");\r\n        // console.log('GET: ', url);\r\n        return fetch(url.toString())\r\n            .then((response: Response) => {\r\n                if (!response.ok) {\r\n                    throw HttpError.fromResponse(response);\r\n                }\r\n                return response.json() as Promise<any>;\r\n            })\r\n            .then((response: any) => {\r\n                const webAPIServiceInfo = response.content;\r\n                return {\r\n                    name: webAPIServiceInfo.name,\r\n                    version: webAPIServiceInfo.version,\r\n                    timestamp: webAPIServiceInfo.timestamp,\r\n                    userRootMode: webAPIServiceInfo.user_root_mode,\r\n                    hostOS: webAPIServiceInfo.host_os,\r\n                    dependencies: webAPIServiceInfo.dependencies\r\n                };\r\n            });\r\n    }\r\n}\r\n","import {\n    LayerState,\n    PlacemarkCollection,\n    ResourceState,\n    ResourceVectorLayerState,\n    VariableImageLayerState,\n    VectorLayerState\n} from '../state';\nimport { ImageLayerDescriptor, LayerDescriptors, VectorLayerDescriptor, } from '../components/cesium/CesiumGlobe';\nimport {\n    AUTO_LAYER_ID,\n    COUNTRIES_LAYER_ID,\n    findResource,\n    findVariable,\n    getFeatureCollectionUrl,\n    getGeoJSONCountriesUrl,\n    getTileUrl,\n    MY_PLACES_LAYER_ID,\n} from '../state-util';\nimport { memoize } from '../../common/memoize';\nimport { EMPTY_OBJECT } from '../selectors';\nimport * as Cesium from 'cesium';\nimport { isNumber } from '../../common/types';\nimport { SimpleStyle } from '../../common/geojson-simple-style';\nimport { simpleStyleToCesium } from '../components/cesium/cesium-util';\n\n\nexport function convertLayersToLayerDescriptors(layers: LayerState[],\n                                                resources: ResourceState[],\n                                                placemarkCollection: PlacemarkCollection,\n                                                baseUrl: string,\n                                                workspaceId: string): LayerDescriptors {\n    if (!layers || !layers.length) {\n        return EMPTY_OBJECT;\n    }\n    let imageLayerDescriptors: ImageLayerDescriptor[];\n    let vectorLayerDescriptors: VectorLayerDescriptor[];\n    for (let layer of layers) {\n        let imageLayerDescriptor: ImageLayerDescriptor;\n        let vectorLayerDescriptor: VectorLayerDescriptor;\n        switch (layer.type) {\n            case 'VariableImage': {\n                imageLayerDescriptor = convertVariableImageLayerToDescriptor(layer as VariableImageLayerState,\n                                                                             baseUrl, workspaceId, resources);\n                break;\n            }\n            case 'ResourceVector': {\n                vectorLayerDescriptor = convertResourceVectorLayerToDescriptor(layer as ResourceVectorLayerState,\n                                                                               baseUrl, workspaceId, resources);\n                break;\n            }\n            case 'Vector': {\n                vectorLayerDescriptor = convertVectorLayerToDescriptor(layer as VectorLayerState,\n                                                                       baseUrl, placemarkCollection);\n                break;\n            }\n        }\n        if (imageLayerDescriptor) {\n            if (!imageLayerDescriptors) {\n                imageLayerDescriptors = [imageLayerDescriptor];\n            } else {\n                // noinspection JSUnusedAssignment\n                imageLayerDescriptors.push(imageLayerDescriptor);\n            }\n        } else if (vectorLayerDescriptor) {\n            if (!vectorLayerDescriptors) {\n                vectorLayerDescriptors = [vectorLayerDescriptor];\n            } else {\n                // noinspection JSUnusedAssignment\n                vectorLayerDescriptors.push(vectorLayerDescriptor);\n            }\n        } else if (layer.id !== AUTO_LAYER_ID) {\n            console.warn(`GlobeView: layer with ID \"${layer.id}\" will not be rendered`);\n        }\n    }\n\n    return {imageLayerDescriptors, vectorLayerDescriptors};\n}\n\n\nfunction convertVariableImageLayerToDescriptor(layer: VariableImageLayerState,\n                                               baseUrl: string,\n                                               workspaceId: string,\n                                               resources: ResourceState[]): ImageLayerDescriptor | null {\n    const variable = findVariable(resources, layer);\n    if (!variable) {\n        console.warn(`GlobeView: variable \"${layer.varName}\" not found in resource \"${layer.resId}\"`);\n        return null;\n    }\n    const imageLayout = variable.imageLayout;\n    if (!variable.imageLayout) {\n        console.warn(`GlobeView: variable \"${layer.varName}\" of resource \"${layer.resId}\" has no imageLayout`);\n        return null;\n    }\n    const url = getTileUrl(baseUrl, workspaceId, layer);\n    let rectangle = Cesium.Rectangle.MAX_VALUE;\n    if (imageLayout.extent) {\n        const extent = imageLayout.extent;\n        rectangle = Cesium.Rectangle.fromDegrees(extent.west, extent.south, extent.east, extent.north);\n    }\n    return Object.assign({}, layer, {\n        imageryProvider: createImageryProvider,\n        imageryProviderOptions: {\n            url,\n            rectangle,\n            minimumLevel: 0,\n            maximumLevel: imageLayout.numLevels - 1,\n            tileWidth: imageLayout.tileWidth,\n            tileHeight: imageLayout.tileHeight,\n            tilingScheme: new Cesium.GeographicTilingScheme({\n                                                                rectangle,\n                                                                numberOfLevelZeroTilesX: imageLayout.numLevelZeroTilesX,\n                                                                numberOfLevelZeroTilesY: imageLayout.numLevelZeroTilesY\n                                                            }),\n        },\n    });\n}\n\nfunction convertResourceVectorLayerToDescriptor(layer: ResourceVectorLayerState,\n                                                baseUrl: string,\n                                                workspaceId: string,\n                                                resources: ResourceState[]): VectorLayerDescriptor | null {\n    const resource = findResource(resources, layer);\n    if (!resource) {\n        console.warn(`globe-view-layers: resource \"${layer.resId}\" not found\"`);\n        return null;\n    }\n    return {\n        ...layer,\n        dataSource: createResourceGeoJSONDataSource,\n        dataSourceOptions: {\n            data: getFeatureCollectionUrl(baseUrl, workspaceId, layer),\n            resId: resource.id,\n            style: layer.style,\n        },\n    } as VectorLayerDescriptor;\n}\n\nfunction convertVectorLayerToDescriptor(layer: VectorLayerState,\n                                        baseUrl: string,\n                                        placemarkCollection: PlacemarkCollection): VectorLayerDescriptor {\n    let data = layer.data;\n    let style = layer.style;\n    if (layer.id === COUNTRIES_LAYER_ID) {\n        data = getGeoJSONCountriesUrl(baseUrl);\n    } else if (layer.id === MY_PLACES_LAYER_ID) {\n        data = placemarkCollection;\n    }\n    return {\n        ...layer,\n        dataSource: createGeoJsonDataSource,\n        dataSourceOptions: {data, style},\n    } as VectorLayerDescriptor;\n}\n\n/**\n * Creates a Cesium.UrlTemplateImageryProvider instance.\n *\n * @param viewer the Cesium viewer\n * @param imageryProviderOptions see https://cesiumjs.org/Cesium/Build/Documentation/UrlTemplateImageryProvider.html\n */\nfunction createImageryProvider(viewer: Cesium.Viewer, imageryProviderOptions): Cesium.ImageryProvider {\n    const imageryProvider = new Cesium.UrlTemplateImageryProvider(imageryProviderOptions);\n    imageryProvider.errorEvent.addEventListener((event) => {\n        console.error('GlobeView:', event);\n    });\n    return imageryProvider;\n}\n\n/**\n * Creates a Cesium.GeoJsonDataSource instance.\n *\n * @param viewer the Cesium viewer\n * @param dataSourceOptions see https://cesiumjs.org/Cesium/Build/Documentation/GeoJsonDataSource.html\n */\nfunction createGeoJsonDataSource(viewer: Cesium.Viewer, dataSourceOptions): Promise<Cesium.DataSource> {\n    const style = simpleStyleToCesium(dataSourceOptions.style || EMPTY_OBJECT);\n    return Cesium.GeoJsonDataSource.load(dataSourceOptions.data, style);\n}\n\n/**\n * Creates a Cesium.GeoJsonDataSource instance that loads GeoJSON features from Cate WebAPI REST call.\n *\n * @param viewer the Cesium viewer\n * @param dataSourceOptions see https://cesiumjs.org/Cesium/Build/Documentation/GeoJsonDataSource.html\n */\nfunction createResourceGeoJSONDataSource(viewer: Cesium.Viewer, dataSourceOptions): Cesium.DataSource {\n    return createResourceGeoJSONDataSourceImpl(dataSourceOptions.data, dataSourceOptions.resId, dataSourceOptions.style);\n}\n\ntype ResourceGeoJSONDataSourceFactory = (url: string, resId: number, style: SimpleStyle) => Cesium.DataSource;\n\nconst createResourceGeoJSONDataSourceImpl: ResourceGeoJSONDataSourceFactory =\n    memoize((url: string, resId: number, style: SimpleStyle) => {\n        const customDataSource: Cesium.DataSource = new Cesium.CustomDataSource('Cate Resource #' + resId);\n        const cStyle = simpleStyleToCesium(style);\n        // let numFeatures = 0;\n        // const worker = new Worker();\n        const worker = new Worker(`${process.env.PUBLIC_URL}/stream-geojson.js`);\n        worker.postMessage(url);\n        worker.onmessage = function (event: MessageEvent) {\n\n            const features = event.data;\n            if (!features) {\n                // console.log(`Received ${numFeatures} feature(s) in total from ${url}`);\n                return;\n            }\n\n            // numFeatures += features.length;\n            // console.log(`Received another ${features.length} feature(s) from ${url}`);\n\n            // Style for points symbolizing a more complex geometry\n            const pixelSizeMin = 10;\n            const pixelSizeMax = 100;\n            const areaMin = 20.;\n            const areaMax = 500.;\n            const defaultRatio = 0.2;\n            const pointColor = Cesium.Color.fromAlpha(cStyle.fill, 0.9);\n            const pointOutlineColor = Cesium.Color.fromAlpha(cStyle.fill, 0.5);\n            const featureCollection = {\n                type: 'FeatureCollection',\n                features: features\n            };\n            Cesium.GeoJsonDataSource.load(featureCollection, cStyle)\n                  .then((geoJsonDataSource: Cesium.GeoJsonDataSource) => {\n\n                      const featureMap = new Map();\n                      features.forEach(f => featureMap.set(f.id, f));\n\n                      // Style for points symbolizing a more complex geometry\n                      const scaleByDistance = new Cesium.NearFarScalar(2e2, 1.0, 1e7, 0.1);\n                      const translucencyByDistance = new Cesium.NearFarScalar(2e2, 1.0, 1e7, 0.5);\n\n                      customDataSource.entities.suspendEvents();\n\n                      for (let entity of geoJsonDataSource.entities.values) {\n                          // console.log(\"entity: \", entity);\n                          // TODO #477 (nf): Use of the following featureMap is probably wrong\n                          //   as there is no unconditional 1:1 mapping between GeoJSON features and generated entities.\n                          const feature = featureMap.get(entity.id);\n                          // console.log(\"feature: \", feature);\n                          if (feature\n                              && isNumber(feature._simp)\n                              && isNumber(feature._resId)\n                              && isNumber(feature._idx)\n                              && !!(entity.point || entity.billboard || entity.label)) {\n\n                              // TODO #477 (nf): Generalize this code. This is for Glaciers CCI.\n                              //   See #491: use a special style for feature geometries that are expandable/collapsible.\n                              let ratio = defaultRatio;\n\n                              if (feature.properties) {\n                                  let area = feature.properties['area_npl43'];\n                                  if (area) {\n                                      ratio = (area - areaMin) / (areaMax - areaMin);\n                                      if (ratio < 0.) {\n                                          ratio = 0.;\n                                      }\n                                      if (ratio > 1.) {\n                                          ratio = 1.;\n                                      }\n                                  }\n                              }\n\n                              const pixelSize = pixelSizeMin + ratio * (pixelSizeMax - pixelSizeMin);\n\n                              entity = new Cesium.Entity({\n                                                             id: entity.id,\n                                                             position: entity.position,\n                                                             description: entity.description,\n                                                             properties: entity.properties,\n                                                             point: {\n                                                                 // Style for points symbolizing a more complex geometry\n                                                                 color: pointColor,\n                                                                 outlineColor: pointOutlineColor,\n                                                                 outlineWidth: 10,\n                                                                 // pixelSize will multiply by the scale factor, so in this\n                                                                 // example the size will range from pixelSize (near) to 0.1*pixelSize (far).\n                                                                 pixelSize,\n                                                                 scaleByDistance,\n                                                                 translucencyByDistance,\n                                                             }\n                                                         });\n\n                              entity['_simp'] = feature._simp;\n                              entity['_resId'] = feature._resId;\n                              entity['_idx'] = feature._idx;\n                          }\n\n                          try {\n                              customDataSource.entities.add(entity);\n                              // console.log(\"added entity: \", entity);\n                          } catch (e) {\n                              console.error('failed to add entity: ', entity, e);\n                          }\n                      }\n\n                      geoJsonDataSource.entities.removeAll();\n                      customDataSource.entities.resumeEvents();\n                      customDataSource.changedEvent.raiseEvent();\n                      // console.log(`Added another ${features.length} feature(s) to Cesium custom data source`);\n                  });\n        };\n        return customDataSource;\n    });\n\nconst entityGeometryPropertyNames = ['billboard', 'label', 'point', 'corridor', 'polyline', 'polygon'];\n\nexport function reloadEntityWithOriginalGeometry(oldEntity: Cesium.Entity, featureUrl: string, style: SimpleStyle) {\n    // TODO #477 (nf): We don't correctly handle multi-geometries here.\n    const cStyle = simpleStyleToCesium(style);\n    Cesium.GeoJsonDataSource.load(featureUrl, cStyle)\n          .then((geoJsonDataSource: Cesium.GeoJsonDataSource) => {\n              const entities = geoJsonDataSource.entities.values;\n              if (entities && entities.length) {\n                  const entity = entities[0];\n                  transferEntityGeometry(entity, oldEntity);\n              }\n          });\n}\n\nexport function transferEntityGeometry(fromEntity: Cesium.Entity, toEntity: Cesium.Entity): void {\n    const newGeomPropertyName = entityGeometryPropertyNames.find(name => Cesium.defined(fromEntity[name]));\n    const oldGeomPropertyName = entityGeometryPropertyNames.find(name => Cesium.defined(toEntity[name]));\n    if (oldGeomPropertyName && newGeomPropertyName && oldGeomPropertyName !== newGeomPropertyName) {\n        toEntity[oldGeomPropertyName] = undefined;\n    }\n    if (newGeomPropertyName) {\n        toEntity[newGeomPropertyName] = fromEntity[newGeomPropertyName];\n        if (isNumber(toEntity['_simp'])) {\n            // clear geometry simplification flag\n            toEntity['_simp'] &= ~0x01;\n        }\n    }\n}\n","import { isUndefinedOrNull } from './types';\r\n\r\nexport interface MemoizedFunction {\r\n    (...args): any;\r\n\r\n    getMaxSize();\r\n\r\n    getSize();\r\n\r\n    clearCache();\r\n}\r\n\r\n/**\r\n * Wrap a function with a memoizing function that saves up to the maxSize most recent calls.\r\n *\r\n * @param func The function to wrap.\r\n * @param maxSize Number of most recent calls to be memoized.\r\n * @returns A memoized version of func.\r\n */\r\nexport function memoize(func: Function, maxSize?: number): MemoizedFunction {\r\n\r\n    let memo = {};\r\n    let size = 0;\r\n\r\n    const memoized = (...args) => {\r\n        //console.log('memoized: totalSize =', size)\r\n        const key = args.map(a => `(${a}:${typeof a})`).join();\r\n        if (key in memo) {\r\n            return memo[key];\r\n        } else {\r\n            const value = func(...args);\r\n            if (isUndefinedOrNull(maxSize) || (maxSize > 0 && size < maxSize)) {\r\n                memo[key] = value;\r\n                size++;\r\n            }\r\n            return value;\r\n        }\r\n    };\r\n\r\n    memoized['getMaxSize'] = () => maxSize;\r\n    memoized['getSize'] = () => size;\r\n    memoized['clearCache'] = () => {\r\n        memo = {};\r\n        size = 0;\r\n    };\r\n\r\n    return memoized as MemoizedFunction;\r\n}\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 221;","/**\n * Encodes UTF-8 strings into lowercase hexadecimal representation and\n * decodes hexadecimal representation into UTF-8.\n */\nclass Base16 {\n    static encode(value: string): string {\n        let result = '';\n        for (let i = 0; i < value.length; i++) {\n            let part = value.codePointAt(i).toString(16);\n            if (part.length === 1) {\n                result += '0' + part;\n            } else if (part.length === 2) {\n                result += part;\n            } else {\n                throw new Error('string value must comprise utf-8 values only');\n            }\n        }\n        return result.toUpperCase();\n    }\n\n    static decode(value: string): string {\n        if (value.length % 2 !== 0) {\n            throw new Error('string value length must be a multiple of two');\n        }\n        let result = '';\n        for (let i = 0; i < value.length; i += 2) {\n            let code = parseInt(value.substr(i, 2), 16);\n            if (Number.isNaN(code)) {\n                throw new Error('string value must comprise hexadecimal values only');\n            }\n            result += String.fromCharCode(code);\n        }\n        return result;\n    }\n}\n\nexport default Base16;","import * as Cesium from 'cesium';\nimport { IconName } from '@blueprintjs/core';\nimport Base16 from '../common/base16codec';\n\nimport {\n    AnimationViewDataState,\n    BaseMapState,\n    DatasetDescriptor,\n    DataSourceState,\n    DataSourceCapability,\n    DataStoreState,\n    DimSizes,\n    FigureViewDataState,\n    LayerState,\n    OperationState,\n    Placemark,\n    PlacemarkCollection,\n    ResourceRefState,\n    ResourceState,\n    ResourceVectorLayerState,\n    SavedLayers,\n    SPLIT_MODE_OFF,\n    TableViewDataState,\n    VariableDataRefState, VariableDescriptor,\n    VariableImageLayerState,\n    VariableRefState,\n    VariableState,\n    VectorLayerBase,\n    WorldViewDataState, WorkspaceState\n} from './state';\nimport { ViewState } from './components/ViewState';\nimport * as assert from '../common/assert';\nimport { isNumber, isString } from '../common/types';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from './selectors';\nimport { GeometryWKTGetter } from './containers/editor/ValueEditor';\nimport { entityToGeometryWkt } from './components/cesium/cesium-util';\nimport { SIMPLE_STYLE_DEFAULTS, SimpleStyle } from '../common/geojson-simple-style';\n\n\nexport const AUTO_LAYER_ID = 'auto';\nexport const COUNTRIES_LAYER_ID = 'countries';\nexport const MY_PLACES_LAYER_ID = 'myPlaces';\n\nexport const AUTO_LAYER = {\n    id: AUTO_LAYER_ID,\n    type: 'Unknown',\n    visible: true,\n};\n\nexport const COUNTRIES_LAYER = {\n    id: COUNTRIES_LAYER_ID,\n    name: 'Countries',\n    type: 'Vector',\n    visible: false,\n    style: {\n        ...SIMPLE_STYLE_DEFAULTS,\n        stroke: '#ffff00',\n        fill: '#FFFFFF',\n        fillOpacity: 0.2,\n        strokeWidth: 1.5,\n    },\n};\n\nexport const MY_PLACES_LAYER = {\n    id: MY_PLACES_LAYER_ID,\n    name: 'My Places',\n    type: 'Vector',\n    visible: true,\n    style: {\n        markerSize: 'small',\n        markerColor: '#ff0000',\n        markerSymbol: '',\n        fill: '#0000ff',\n        fillOpacity: 0.5,\n        stroke: '#ffff00',\n        strokeOpacity: 0.5,\n        strokeWidth: 1,\n    },\n};\n\nexport const PLACEMARK_ID_PREFIX = 'placemark-';\n\nexport function getWorkspaceId(workspace: WorkspaceState): string {\n    return Base16.encode(workspace.baseDir);\n}\n\nexport function isLocalDataStore(dataStore: DataStoreState | null) {\n    return dataStore && (dataStore.id === 'local' || dataStore.isLocal);\n}\n\nexport function isRemoteDataStore(dataStore: DataStoreState | null) {\n    return dataStore && dataStore.id !== 'local' && !dataStore.isLocal;\n}\n\nexport interface DataSourceUrls {\n    catalogUrl?: string;\n    infoUrl?: string;\n}\n\nexport function getDataSourceUrls(dataSource: DataSourceState): DataSourceUrls {\n    const metaInfo = dataSource.metaInfo;\n    let catalogUrl;\n    let infoUrl;\n    if (metaInfo) {\n        catalogUrl = metaInfo.catalog_url || metaInfo.catalogue_url;\n        if (!catalogUrl && dataSource.id.includes(\"esacci\") && metaInfo.uuid) {\n            catalogUrl = `https://catalogue.ceda.ac.uk/uuid/${metaInfo.uuid}`;\n        }\n        infoUrl = metaInfo.info_url;\n    }\n    return {catalogUrl, infoUrl};\n}\n\n/**\n * Compute capabilities for data source.\n * This function is actually invoked for any data source NOT originating from CCI ODP data store.\n * @param dataSource a data source\n */\nexport function computeDataSourceCapabilities(dataSource: DataSourceState): DataSourceCapability[] | undefined {\n    const dsd = dataSource.metaInfo;\n    if (dsd) {\n        const canConstrainTime = isCoord1DInDataset(dsd, 'time');\n        const canConstrainRegion = isCoord1DInDataset(dsd, 'lon')\n                                   && isCoord1DInDataset(dsd, 'lat');\n        if (canConstrainTime && canConstrainRegion) {\n            return [\"open\", \"constrain_time\", \"constrain_region\"];\n        } else if (canConstrainTime) {\n            return [\"open\", \"constrain_time\"];\n        } else if (canConstrainRegion) {\n            return [\"open\", \"constrain_region\"];\n        }\n        if (isString(dsd.data_type)) {\n            if (dsd.data_type === \"dataset\") {\n                return [\"open\"];\n            }\n        }\n    }\n}\n\nfunction isCoord1DInDataset(dsd: DatasetDescriptor, name: string): boolean {\n    return !!(dsd.coords && dsd.coords.find(c => isCoord1D(c, name)));\n}\n\nfunction isCoord1D(c: VariableDescriptor, name: string): boolean {\n    return c.name === name\n           && !!c.dims\n           && c.dims.length === 1\n           && !!c.dims.find(d => d === name);\n}\n\nexport function canOpenDataSource(dataSource: DataSourceState) {\n    return _checkDataSourceCapability(dataSource,\n                                      'open', 'constrain_region', 'constrain_time', 'write_zarr');\n}\n\nexport function canCacheDataSource(dataSource: DataSourceState) {\n    return _checkDataSourceCapability(dataSource,\n                                      'write_zarr');\n}\n\nexport function canConstrainDataSourceTime(dataSource: DataSourceState) {\n    return _checkDataSourceCapability(dataSource,\n                                      'constrain_time');\n}\n\nexport function canConstrainDataSourceRegion(dataSource: DataSourceState) {\n    return _checkDataSourceCapability(dataSource,\n                                      'constrain_region');\n}\n\nexport function canMapDataSource(dataSource: DataSourceState) {\n    return _checkDataSourceCapability(dataSource,\n                                      'constrain_region');\n}\n\nexport function canConstrainDataSourceVariables(dataSource: DataSourceState) {\n    return dataSource.metaInfo\n           && dataSource.metaInfo.data_vars\n           && dataSource.metaInfo.data_vars.length > 1;\n}\n\nfunction _checkDataSourceCapability(dataSource: DataSourceState,\n                                    ...requiredCapabilities: DataSourceCapability[]): boolean | undefined {\n    let capabilities = dataSource.capabilities;\n    if (!capabilities) {\n        if ((dataSource.dataType && dataSource.dataType === 'dataset')\n            || dataSource.id.endsWith('.zarr')) {\n            // dataSource.capabilities have been introduced for ESA CCI datasets only\n            capabilities = [\"open\"];\n        }\n    }\n    if (Array.isArray(capabilities)) {\n        const availableCapabilities = new Set<string>(capabilities);\n        for (let requiredCapability of requiredCapabilities) {\n            if (availableCapabilities.has(requiredCapability)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nexport function getTileUrl(baseUrl: string,\n                           workspaceId: string,\n                           layer: VariableImageLayerState): string {\n    return baseUrl + `ws/res/tile/${workspaceId}/${layer.resId}/{z}/{y}/{x}.png?`\n           + `&var=${encodeURIComponent(layer.varName)}`\n           + `&index=${encodeURIComponent((layer.varIndex || []).join())}`\n           + `&cmap=${encodeURIComponent(layer.colorMapName) + (layer.alphaBlending ? '_alpha' : '')}`\n           + `&min=${encodeURIComponent(layer.displayMin + '')}`\n           + `&max=${encodeURIComponent(layer.displayMax + '')}`;\n}\n\nexport function getFeatureCollectionUrl(baseUrl: string,\n                                        workspaceId: string,\n                                        ref: ResourceRefState): string {\n    return baseUrl + `ws/res/geojson/${workspaceId}/${ref.resId}`;\n}\n\nexport function getFeatureUrl(baseUrl: string,\n                              workspaceId: string,\n                              ref: ResourceRefState,\n                              index: number): string {\n    return baseUrl + `ws/res/geojson/${workspaceId}/${ref.resId}/${index}`;\n}\n\nexport function getCsvUrl(baseUrl: string,\n                          workspaceId: string,\n                          ref: ResourceRefState, varName?: string | null): string {\n    let varPart = '';\n    if (varName) {\n        varPart = `?var=${encodeURIComponent(varName)}`;\n    }\n    return baseUrl + `ws/res/csv/${workspaceId}/${ref.resId}${varPart}`;\n}\n\nexport function getHtmlUrl(baseUrl: string, workspaceId: string, resId: number): string {\n    return baseUrl + `ws/res/html/${workspaceId}/${resId}`;\n}\n\nexport function getGeoJSONCountriesUrl(baseUrl: string): string {\n    return baseUrl + 'ws/countries';\n}\n\nexport function getMPLWebSocketUrl(baseUrl: string, workspaceId: string, figureId: number): string {\n    return `${baseUrl}${workspaceId}/${figureId}`;\n}\n\nexport function getMPLDownloadUrl(baseUrl: string, workspaceId: string, figureId: number): string {\n    return `${baseUrl}mpl/download/${workspaceId}/${figureId}`;\n}\n\nexport function isSpatialImageVariable(variable: VariableState): boolean {\n    return variable.numDims && variable.numDims >= 2 && !!variable.imageLayout;\n}\n\nexport function isSpatialVectorVariable(variable: VariableState): boolean {\n    return variable.isFeatureAttribute;\n}\n\nexport function genSimpleId(prefix: string): string {\n    return prefix + Math.floor((1 + Math.random()) * 0x100000000).toString(16) + '-' + Math.floor(Date.now()).toString(16);\n}\n\nexport function genLayerId() {\n    return genSimpleId('layer-');\n}\n\nexport function isFigureResource(resource: ResourceState | null): boolean {\n    return resource && isNumber(resource.id) && resource.dataType.endsWith('.Figure');\n}\n\nexport function isAnimationResource(resource: ResourceState | null): boolean {\n    return resource && isNumber(resource.id) && resource.dataType.endsWith('.HTML');\n}\n\nexport function isDataFrameResource(resource: ResourceState | null): boolean {\n    return resource && (resource.dataType.endsWith('.DataFrame') || resource.dataType.endsWith('.GeoDataFrame'));\n}\n\nexport function getLayerDisplayName(layer: LayerState): string {\n    if (layer.name) {\n        return layer.name;\n    }\n    const varName = (layer as any).varName;\n    const resName = (layer as any).resName;\n    if (layer.id === AUTO_LAYER_ID) {\n        if (resName && varName) {\n            return `Selected Variable (${resName} / ${varName})`;\n        }\n        return `Selected Variable (none)`;\n    } else {\n        if (resName && varName) {\n            return `${resName} / ${varName}`;\n        }\n    }\n    return layer.id;\n}\n\nexport function getLayerTypeIconName(layer: LayerState): IconName {\n    if (isVectorLayer(layer)) {\n        return 'map-marker';\n    } else if (layer.type === 'Image' || layer.type === 'VariableImage') {\n        return 'layout-grid';\n    }\n    return 'layer';\n}\n\nexport function findResource(resources: ResourceState[],\n                             ref: ResourceRefState): ResourceState | null {\n    return findResourceById(resources, ref.resId);\n}\n\nexport function findResourceByName(resources: ResourceState[],\n                                   name: string): ResourceState | null {\n    return resources.find(r => r.name === name);\n}\n\nexport function findResourceById(resources: ResourceState[],\n                                 id: number): ResourceState | null {\n    return resources.find(r => r.id === id);\n}\n\nexport function findVariable(resources: ResourceState[],\n                             ref: VariableRefState): VariableState | null {\n    const resource = findResource(resources, ref);\n    return resource && resource.variables && resource.variables.find(v => v.name === ref.varName);\n}\n\nexport function findOperation(operations: OperationState[],\n                              name: string): OperationState | null {\n    return operations && operations.find(op => op.qualifiedName === name || op.name === name);\n}\n\nexport function findDataSource(dataStores: DataStoreState[],\n                               dataStoreId: string,\n                               dataSourceId: string): DataSourceState | null {\n    const dataStore = dataStores && dataStores.find(dataStore => dataStore.id === dataStoreId);\n    if (dataStore) {\n        const dataSource = dataStore.dataSources\n                           && dataStore.dataSources.find(dataSource => dataSource.id === dataSourceId);\n        if (dataSource) {\n            return dataSource;\n        }\n    }\n    return null;\n}\n\nexport function findVariableIndexCoordinates(resources: ResourceState[],\n                                             ref: VariableDataRefState): any[] {\n    const resource = findResourceById(resources, ref.resId);\n    if (!resource) {\n        return EMPTY_ARRAY;\n    }\n    const coordVariables = resource.coordVariables;\n    if (!coordVariables) {\n        return EMPTY_ARRAY;\n    }\n    const variable = resource && resource.variables.find(v => v.name === ref.varName);\n    if (!variable) {\n        return EMPTY_ARRAY;\n    }\n    const varIndex = ref.varIndex;\n    if (!varIndex || !varIndex.length) {\n        return EMPTY_ARRAY;\n    }\n    const dimNames = variable.dimNames;\n    if (!dimNames || !dimNames.length) {\n        return EMPTY_ARRAY;\n    }\n\n    const coordDataMap = {};\n    coordVariables.forEach(cv => {\n        coordDataMap[cv.name] = cv.data;\n    });\n\n    let coords = [];\n    for (let i = 0; i < varIndex.length; i++) {\n        const coordIndex = varIndex[i];\n        const dimName = i < dimNames.length ? dimNames[i] : null;\n        let coord;\n        if (dimName) {\n            const coordData = coordDataMap[dimName];\n            if (coordData && coordData.length && coordIndex < coordData.length) {\n                coord = coordData[coordIndex];\n            } else {\n                coord = '-';\n            }\n        } else {\n            coord = '?';\n        }\n        coords.push([dimName, coord]);\n    }\n    return coords;\n}\n\nexport function getNonSpatialIndexers(resource: ResourceState,\n                                      ref: VariableDataRefState): DimSizes {\n    const coordVariables = resource.coordVariables;\n    if (!coordVariables) {\n        return EMPTY_OBJECT;\n    }\n    const variable = resource && resource.variables.find(v => v.name === ref.varName);\n    if (!variable) {\n        return EMPTY_OBJECT;\n    }\n    const varIndex = ref.varIndex;\n    if (!varIndex || !varIndex.length) {\n        return EMPTY_OBJECT;\n    }\n    const dimNames = variable.dimNames;\n    if (!dimNames || !dimNames.length) {\n        return EMPTY_OBJECT;\n    }\n\n    const coordDataMap = {};\n    coordVariables.forEach(cv => {\n        coordDataMap[cv.name] = cv.data;\n    });\n\n    let dimIndexers = {};\n    for (let i = 0; i < varIndex.length; i++) {\n        const coordIndex = varIndex[i];\n        const dimName = i < dimNames.length ? dimNames[i] : null;\n        if (dimName) {\n            const coordData = coordDataMap[dimName];\n            if (coordData && coordData.length && coordIndex < coordData.length) {\n                dimIndexers[dimName] = coordData[coordIndex];\n            }\n        }\n    }\n    return dimIndexers;\n}\n\nconst newCfSBaseMap = (id: string): BaseMapState => {\n    return {\n        id,\n        title: id[0].toUpperCase() + id.substring(1),\n        options: {\n            url: `https://storage.googleapis.com/esa-cfs-tiles/0.7.0/basemaps/${id}/{z}/{x}/{reverseY}.png`,\n            tilingScheme: 'Geographic',\n            maximumLevel: 4,\n        }\n    };\n};\n\nexport const BASE_MAPS: BaseMapState[] = [\n    // Note, the first entry will be used as default: \"natural\" in this case.\n    {\n        id: 'natural',\n        title: 'Natural',\n        options: null,\n    },\n    {\n        id: 'natural_offline',\n        title: 'Natural (offline)',\n        options: {\n            url: './Cesium/Assets/Textures/NaturalEarthII/{z}/{x}/{reverseY}.jpg',\n            credit: '© Analytical Graphics, Inc.',\n            tilingScheme: 'Geographic',\n            maximumLevel: 2\n        }\n    },\n    newCfSBaseMap('atmosphere'),\n    newCfSBaseMap('blue'),\n    newCfSBaseMap('dark'),\n    newCfSBaseMap('land'),\n    newCfSBaseMap('ocean'),\n];\n\nexport const DEFAULT_BASE_MAP_ID = 'atmosphere';\nexport const DEFAULT_BASE_MAP = BASE_MAPS.find(bm => bm.id === 'atmosphere');\n\nfunction newInitialWorldViewData(baseMapId?: string): WorldViewDataState {\n    return {\n        viewMode: '3D',\n        projectionCode: 'EPSG:4326',\n        baseMapId: baseMapId || DEFAULT_BASE_MAP_ID,\n        layers: [\n            {...AUTO_LAYER} as LayerState,\n            {...COUNTRIES_LAYER} as LayerState,\n            {...MY_PLACES_LAYER} as LayerState,\n        ],\n        selectedLayerId: AUTO_LAYER_ID,\n        selectedEntityId: null,\n        layerSplitPosition: 0.5,\n    };\n}\n\nfunction newInitialFigureViewData(resourceId: number): FigureViewDataState {\n    return {\n        resourceId: resourceId,\n        fixedSize: false,\n    };\n}\n\nfunction newInitialAnimationViewData(resourceId: number): AnimationViewDataState {\n    return {\n        resourceId: resourceId,\n        fixedSize: false,\n    };\n}\n\nfunction newInitialTableViewData(resName: string, varName: string): TableViewDataState {\n    return {resName, varName, dataRows: null};\n}\n\nlet WORLD_VIEW_COUNTER = 0;\n\nexport function newWorldView(baseMapId?: string): ViewState<WorldViewDataState> {\n    const viewNumber = ++WORLD_VIEW_COUNTER;\n    return {\n        title: `World (${viewNumber})`,\n        id: genSimpleId('world-'),\n        type: 'world',\n        icon: 'globe',\n        data: newInitialWorldViewData(baseMapId),\n    };\n}\n\nexport function newFigureView(resource: ResourceState): ViewState<FigureViewDataState> {\n    return {\n        title: getFigureViewTitle(resource.name),\n        id: `fig-${resource.id}`,\n        type: 'figure',\n        icon: 'timeline-area-chart',\n        data: newInitialFigureViewData(resource.id),\n    };\n}\n\nexport function getFigureViewTitle(resourceName: string): string {\n    return `Figure - ${resourceName}`;\n}\n\nexport function newAnimationView(resource: ResourceState): ViewState<AnimationViewDataState> {\n    return {\n        title: getAnimationViewTitle(resource.name),\n        id: `anim-${resource.id}`,\n        type: 'animation',\n        icon: 'play',\n        data: newInitialAnimationViewData(resource.id),\n    };\n}\n\nexport function getAnimationViewTitle(resourceName: string): string {\n    return `Animation - ${resourceName}`;\n}\n\nexport function newTableView(resName: string, varName: string): ViewState<TableViewDataState> {\n    return {\n        title: varName ? `${resName}.${varName}` : resName,\n        id: genSimpleId('table-'),\n        type: 'table',\n        icon: 'th',\n        data: newInitialTableViewData(resName, varName),\n    };\n}\n\n/**\n * An object that is used by CesiumGlobe to store the Cesium.Viewer instances.\n * It can't be a part of our global state object.\n */\nexport const EXTERNAL_OBJECT_STORE = {id: 'global_external_object_store'};\n\nfunction getWorldViewExternalObject(view: ViewState<any>): any {\n    if (view && view.type === 'world') {\n        return EXTERNAL_OBJECT_STORE['CesiumGlobe-' + view.id];\n    }\n}\n\nexport function getWorldViewViewer(view: ViewState<any>): Cesium.Viewer | null {\n    const externalObject = getWorldViewExternalObject(view);\n    if (externalObject) {\n        return externalObject.object as Cesium.Viewer;\n    }\n    return null;\n}\n\nexport function getWorldViewSelectedEntity(view: ViewState<any>): Cesium.Entity | null {\n    const viewer = getWorldViewViewer(view);\n    if (viewer && viewer.selectedEntity) {\n        return viewer.selectedEntity;\n    }\n    return null;\n}\n\nexport function getWorldViewVectorLayerForEntity(view: ViewState<any>,\n                                                 entity: Cesium.Entity | null): VectorLayerBase | null {\n    const externalObject = getWorldViewExternalObject(view);\n    if (!entity || !externalObject) {\n        return null;\n    }\n\n    const viewer = externalObject.object as Cesium.Viewer;\n    assert.ok(viewer);\n\n    const dataSourceMap = externalObject.state.dataSourceMap;\n    assert.ok(dataSourceMap);\n\n    const dataSourceCollection = viewer.dataSources;\n    // Find entity in viewer's dataSourceCollection\n    for (let index = 0; index < dataSourceCollection.length; index++) {\n        const dataSource: Cesium.DataSource = dataSourceCollection.get(index);\n        if (dataSource.entities.contains(entity)) {\n            // Find dataSource in dataSourceMap of CesiumGlobe --> layerId\n            for (let layerId of Object.getOwnPropertyNames(dataSourceMap)) {\n                if (dataSource === dataSourceMap[layerId]) {\n                    // Find layer for layerId in views's layer list\n                    for (let layer of view.data.layers) {\n                        if (layer.id === layerId) {\n                            assert.ok(isVectorLayer(layer));\n                            return layer;\n                        }\n                    }\n\n                }\n            }\n        }\n    }\n\n    return null;\n}\n\nexport function getWorldViewSelectedGeometryWKTGetter(view: ViewState<any>): GeometryWKTGetter {\n    const selectedEntity = getWorldViewSelectedEntity(view);\n    if (selectedEntity) {\n        return () => entityToGeometryWkt(selectedEntity);\n    }\n    return null;\n}\n\nexport function isVectorLayer(layer: LayerState) {\n    return layer.type === 'Vector' || layer.type === 'ResourceVector';\n}\n\nexport function isImageLayer(layer: LayerState) {\n    return layer.type === 'Image' || layer.type === 'VariableImage';\n}\n\n\nconst STROKE_COLORS = [\n    '#550000',\n    '#005500',\n    '#000055',\n    '#555555',\n];\n\nconst FILL_COLORS = [\n    '#FF0000',\n    '#FFA500',\n    '#FFFF00',\n    '#00FF00',\n    '#0000FF',\n    '#FF00FF',\n    '#00FFFF',\n];\n\nexport function newVariableLayer(resource: ResourceState,\n                                 variable: VariableState,\n                                 savedLayers?: { [name: string]: LayerState }): LayerState {\n    assert.ok(resource);\n    assert.ok(variable);\n    const spatialImageVariable = variable && isSpatialImageVariable(variable);\n    const spatialVectorVariable = variable && isSpatialVectorVariable(variable);\n    assert.ok(spatialImageVariable || spatialVectorVariable, 'geo-spatial variable expected');\n    if (spatialImageVariable) {\n        const restoredLayer = (savedLayers && savedLayers[variable.name]) as VariableImageLayerState;\n        const layerDisplayProperties = updateVariableLayerVarIndex(variable, restoredLayer);\n        return {\n            ...restoredLayer,\n            id: genLayerId(),\n            type: 'VariableImage',\n            name: `${resource.name}.${variable.name}`,\n            visible: true,\n            resId: resource.id,\n            resName: resource.name,\n            varName: variable.name,\n            ...layerDisplayProperties\n        } as VariableImageLayerState;\n    } else {\n        const restoredLayer = (savedLayers && savedLayers[variable.name]) as ResourceVectorLayerState;\n        const restoredStyle = restoredLayer && restoredLayer.style;\n        return {\n            ...restoredLayer,\n            id: genLayerId(),\n            type: 'ResourceVector',\n            name: `${resource.name}`,\n            visible: true,\n            resId: resource.id,\n            resName: resource.name,\n            style: getResourceVectorStyle(resource.id, restoredStyle)\n        } as ResourceVectorLayerState;\n    }\n}\n\nexport function updateAutoLayer(layer: LayerState,\n                                resource: ResourceState,\n                                variable: VariableState,\n                                savedLayers?: SavedLayers): LayerState {\n    assert.ok(layer);\n    assert.ok(layer.id === AUTO_LAYER_ID);\n    const spatialImageVariable = variable && isSpatialImageVariable(variable);\n    const spatialVectorVariable = variable && isSpatialVectorVariable(variable);\n    if (spatialImageVariable) {\n        const restoredLayer = (savedLayers && savedLayers[variable.name]) as VariableImageLayerState;\n        const layerDisplayProperties = updateVariableLayerVarIndex(variable, restoredLayer);\n        return {\n            ...layer,\n            ...restoredLayer,\n            type: 'VariableImage',\n            name: `Auto ${resource.name}.${variable.name}`,\n            resId: resource.id,\n            resName: resource.name,\n            varName: variable.name,\n            ...layerDisplayProperties,\n            id: AUTO_LAYER_ID,\n        };\n    } else if (spatialVectorVariable) {\n        const restoredLayer = (savedLayers && savedLayers[resource.name]) as ResourceVectorLayerState;\n        const restoredStyle = restoredLayer && restoredLayer.style;\n        return {\n            ...layer,\n            ...restoredLayer,\n            type: 'ResourceVector',\n            name: `Auto ${resource.name}`,\n            resId: resource.id,\n            resName: resource.name,\n            style: getResourceVectorStyle(resource.id, restoredStyle),\n            id: AUTO_LAYER_ID,\n        } as ResourceVectorLayerState;\n    } else {\n        return {\n            type: 'Unknown' as any,\n            name: variable ? `Auto ${variable.name} (geo-ref not found or recognized)` : 'Auto (no selection)',\n            visible: layer.visible,\n            id: AUTO_LAYER_ID,\n        } as any;\n    }\n}\n\nfunction getResourceVectorStyle(resourceId: number, restoredStyle: SimpleStyle) {\n    return {\n        ...SIMPLE_STYLE_DEFAULTS,\n        stroke: STROKE_COLORS[resourceId % STROKE_COLORS.length],\n        fill: FILL_COLORS[resourceId % FILL_COLORS.length],\n        ...restoredStyle,\n    };\n}\n\nexport function getLockForLoadDataSources(dataStoreId: string) {\n    return `loadDataSources(\"${dataStoreId}\")`;\n}\n\nexport function getLockForGetWorkspaceVariableStatistics(resName: string, varName: string, varIndex?: number[]) {\n    return getVariableLock('getWorkspaceVariableStatistics', resName, varName, varIndex);\n}\n\nfunction getVariableLock(op: string, resName: string, varName: string, varIndex: number[]) {\n    if (varIndex && varIndex.length) {\n        return `${op}(\"${resName}\", \"${varName}\", [${varIndex}])`;\n    } else {\n        return `${op}(\"${resName}\", \"${varName}\")`;\n    }\n}\n\n/**\n * If there is a restoredLayer try reusing its varIndex, otherwise generate new variable display properties with\n * new varIndex.\n *\n * @param variable\n * @param restoredLayer\n * @returns {{varIndex: any}}\n */\nfunction updateVariableLayerVarIndex(variable: VariableState | null,\n                                     restoredLayer: VariableImageLayerState | null) {\n    let layerDisplayProperties;\n    let varIndex;\n    if (restoredLayer) {\n        varIndex = restoredLayer.varIndex && restoredLayer.varIndex.slice();\n    } else if (variable) {\n        layerDisplayProperties = newVariableLayerDisplayProperties(variable);\n    }\n    if (variable) {\n        varIndex = newVarIndex(variable, varIndex);\n    }\n    return {...layerDisplayProperties, varIndex};\n}\n\nfunction newVarIndex(variable: VariableState, varIndex) {\n    const numSpatialDims = 2;\n    if (variable.numDims\n        && variable.numDims >= numSpatialDims\n        && (!varIndex || varIndex.length !== variable.numDims - numSpatialDims)) {\n        return Array(variable.numDims - numSpatialDims).fill(0);\n    }\n    return varIndex;\n}\n\n\nfunction newVariableLayerDisplayProperties(variable: VariableState) {\n    const defaultColorMapName = 'inferno';\n    const defaultDisplayMin = isNumber(variable.validMin) ? variable.validMin : 0.;\n    const defaultDisplayMax = isNumber(variable.validMax) ? variable.validMax : defaultDisplayMin + 1.;\n    return {\n        colorMapName: isString(variable.colorMapName) ? variable.colorMapName : defaultColorMapName,\n        displayMin: isNumber(variable.displayMin) ? variable.displayMin : defaultDisplayMin,\n        displayMax: isNumber(variable.displayMax) ? variable.displayMax : defaultDisplayMax,\n        alphaBlending: false,\n        opacity: 1.0,\n        brightness: 1.0,\n        contrast: 1.0,\n        hue: 0.0,\n        saturation: 1.0,\n        gamma: 1.0,\n        splitMode: SPLIT_MODE_OFF,\n    };\n}\n\nlet _hasWebGL = null;\n\n// from https://stackoverflow.com/questions/11871077/proper-way-to-detect-webgl-support\nexport function hasWebGL(): boolean {\n    let canvas;\n    let context;\n    let extensions;\n\n    if (_hasWebGL === null) {\n        try {\n            canvas = document.createElement('canvas');\n            _hasWebGL = true;\n            context = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n            extensions = context.getSupportedExtensions();\n            console.debug('WebGL supported extensions:', extensions);\n        } catch (e) {\n            _hasWebGL = false;\n            console.warn('WebGL not supported but required by world view');\n            return false;\n        }\n    }\n\n    canvas = null;\n    context = null;\n    return _hasWebGL;\n}\n\n\nexport function getPlacemarkTitleAndIndex(placemark: Placemark, placemarks: PlacemarkCollection): { title: string | undefined, index: number | undefined } {\n    const type = placemark.geometry.type;\n    const features = placemarks.features;\n    const titles = new Set<string>();\n    for (let f of features) {\n        const props = f.properties;\n        if (props && props.title && props.title.startsWith(type)) {\n            titles.add(props.title);\n        }\n    }\n    let title, index, t;\n    for (index = 1; index <= features.length + 1; index++) {\n        t = `${type} ${index}`;\n        if (!titles.has(t)) {\n            title = t;\n            break;\n        }\n    }\n    return {title, index};\n}\n","export function ok(condition: any, message?: string) {\r\n    if (!condition) {\r\n        throw new Error('assertion failed' + (message ? `: ${message}` : ''));\r\n    }\r\n}\r\n","/**\r\n * A web API client and related type definitions.\r\n *\r\n * The implementation is based on WebSockets with a JSON-RPC-based protocol.\r\n * For JSON-RPC details see http://www.jsonrpc.org/specification.\r\n *\r\n * A WebAPI server must implement a general method \"__cancel__(id: number): void\"\r\n * which cancels the method for the given *id*. The method call must either succeed with any \"response\" value\r\n * or fail by returning an \"error\" object.\r\n *\r\n * If the WebAPI server has successfully cancelled a running job, an \"error\" object with code 999\r\n * must be returned.\r\n *\r\n * To report progress, the WebAPI server can send \"progress\" objects:\r\n *\r\n *   {\r\n *      work?: number,\r\n *      total?: number,\r\n *      message?: string\r\n *   }\r\n *\r\n * This is non JSON-RCP, which only allows for either the \"response\" or an \"error\" object.\r\n *\r\n * @author Norman Fomferra\r\n */\r\n\r\nimport { IconName, Intent } from '@blueprintjs/core';\r\nimport {\r\n    Job,\r\n    JobFailure,\r\n    JobFailureHandler,\r\n    JobProgress,\r\n    JobProgressHandler,\r\n    JobPromise,\r\n    JobRequest,\r\n    JobResponseHandler,\r\n    JobStatus,\r\n    JobStatusEnum\r\n} from './Job'\r\nimport { WebSocketMin } from './WebSocketMock'\r\n\r\n// IMPORTANT NOTE: The following error codes MUST BE COPIED from cate/util/web/jsonrpchandler.py\r\n//\r\n// See http://www.jsonrpc.org/specification#error_object\r\n// The error codes from and including -32768 to -32000 are reserved for pre-defined errors.\r\nexport const ERROR_CODE_INVALID_REQUEST = -32600;\r\nexport const ERROR_CODE_METHOD_NOT_FOUND = -32601;\r\nexport const ERROR_CODE_INVALID_PARAMS = -32602;\r\n// The error codes from and including -32000 to -32099 are reserved for implementation-defined server-errors.\r\nexport const ERROR_CODE_OS_ERROR = -32001;\r\nexport const ERROR_CODE_OUT_OF_MEMORY = -32002;\r\nexport const ERROR_CODE_METHOD_ERROR = -32003;\r\nexport const ERROR_CODE_INVALID_RESPONSE = -32004;\r\n// The remainder of the space is available for application defined errors.\r\nexport const ERROR_CODE_CANCELLED = 999;\r\n\r\nconst CANCEL_METHOD = '__cancel__';\r\nconst DEBUG = false;\r\n\r\n\r\nexport type JobResponseTransformer<JobResponse> = (any) => JobResponse;\r\n\r\n/**\r\n * The web API's call interface.\r\n *\r\n * The WebAPIClient class is used to perform remote calls to server-side methods and to observe\r\n * their progress, success, failure, or cancellation in an asynchronous fashion.\r\n *\r\n * A WebAPI server must implement a general method \"__cancel__(id: number): void\"\r\n * which cancels the method for the given *id*. The method call must either succeed with any \"response\" value\r\n * or fail by returning an \"error\" object.\r\n *\r\n * If the WebAPIClient server has successfully cancelled a running job, an \"error\" object with the code\r\n * given by the CANCELLED_CODE constant (999) must be returned.\r\n *\r\n * To report progress, the WebAPIClient server can send \"progress\" objects:\r\n *\r\n *   {\r\n *      id: number;\r\n *      label?: string;\r\n *      message?: string;\r\n *      worked?: number;\r\n *      total?: number;\r\n *   }\r\n *\r\n * This is non JSON-RCP, which only allows for either the \"response\" or an \"error\" object.\r\n */\r\nexport interface WebAPIClient {\r\n    /**\r\n     * Test if the connection is open and active.\r\n     */\r\n    readonly isOpen: boolean;\r\n    readonly url: string;\r\n\r\n    onOpen: (event) => void;\r\n    onClose: (event) => void;\r\n    onError: (event) => void;\r\n    onWarning: (event) => void;\r\n\r\n    /**\r\n     * Perform a JSON-RPC call.\r\n     *\r\n     * @param method The method name.\r\n     * @param params The method parameters, either a list with positional arguments or an object\r\n     *               providing keyword arguments.\r\n     * @param onProgress An optional handler that is notified while the Job progresses.\r\n     *        Note that not all server-side methods provide progress notifications.\r\n     * @param transformer Optional transformer for the returned responses\r\n     */\r\n    call<JobResponse>(method: string,\r\n                      params: Array<any> | Object,\r\n                      onProgress?: (progress: JobProgress) => void,\r\n                      transformer?: JobResponseTransformer<JobResponse>): JobPromise<JobResponse>;\r\n\r\n    /**\r\n     * Cancels the job with the given ID.\r\n     *\r\n     * @param jobId the job ID\r\n     */\r\n    cancel(jobId: number);\r\n\r\n    /**\r\n     * Closes this client and the underlying connection, if any.\r\n     */\r\n    close(): void;\r\n}\r\n\r\n/**\r\n * Creates a new WebAPIClient.\r\n *\r\n * The implementation uses WebSockets with a JSON-RPC-based protocol.\r\n * For JSON-RPC details see http://www.jsonrpc.org/specification.\r\n *\r\n * @param url The WebSocket URL. WebSocket URL must start with \"ws://\".\r\n * @param firstMessageId The ID of the first JSON-RPC method call.\r\n * @param socket Alternative WebSocket instance for testing.\r\n * @returns {WebAPIClient} instance.\r\n */\r\nexport function newWebAPIClient(url: string, firstMessageId = 0, socket?: WebSocketMin): WebAPIClient {\r\n    return new WebAPIClientImpl(url, firstMessageId, socket);\r\n}\r\n\r\nclass WebAPIClientImpl implements WebAPIClient {\r\n\r\n    readonly url: string;\r\n    onOpen: (event: Event) => void;\r\n    onClose: (event: CloseEvent) => void;\r\n    onError: (event: ErrorEvent) => void;\r\n    onWarning: (event) => void;\r\n\r\n    private readonly socket: WebSocketMin;\r\n    private currentMessageId = 0;\r\n    private readonly activeJobs: JobImpl<any>[];\r\n\r\n    constructor(url: string, firstMessageId = 0, socket?: WebSocketMin) {\r\n        this.url = url;\r\n        this.currentMessageId = firstMessageId;\r\n        this.activeJobs = [];\r\n        this.socket = socket ? socket : new WebSocket(url);\r\n        this.socket.onopen = (event: Event) => {\r\n            if (DEBUG && process.env.NODE_ENV === 'development') {\r\n                console.debug(\"WebSocket.onopen:\", event);\r\n            }\r\n            if (this.onOpen) {\r\n                this.onOpen(event);\r\n            }\r\n        };\r\n        this.socket.onclose = (event: CloseEvent) => {\r\n            if (DEBUG && process.env.NODE_ENV === 'development') {\r\n                console.debug(\"WebSocket.onclose:\", event);\r\n            }\r\n            if (this.onClose) {\r\n                this.onClose(event);\r\n            }\r\n        };\r\n        this.socket.onerror = (event: ErrorEvent) => {\r\n            if (DEBUG && process.env.NODE_ENV === 'development') {\r\n                console.debug(\"WebSocket.onerror:\", event);\r\n            }\r\n            if (this.onError) {\r\n                this.onError(event);\r\n            }\r\n        };\r\n        this.socket.onmessage = (event: MessageEvent) => {\r\n            if (DEBUG && process.env.NODE_ENV === 'development') {\r\n                console.debug(\"WebSocket.onmessage:\", event);\r\n            }\r\n            this.processMessage(event.data);\r\n        }\r\n    }\r\n\r\n    get isOpen(): boolean {\r\n        return this.socket.readyState === WebSocket.OPEN;\r\n    }\r\n\r\n    call<JobResponse>(method: string,\r\n                      params: Array<any> | Object,\r\n                      onProgress?: (progress: JobProgress) => void,\r\n                      transformer?: JobResponseTransformer<JobResponse>): JobPromise<JobResponse> {\r\n        const request = {\r\n            'id': this.newId(),\r\n            'method': method,\r\n            'params': params,\r\n        };\r\n        const job = new JobImpl(this, request, transformer);\r\n        this.activeJobs[request.id] = job;\r\n        return job.invoke(onProgress);\r\n    }\r\n\r\n    cancel(jobId: number): void {\r\n        const job = this.activeJobs[jobId];\r\n        if (!job) {\r\n            this.warn(`Job with \"id\"=${jobId} does not exist`);\r\n            return;\r\n        } else {\r\n            job.cancel();\r\n        }\r\n    }\r\n\r\n    close(): void {\r\n        this.socket.close();\r\n    }\r\n\r\n    sendMessage(request: JobRequest) {\r\n        // console.log('WebAPIClient.sendMessage: request=', request)\r\n        const message = Object.assign({}, {jsonrpc: '2.0'}, request);\r\n        const messageText = JSON.stringify(message);\r\n        this.socket.send(messageText);\r\n    }\r\n\r\n    private processMessage(messageText: string): void {\r\n        let message;\r\n        try {\r\n            // JSON does not recognise NaN\r\n            // See https://stackoverflow.com/questions/15228651/how-to-parse-json-string-containing-nan-in-node-js\r\n            // message = JSON.parse(messageText);\r\n            // So we use evil eval() because JSON is valid JavaScript:\r\n            // eslint-disable-next-line\r\n            message = eval(`(${messageText})`);\r\n            // We cannot use the following naive approach, because \"NaN\" appears as word in operation doc strings\r\n            // const TEMP_NAN_STR = '[[<<~~***NaN***~~>>]]';\r\n            // const TEMP_NAN_JSON_STR = `\"${TEMP_NAN_STR}\"`;\r\n            // message = JSON.parse(messageText.replace(/\\bNaN\\b/g, TEMP_NAN_JSON_STR),\r\n            //                      (key, value) => value === TEMP_NAN_STR ? NaN : value);\r\n        } catch (err) {\r\n            this.warnInvalidJsonRcpMessage('Message is no valid JSON', messageText);\r\n            return;\r\n        }\r\n        if (message.jsonrpc !== '2.0' || typeof message.id !== 'number') {\r\n            this.warnInvalidJsonRcpMessage('Message is not JSON-RCP 2.0 compliant', messageText);\r\n            return;\r\n        }\r\n\r\n        const job = this.activeJobs[message.id];\r\n        if (!job) {\r\n            this.warnInvalidJsonRcpMessage(`Method with \"id\"=${message.id} has no associated job`, messageText);\r\n            return;\r\n        }\r\n\r\n        if (message.response || message.response === null) {\r\n            job.notifyDone(message.response);\r\n            delete this.activeJobs[message.id];\r\n        } else if (message.progress) {\r\n            message.progress.id = message.id;\r\n            job.notifyInProgress(message.progress)\r\n        } else if (message.error) {\r\n            job.notifyFailed(message.error);\r\n            delete this.activeJobs[message.id];\r\n        } else {\r\n            this.warnInvalidJsonRcpMessage(`Method is neither a \"response\", \"progress\", nor \"error\"`, messageText);\r\n            return;\r\n        }\r\n    }\r\n\r\n    private warnInvalidJsonRcpMessage(detailsMessage: string, jsonRcpMessage: string) {\r\n        if (this.onWarning) {\r\n            const message = `Received invalid JSON-RCP message from Cate service. ${detailsMessage}. Ignoring it.\\n--------------------\\n${jsonRcpMessage}\\n--------------------`;\r\n            this.onWarning({type: 'warning', message});\r\n        }\r\n    }\r\n\r\n    private warn(message: string) {\r\n        if (this.onWarning) {\r\n            this.onWarning({type: 'warning', message});\r\n        }\r\n    }\r\n\r\n    private newId(): number {\r\n        return this.currentMessageId++;\r\n    }\r\n}\r\n\r\n/**\r\n * Default implementation of the Job interface which uses the default WebAPI implementation.\r\n */\r\nclass JobImpl<JobResponse> implements Job {\r\n\r\n    private webAPIClient: WebAPIClientImpl;\r\n    private request: JobRequest;\r\n    private status: JobStatus;\r\n    private onProgress: JobProgressHandler;\r\n    private onResolve: JobResponseHandler<JobResponse>;\r\n    private onReject: JobFailureHandler;\r\n    private transformer: JobResponseTransformer<JobResponse>;\r\n\r\n    constructor(webAPIClient: WebAPIClientImpl, request: JobRequest, transformer: JobResponseTransformer<JobResponse>) {\r\n        this.webAPIClient = webAPIClient;\r\n        this.request = request;\r\n        this.status = JobStatusEnum.NEW;\r\n        this.transformer = transformer;\r\n    }\r\n\r\n    getRequest() {\r\n        return this.request;\r\n    }\r\n\r\n    getStatus(): JobStatus {\r\n        return this.status;\r\n    }\r\n\r\n    isCancelled(): boolean {\r\n        return this.status === JobStatusEnum.CANCELLED;\r\n    }\r\n\r\n    cancel(onResolve?: JobResponseHandler<void>,\r\n           onReject?: JobFailureHandler): void {\r\n        this.webAPIClient.call<void>(CANCEL_METHOD, {id: this.request.id})\r\n            .then(onResolve || (() => {\r\n            }), onReject || (() => {\r\n            }));\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////\r\n    // Implementation details\r\n\r\n    invoke(onProgress?: JobProgressHandler): JobPromise<JobResponse> {\r\n\r\n        const executor = (onResolve: JobResponseHandler<JobResponse>, onReject: JobFailureHandler) => {\r\n            this.setHandlers(onProgress, onResolve, onReject);\r\n            this.sendMessage();\r\n            this.setStatus(JobStatusEnum.SUBMITTED);\r\n        };\r\n\r\n        const promise = new Promise<JobResponse>(executor.bind(this));\r\n        // Convert the plain promise into a JobPromise\r\n        promise['getJob'] = this.getJob.bind(this);\r\n        promise['getJobId'] = this.getJobId.bind(this);\r\n        return promise as JobPromise<JobResponse>;\r\n    }\r\n\r\n    notifyInProgress(progress: JobProgress) {\r\n        this.setStatus(JobStatusEnum.IN_PROGRESS);\r\n        if (this.onProgress) {\r\n            this.onProgress(progress);\r\n        }\r\n    }\r\n\r\n    notifyDone(response: JobResponse) {\r\n        this.setStatus(JobStatusEnum.DONE);\r\n        if (this.onResolve) {\r\n            this.onResolve(this.transformer ? this.transformer(response) : response);\r\n        }\r\n    }\r\n\r\n    notifyFailed(failure: JobFailure) {\r\n        this.setStatus(failure.code === ERROR_CODE_CANCELLED ? JobStatusEnum.CANCELLED : JobStatusEnum.FAILED);\r\n        if (this.onReject) {\r\n            this.onReject(failure);\r\n        }\r\n    }\r\n\r\n    private getJob(): Job {\r\n        return this;\r\n    }\r\n\r\n    private getJobId(): number {\r\n        return this.getRequest().id;\r\n    }\r\n\r\n    private setHandlers(onProgress, onResolve, onReject) {\r\n        this.onProgress = onProgress;\r\n        this.onResolve = onResolve;\r\n        this.onReject = onReject;\r\n    }\r\n\r\n    private sendMessage() {\r\n        this.webAPIClient.sendMessage(this.request);\r\n    }\r\n\r\n    private setStatus(status: JobStatus) {\r\n        this.status = status;\r\n    }\r\n}\r\n\r\nexport function getJobFailureIntentName(failure: JobFailure): Intent {\r\n    if (failure) {\r\n        switch (failure.code) {\r\n            case ERROR_CODE_INVALID_PARAMS:\r\n            case ERROR_CODE_CANCELLED:\r\n                return Intent.PRIMARY;\r\n            case ERROR_CODE_OS_ERROR:\r\n                return Intent.WARNING;\r\n            default:\r\n                return Intent.WARNING;\r\n        }\r\n    }\r\n    return Intent.WARNING;\r\n}\r\n\r\nexport function getJobFailureIconName(failure: JobFailure): IconName {\r\n    if (failure) {\r\n        if (failure.data) {\r\n            if (failure.data.exception === 'cate.core.ds.NetworkError') {\r\n                return 'offline';\r\n            }\r\n            if (failure.data.exception === 'cate.core.ds.DataAccessError') {\r\n                return 'database';\r\n            }\r\n        }\r\n        switch (failure.code) {\r\n            case ERROR_CODE_INVALID_PARAMS:\r\n                return 'manually-entered-data';\r\n            case ERROR_CODE_CANCELLED:\r\n                return 'hand';\r\n            default:\r\n                return 'error';\r\n        }\r\n    }\r\n    return 'warning-sign';\r\n}\r\n\r\nexport function getJobFailureTitle(failure: JobFailure): string {\r\n\r\n    if (failure) {\r\n        console.log(failure);\r\n        if (failure.data) {\r\n            if (failure.data.exception === 'cate.core.ds.NetworkError') {\r\n                return 'Network Problem';\r\n            }\r\n            if (failure.data.exception === 'cate.core.ds.DataAccessError') {\r\n                return 'Data Access Error';\r\n            }\r\n        }\r\n        switch (failure.code) {\r\n            case ERROR_CODE_INVALID_PARAMS:\r\n                return 'Invalid Input';\r\n            case ERROR_CODE_OUT_OF_MEMORY:\r\n                return 'Out-Of-Memory Error';\r\n            case ERROR_CODE_OS_ERROR:\r\n                return 'External Problem';\r\n            case ERROR_CODE_CANCELLED:\r\n                return 'Task Cancelled';\r\n            case ERROR_CODE_METHOD_NOT_FOUND:\r\n                return 'Internal Error (Method Not Found)';\r\n            case ERROR_CODE_INVALID_REQUEST:\r\n                return 'Internal Error (Invalid Request)';\r\n            case ERROR_CODE_INVALID_RESPONSE:\r\n                return 'Internal Error (Invalid Response)';\r\n            case ERROR_CODE_METHOD_ERROR:\r\n                return 'Operation Error';\r\n        }\r\n    }\r\n\r\n    return 'Unknown Error';\r\n}\r\n\r\nconst NON_DEVELOPER_ERRORS = [\r\n    ERROR_CODE_INVALID_PARAMS,\r\n    ERROR_CODE_CANCELLED,\r\n    ERROR_CODE_OS_ERROR,\r\n    ERROR_CODE_OUT_OF_MEMORY,\r\n];\r\n\r\nexport function isDeveloperError(failure: JobFailure): boolean {\r\n    return NON_DEVELOPER_ERRORS.indexOf(failure.code) < 0;\r\n}\r\n\r\n\r\nconst USER_ERRORS = [\r\n    ERROR_CODE_INVALID_PARAMS,\r\n    ERROR_CODE_CANCELLED,\r\n];\r\n\r\nexport function isUserError(failure: JobFailure): boolean {\r\n    return USER_ERRORS.indexOf(failure.code) >= 0;\r\n}\r\n","import { DatasetDescriptor, DataSourceState, DataStoreState, DimSizes } from '../../state';\r\nimport { JobProgress, JobPromise } from '../Job';\r\nimport { WebAPIClient } from '../WebAPIClient';\r\n\r\n\r\nexport class DatasetAPI {\r\n    private readonly webAPIClient: WebAPIClient;\r\n\r\n    constructor(webAPIClient: WebAPIClient) {\r\n        this.webAPIClient = webAPIClient;\r\n    }\r\n\r\n    getDataStores(): JobPromise<DataStoreState[]> {\r\n        return this.webAPIClient.call('get_data_stores', []);\r\n    }\r\n\r\n    getDataSources(dataStoreId: string,\r\n                   onProgress: (progress: JobProgress) => void): JobPromise<DataSourceState[]> {\r\n        return this.webAPIClient.call('get_data_sources',\r\n                                      [dataStoreId],\r\n                                      onProgress,\r\n                                      DatasetAPI.responseToDataSources);\r\n    }\r\n\r\n    getDataSourceMetaInfo(dataStoreId: string, dataSourceId: string,\r\n                          onProgress: (progress: JobProgress) => void): JobPromise<DatasetDescriptor> {\r\n        return this.webAPIClient.call('get_data_source_meta_info',\r\n                                      [dataStoreId, dataSourceId],\r\n                                      onProgress,\r\n                                      DatasetAPI.responseToMetaInfo);\r\n    }\r\n\r\n    addLocalDataSource(dataSourceId: string, filePathPattern: string,\r\n                       onProgress: (progress: JobProgress) => void): JobPromise<DataSourceState[]> {\r\n        return this.webAPIClient.call('add_local_data_source',\r\n                                      [dataSourceId, filePathPattern],\r\n                                      onProgress);\r\n    }\r\n\r\n    removeLocalDataSource(dataSourceId: string, removeFiles: boolean,\r\n                          onProgress: (progress: JobProgress) => void): JobPromise<DataSourceState[]> {\r\n        return this.webAPIClient.call('remove_local_data_source',\r\n                                      [dataSourceId, removeFiles],\r\n                                      onProgress);\r\n    }\r\n\r\n    extractPixelValues(baseDir: string,\r\n                       source: string,\r\n                       point: [number, number],\r\n                       indexers: DimSizes): JobPromise<{ [varName: string]: number } | null> {\r\n        return this.webAPIClient.call('extract_pixel_values', [baseDir, source, point, indexers]);\r\n    }\r\n\r\n    static responseToDataSources(dataSources: any[]): DataSourceState[] {\r\n        // noinspection JSUnusedLocalSymbols\r\n        return dataSources.map((dataSource, i): DataSourceState => {\r\n            console.debug(`dataSources[${i}]:`, dataSource);\r\n            return {\r\n                id: dataSource['id'],\r\n                title: dataSource['title'],\r\n                dataType: dataSource['data_type'] || 'dataset',\r\n                capabilities: dataSource['verification_flags'],\r\n                metaInfoStatus: 'init',\r\n            };\r\n        });\r\n    }\r\n\r\n    static responseToMetaInfo(response: any): DatasetDescriptor {\r\n        return response as DatasetDescriptor;\r\n    }\r\n}\r\n\r\n","import { OperationInputState, OperationOutputState, OperationState } from '../../state';\r\nimport { JobPromise } from '../Job';\r\nimport { WebAPIClient } from '../WebAPIClient';\r\n\r\nfunction responseToOperations(operationsResponse: any): OperationState[] {\r\n    return operationsResponse ? operationsResponse.map(responseOperationToOperation) : null;\r\n}\r\n\r\nfunction responseOperationToOperation(op: any): OperationState {\r\n    return {\r\n        qualifiedName: op.qualified_name,\r\n        name: op.name || op.qualified_name,\r\n        description: (op.header && op.header.description) || null,\r\n        tags: (op.header && op.header.tags) || [],\r\n        hasMonitor: (op.has_monitor || false),\r\n        inputs: op.inputs.map(responseInputToOperationInput),\r\n        outputs: op.outputs.map(responseOutputToOperationOutput),\r\n    }\r\n}\r\n\r\nfunction responseInputToOperationInput(input: any): OperationInputState {\r\n    return {\r\n        name: input.name,\r\n        dataType: input.data_type,\r\n        description: (input.description || null),\r\n        units: input.units,\r\n        password: input.password,\r\n        /* optional properties used mainly for validation */\r\n        defaultValue: input.default_value,\r\n        nullable: (input.nullable || input.default_value === null),\r\n        valueSet: input.value_set,\r\n        valueSetSource: input.value_set_source,\r\n        valueRange: input.value_range,\r\n        scriptLang: input.script_lang,\r\n        fileOpenMode: input.file_open_mode,\r\n        fileFilters: input.file_filters,\r\n        fileProps: input.file_props,\r\n        noUI: input.no_ui || input.step_id,\r\n    };\r\n}\r\n\r\nfunction responseOutputToOperationOutput(output: any): OperationOutputState {\r\n    return {\r\n        name: output.name,\r\n        dataType: output.data_type,\r\n        description: (output.description || null),\r\n    };\r\n}\r\n\r\nexport class OperationAPI {\r\n    private webAPIClient: WebAPIClient;\r\n\r\n    constructor(webAPI: WebAPIClient) {\r\n        this.webAPIClient = webAPI;\r\n    }\r\n\r\n    getOperations(): JobPromise<OperationState[]> {\r\n        return this.webAPIClient.call('get_operations', [], null, responseToOperations);\r\n    }\r\n\r\n    /*\r\n    callOperation(opName: string, opParams: any, onProgress: (progress: JobProgress) => void): JobPromise<any> {\r\n        return this.webAPIClient.call('call_operation', [opName, opParams], onProgress);\r\n    }\r\n    */\r\n}\r\n","import { isDefined, isNumber } from '../../../common/types';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from '../../selectors';\nimport { ImageStatisticsState, OperationKWArgs, ResourceState, VariableState, WorkspaceState } from '../../state';\nimport { JobProgress, JobPromise } from '../Job';\nimport { WebAPIClient } from '../WebAPIClient';\n\nfunction responseToVariables(variablesResponse: any): VariableState[] {\n    return (variablesResponse || EMPTY_ARRAY).map(v => {\n        const attributes = v.attributes || EMPTY_OBJECT;\n        let validMin = attributes['valid_min'];\n        let validMax = attributes['valid_max'];\n        const validRange = attributes['valid_range'];\n        const rangeOk = isDefined(validRange) && validRange.length === 2;\n        validMin = (!isNumber(validMin) && rangeOk && isNumber(validRange[0])) ? validRange[0] : validMin;\n        validMax = (!isNumber(validMax) && rangeOk && isNumber(validRange[1])) ? validRange[1] : validMax;\n        const units = attributes['units'];\n        if (units === 'kelvin' || units === 'Kelvin') {\n            const validMinMin = 270;\n            const validMaxMax = validMinMin + 40;\n            if (!isNumber(validMin) || validMin < validMinMin) {\n                validMin = validMinMin;\n            }\n            if (!isNumber(validMax) || validMax > validMaxMax) {\n                validMax = validMaxMax;\n            }\n        }\n        return {\n            ...v,\n            units,\n            validMin,\n            validMax,\n        };\n    });\n}\n\nfunction responseToResources(resourcesResponse: any): ResourceState[] {\n    return (resourcesResponse || EMPTY_ARRAY).map(r => {\n        if (r.variables) {\n            return {...r, variables: responseToVariables(r.variables)};\n        }\n        return r;\n    });\n}\n\nfunction responseToWorkspace(workspaceResponse: any): WorkspaceState {\n    if (!workspaceResponse) {\n        return null;\n    }\n    return {\n        baseDir: workspaceResponse.base_dir,\n        description: workspaceResponse.description,\n        isScratch: workspaceResponse.is_scratch,\n        isModified: workspaceResponse.is_modified,\n        isSaved: workspaceResponse.is_saved,\n        workflow: workspaceResponse.workflow,\n        resources: responseToResources(workspaceResponse.resources),\n    };\n}\n\nfunction responseToWorkspaceAndResName(workspaceAndResNameResponse: any): [WorkspaceState, string] {\n    return [responseToWorkspace(workspaceAndResNameResponse[0]), workspaceAndResNameResponse[1]];\n}\n\nexport class WorkspaceAPI {\n    private webAPIClient: WebAPIClient;\n\n    constructor(webAPI: WebAPIClient) {\n        this.webAPIClient = webAPI;\n    }\n\n    listWorkspaces(): JobPromise<string[]> {\n        return this.webAPIClient.call('list_workspace_names', []);\n    }\n\n    newWorkspace(baseDir: string | null): JobPromise<WorkspaceState> {\n        return this.webAPIClient.call('new_workspace',\n                                      [baseDir],\n                                      null,\n                                      responseToWorkspace);\n    }\n\n    openWorkspace(baseDir: string,\n                  onProgress: (progress: JobProgress) => void): JobPromise<WorkspaceState> {\n        return this.webAPIClient.call('open_workspace',\n                                      [baseDir],\n                                      onProgress,\n                                      responseToWorkspace);\n    }\n\n    closeWorkspace(baseDir: string): JobPromise<null> {\n        return this.webAPIClient.call('close_workspace',\n                                      [baseDir]);\n    }\n\n    saveWorkspace(baseDir: string,\n                  onProgress: (progress: JobProgress) => void): JobPromise<WorkspaceState> {\n        return this.webAPIClient.call('save_workspace',\n                                      [baseDir],\n                                      onProgress,\n                                      responseToWorkspace);\n    }\n\n    saveWorkspaceAs(baseDir: string, toDir: string,\n                    onProgress: (progress: JobProgress) => void): JobPromise<WorkspaceState> {\n        return this.webAPIClient.call('save_workspace_as',\n                                      [baseDir, toDir],\n                                      onProgress,\n                                      responseToWorkspace);\n    }\n\n    cleanWorkspace(baseDir: string): JobPromise<WorkspaceState> {\n        return this.webAPIClient.call('clean_workspace',\n                                      [baseDir],\n                                      null, responseToWorkspace);\n    }\n\n    setWorkspaceResource(baseDir: string,\n                         opName: string,\n                         opArgs: OperationKWArgs,\n                         resName: string | null,\n                         overwrite: boolean,\n                         onProgress: (progress: JobProgress) => void): JobPromise<[WorkspaceState, string]> {\n        return this.webAPIClient.call('set_workspace_resource',\n                                      [baseDir, opName, opArgs, resName, overwrite],\n                                      onProgress,\n                                      responseToWorkspaceAndResName);\n    }\n\n    setWorkspaceResourcePersistence(baseDir: string, resName: string, persistent: boolean): JobPromise<WorkspaceState> {\n        return this.webAPIClient.call('set_workspace_resource_persistence',\n                                      [baseDir, resName, persistent],\n                                      null,\n                                      responseToWorkspace);\n    }\n\n    runOpInWorkspace(baseDir: string,\n                     opName: string,\n                     opArgs: OperationKWArgs,\n                     onProgress: (progress: JobProgress) => void): JobPromise<any> {\n        return this.webAPIClient.call('run_op_in_workspace',\n                                      [baseDir, opName, opArgs], onProgress);\n    }\n\n    renameWorkspaceResource(baseDir: string, resName: string, newResName: string): JobPromise<WorkspaceState> {\n        return this.webAPIClient.call('rename_workspace_resource',\n                                      [baseDir, resName, newResName],\n                                      null,\n                                      responseToWorkspace);\n    }\n\n    deleteWorkspace(baseDir: string, deleteEntireWorkspace = true): JobPromise<WorkspaceState> {\n        return this.webAPIClient.call('delete_workspace',\n                                      [baseDir, deleteEntireWorkspace],\n                                      null,\n                                      responseToWorkspace);\n    }\n\n    deleteWorkspaceResource(baseDir: string, resName: string): JobPromise<WorkspaceState> {\n        return this.webAPIClient.call('delete_workspace_resource',\n                                      [baseDir, resName],\n                                      null,\n                                      responseToWorkspace);\n    }\n\n    getWorkspaceVariableStatistics(baseDir: string, resName: string, varName: string, varIndex: Array<number> | null,\n                                   onProgress: (progress: JobProgress) => void): JobPromise<ImageStatisticsState> {\n        return this.webAPIClient.call('get_workspace_variable_statistics',\n                                      [baseDir, resName, varName, varIndex],\n                                      onProgress);\n    }\n}\n","import { BackendConfigState } from '../../state';\r\nimport { JobPromise } from '../Job';\r\nimport { WebAPIClient } from '../WebAPIClient';\r\n\r\n\r\nfunction fromPythonConfig(configResponse: any): BackendConfigState | null {\r\n    if (!configResponse) {\r\n        return null;\r\n    }\r\n    return {\r\n        dataStoresPath: configResponse.data_stores_path,\r\n        useWorkspaceImageryCache: configResponse.use_workspace_imagery_cache,\r\n        resourceNamePattern: configResponse.default_res_pattern,\r\n        proxyUrl: configResponse.http_proxy\r\n    };\r\n}\r\n\r\nfunction toPythonConfig(backendConfig: BackendConfigState): any {\r\n    if (!backendConfig) {\r\n        return {};\r\n    }\r\n    return {\r\n        data_stores_path: backendConfig.dataStoresPath,\r\n        use_workspace_imagery_cache: backendConfig.useWorkspaceImageryCache,\r\n        default_res_pattern: backendConfig.resourceNamePattern,\r\n        http_proxy: backendConfig.proxyUrl\r\n    };\r\n}\r\n\r\nexport class BackendConfigAPI {\r\n    private webAPIClient: WebAPIClient;\r\n\r\n    constructor(webAPI: WebAPIClient) {\r\n        this.webAPIClient = webAPI;\r\n    }\r\n\r\n    getBackendConfig(): JobPromise<BackendConfigState> {\r\n        return this.webAPIClient.call('get_config', [], null, fromPythonConfig);\r\n    }\r\n\r\n    setBackendConfig(config: BackendConfigState): JobPromise<null> {\r\n        return this.webAPIClient.call('set_config', [toPythonConfig(config)]);\r\n    }\r\n}\r\n","import { ColorMapCategoryState } from '../../state';\r\nimport { JobPromise } from '../Job';\r\nimport { WebAPIClient } from '../WebAPIClient';\r\n\r\n\r\nfunction responseToColorMaps(colorMapsResponse: any[][]): ColorMapCategoryState[] {\r\n    if (!colorMapsResponse) {\r\n        return null;\r\n    }\r\n    return colorMapsResponse.map((v1: any[]) => {\r\n        return {\r\n            name: v1[0],\r\n            description: v1[1],\r\n            colorMaps: v1[2].map((v2) => {\r\n                return {\r\n                    name: v2[0],\r\n                    imageData: v2[1]\r\n                };\r\n            })\r\n        };\r\n    });\r\n}\r\n\r\nexport class ColorMapsAPI {\r\n    private readonly webAPIClient: WebAPIClient;\r\n\r\n    constructor(webAPIClient: WebAPIClient) {\r\n        this.webAPIClient = webAPIClient;\r\n    }\r\n\r\n    getColorMaps(): JobPromise<ColorMapCategoryState[]> {\r\n        return this.webAPIClient.call('get_color_maps', [], null, responseToColorMaps);\r\n    }\r\n}\r\n","import { WebAPIClient } from '../WebAPIClient';\r\nimport { JobPromise } from '../Job';\r\nimport { FileNode } from '../../components/desktop/fs/FileNode';\r\n\r\n\r\nexport class FileSystemAPI {\r\n    private webAPIClient: WebAPIClient;\r\n\r\n    constructor(webAPI: WebAPIClient) {\r\n        this.webAPIClient = webAPI;\r\n    }\r\n\r\n    updateFileNode(path: string): JobPromise<FileNode> {\r\n        return this.webAPIClient.call<FileNode>('update_file_node', [path]);\r\n    }\r\n}\r\n","\nexport class ServiceShutdownAPI {\n    shutdown(serviceURL: string): Promise<null> {\n        return fetch(serviceURL + \"/exit\")\n            .then(() => null);\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/cate-icon-128.4edcc198.png\";","import * as React from 'react';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { FieldValue, toTextValue } from '../../components/field/Field';\r\nimport { TextField } from '../../components/field/TextField';\r\n\r\n// Note: DictValueEditor and ArbitraryValueEditor are almost the same - use the React HLC pattern\r\n\r\ninterface IDictValueEditorProps extends IValueEditorProps<string> {\r\n}\r\n\r\nexport class DictValueEditor extends React.Component<IDictValueEditorProps, null> {\r\n    private static TEXT_FIELD_STYLE = {flexGrow: 1};\r\n\r\n    constructor(props: IDictValueEditorProps) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(value: FieldValue<string>) {\r\n        this.props.onChange(this.props.input, value);\r\n    }\r\n\r\n    render() {\r\n        const textValue = toTextValue(this.props.value);\r\n        return (\r\n            <TextField\r\n                value={textValue}\r\n                validator={validateDictText}\r\n                size={36}\r\n                placeholder='Enter key-value pairs (Python), separated by comma'\r\n                onChange={this.onChange}\r\n                style={DictValueEditor.TEXT_FIELD_STYLE}\r\n                nullable={this.props.input.nullable}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport function validateDictText(value: string | null) {\r\n    if (!value || value.trim() === '') {\r\n        return;\r\n    }\r\n    // Define Python eval context:\r\n    //\r\n    //noinspection JSUnusedLocalSymbols\r\n    // eslint-disable-next-line\r\n    const None = null;\r\n    //noinspection JSUnusedLocalSymbols\r\n    // eslint-disable-next-line\r\n    const True = true;\r\n    //noinspection JSUnusedLocalSymbols\r\n    // eslint-disable-next-line\r\n    const False = false;\r\n    //\r\n    // To validate, e.g. \"layers=3, time=19\", try eval(\"var layers=3, time=19;\")\r\n    // which should succeed if value is fine\r\n    // eslint-disable-next-line\r\n    eval(`var ${value};`);\r\n}\r\n","import * as React from 'react';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { FieldValue, toTextValue } from '../../components/field/Field';\r\nimport { TextField } from '../../components/field/TextField';\r\n\r\n// Note: DictValueEditor and LiteralValueEditor are almost the same - use the React HLC pattern\r\n\r\ninterface ILiteralValueEditorProps extends IValueEditorProps<string> {\r\n    placeholder?: string;\r\n    validator?: (value: any) => void;\r\n}\r\n\r\nexport class LiteralValueEditor extends React.Component<ILiteralValueEditorProps, null> {\r\n    private static TEXT_FIELD_STYLE = {flexGrow: 1};\r\n\r\n    constructor(props: ILiteralValueEditorProps) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(value: FieldValue<string>) {\r\n        this.props.onChange(this.props.input, value);\r\n    }\r\n\r\n    render() {\r\n        const textValue = toTextValue(this.props.value);\r\n        return (\r\n            <TextField\r\n                value={textValue}\r\n                validator={this.props.validator || validatePythonLiteralText}\r\n                size={36}\r\n                placeholder={this.props.placeholder || 'Enter constant (Python) literal'}\r\n                onChange={this.onChange}\r\n                style={LiteralValueEditor.TEXT_FIELD_STYLE}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport function validatePythonLiteralText(value: string | null) {\r\n    if (!value || value.trim() === '') {\r\n        return;\r\n    }\r\n    // Define Python eval context:\r\n    //\r\n    //noinspection JSUnusedLocalSymbols\r\n    // eslint-disable-next-line\r\n    const None = null;\r\n    //noinspection JSUnusedLocalSymbols\r\n    // eslint-disable-next-line\r\n    const True = true;\r\n    //noinspection JSUnusedLocalSymbols\r\n    // eslint-disable-next-line\r\n    const False = false;\r\n    //\r\n    // Use JavaScript's eval() to validate Python literals.\r\n    // This is not exact, but works for most literals.\r\n    // eslint-disable-next-line\r\n    eval(value);\r\n}\r\n","import * as React from 'react';\r\nimport { AnchorButton, Classes, Dialog, IconName, Intent, Tooltip } from '@blueprintjs/core';\r\n\r\ninterface IModalDialogProps {\r\n    isOpen: boolean;\r\n    title?: string;\r\n    confirmIconName?: IconName;\r\n    confirmTitle?: string;\r\n    confirmTooltip?: JSX.Element | string;\r\n    icon?: IconName;\r\n    renderBody?: () => JSX.Element | JSX.Element[];\r\n    renderActions?: () => JSX.Element[];\r\n    renderExtraActions?: () => JSX.Element[];\r\n    onConfirm?: () => void;\r\n    onCancel?: () => void;\r\n    canConfirm?: () => boolean;\r\n    noCancelButton?: boolean;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\ntype IModalDialogState = any;\r\n\r\nexport class ModalDialog extends React.Component<IModalDialogProps, IModalDialogState> {\r\n\r\n    render() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n        return (\r\n            <Dialog\r\n                isOpen={this.props.isOpen}\r\n                title={this.props.title}\r\n                icon={this.props.icon}\r\n                onClose={this.props.onCancel}\r\n                autoFocus={true}\r\n                canEscapeKeyClose={true}\r\n                canOutsideClickClose={false}\r\n                enforceFocus={true}\r\n                style={this.props.style}\r\n            >\r\n                {this.renderDialogContent()}\r\n                {this.renderDialogFooter()}\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    private renderDialogContent() {\r\n        return (\r\n            <div className={Classes.DIALOG_BODY}>\r\n                {this.props.renderBody ? this.props.renderBody() : this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderDialogFooter() {\r\n        return (\r\n            <div className={Classes.DIALOG_FOOTER}>\r\n                <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                    {this.props.renderActions ? this.props.renderActions() : this.renderActions()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderActions() {\r\n        const canConfirm = this.props.canConfirm ? this.props.canConfirm() : true;\r\n\r\n        let cancelButton;\r\n        if (!this.props.noCancelButton) {\r\n            cancelButton = (<AnchorButton key=\"cancel\"\r\n                                          onClick={this.props.onCancel}>Cancel</AnchorButton>);\r\n        }\r\n\r\n        let confirmButton = (<AnchorButton key=\"confirm\"\r\n                                           onClick={this.props.onConfirm}\r\n                                           intent={Intent.PRIMARY}\r\n                                           disabled={!canConfirm}\r\n                                           icon={this.props.confirmIconName}>{this.props.confirmTitle || 'OK'}</AnchorButton>);\r\n\r\n        if (this.props.confirmTooltip) {\r\n            confirmButton = (\r\n                <Tooltip key=\"confirmTooltip\" content={this.props.confirmTooltip}>{confirmButton}</Tooltip>);\r\n        }\r\n\r\n        let extraActions;\r\n        if (this.props.renderExtraActions) {\r\n            extraActions = this.props.renderExtraActions();\r\n        }\r\n\r\n        return extraActions ? [cancelButton, ...extraActions, confirmButton] : [cancelButton, confirmButton];\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { AnimationViewDataState, ResourceState, State } from '../state';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { ViewState } from '../components/ViewState';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { Card } from '@blueprintjs/core';\r\nimport { isNumber } from '../../common/types';\r\n\r\n\r\ninterface IAnimationViewOwnProps {\r\n    view: ViewState<AnimationViewDataState>;\r\n}\r\n\r\ninterface IAnimationViewProps extends IAnimationViewOwnProps {\r\n    baseUrl: string;\r\n    baseDir: string | null;\r\n    animationResources: ResourceState[];\r\n    mplWebSocketUrl: string;\r\n}\r\n\r\ninterface IAnimationViewState {\r\n    loading?: boolean;\r\n}\r\n\r\nfunction mapStateToProps(state: State, ownProps: IAnimationViewOwnProps): IAnimationViewProps {\r\n    return {\r\n        view: ownProps.view,\r\n        baseUrl: selectors.webAPIRestUrlSelector(state),\r\n        baseDir: selectors.workspaceBaseDirSelector(state),\r\n        animationResources: selectors.animationResourcesSelector(state),\r\n        mplWebSocketUrl: selectors.mplWebSocketUrlSelector(state),\r\n    };\r\n}\r\n\r\n/**\r\n * This component displays a 2D map with a number of layers.\r\n */\r\nclass AnimationView extends React.Component<IAnimationViewProps & DispatchProp<State>, IAnimationViewState> {\r\n    static readonly DIV_STYLE: React.CSSProperties = {\r\n        width: '100%',\r\n        height: '100%',\r\n        //height: 400,\r\n        overflowX: 'hidden',\r\n        overflowY: 'auto'\r\n    };\r\n\r\n    constructor(props: IAnimationViewProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.state = {};\r\n        this.divElement = null;\r\n        this.onRef = this.onRef.bind(this)\r\n    }\r\n\r\n    private divElement;\r\n\r\n    componentWillMount(): void {\r\n        if (!this.props.view.data.innerHTML && !this.state.loading) {\r\n            this.setState({loading: true}, () => {\r\n                this.props.dispatch(actions.loadAnimationViewData(this.props.view.id, this.props.view.data.resourceId) as any);\r\n            });\r\n        }\r\n    }\r\n\r\n    private onRef(divElement: HTMLDivElement) {\r\n        this.divElement = divElement;\r\n\r\n        if (divElement && this.props.view.data.innerHTML) {\r\n            const elements = divElement.getElementsByTagName('script');\r\n            for (let i = 0; i < elements.length; i++) {\r\n                const script = elements[i].innerHTML;\r\n                try {\r\n                    // indirect eval call evaluates in global scope\r\n                    // eslint-disable-next-line\r\n                    eval('eval')(script);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const animationResource = this.getAnimationResource();\r\n        if (!animationResource) {\r\n            return (<Card>Animation not found.</Card>);\r\n        }\r\n\r\n        const animationViewData = this.props.view.data;\r\n        let innerHTML = animationViewData.innerHTML;\r\n        let status = animationViewData.status;\r\n        if (innerHTML) {\r\n            //console.log(\"AnimationView: \", innerHTML);\r\n            return (\r\n                <div style={AnimationView.DIV_STYLE}\r\n                     dangerouslySetInnerHTML={{__html: innerHTML}}\r\n                     ref={this.onRef}\r\n                />\r\n            );\r\n        } else if (isNumber(status) && (status < 200 || status >= 300)) {\r\n            return (<Card>`Error loading animation (status ${animationViewData.status}`)</Card>);\r\n        } else if (this.state.loading) {\r\n            return (<Card>Loading animation...</Card>);\r\n        } else {\r\n            return (<Card>???</Card>);\r\n        }\r\n    }\r\n\r\n    getAnimationResource(): ResourceState | null {\r\n        const animationViewData = this.props.view.data;\r\n        return this.props.animationResources.find(r => r.id === animationViewData.resourceId);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AnimationView);\r\n\r\n\r\n","export const OBJECT_TYPE = 'object';\r\nexport const BOOL_TYPE = 'bool';\r\nexport const INT_TYPE = 'int';\r\nexport const FLOAT_TYPE = 'float';\r\nexport const STR_TYPE = 'str';\r\nexport const PASSWD_TYPE = 'cate.core.types.Password';\r\n\r\nexport const ND_ARRAY_TYPE = 'numpy.ndarray';\r\n\r\nexport const DATASET_TYPE = 'xarray.core.dataset.Dataset';\r\nexport const DATA_ARRAY_TYPE = 'xarray.core.dataarray.DataArray';\r\nexport const DATA_FRAME_TYPE = 'pandas.core.frame.DataFrame';\r\nexport const GEO_DATA_FRAME_TYPE = 'geopandas.geodataframe.GeoDataFrame';\r\nexport const GEO_SERIES_TYPE = 'geopandas.geoseries.GeoSeries';\r\nexport const SERIES_TYPE = 'pandas.core.series.Series';\r\n\r\nexport const DATASET_LIKE_TYPE = 'cate.core.types.DatasetLike';\r\nexport const DATA_FRAME_LIKE_TYPE = 'cate.core.types.DataFrameLike';\r\nexport const POINT_LIKE_TYPE = 'cate.core.types.PointLike';\r\nexport const POLYGON_LIKE_TYPE = 'cate.core.types.PolygonLike';\r\nexport const GEOMETRY_LIKE_TYPE = 'cate.core.types.GeometryLike';\r\nexport const GEO_DATA_FRAME_PROXY_TYPE = 'cate.core.types.GeoDataFrame';\r\nexport const TIME_LIKE_TYPE = 'cate.core.types.TimeLike';\r\nexport const TIME_RANGE_LIKE_TYPE = 'cate.core.types.TimeRangeLike';\r\nexport const VAR_NAME_LIKE_TYPE = 'cate.core.types.VarName';\r\nexport const VAR_NAMES_LIKE_TYPE = 'cate.core.types.VarNamesLike';\r\nexport const DIM_NAME_LIKE_TYPE = 'cate.core.types.DimName';\r\nexport const DIM_NAMES_LIKE_TYPE = 'cate.core.types.DimNamesLike';\r\nexport const DICT_LIKE_TYPE = 'cate.core.types.DictLike';\r\nexport const FILE_LIKE_TYPE = 'cate.core.types.FileLike';\r\nexport const ARBITRARY_TYPE = 'cate.core.types.Arbitrary';\r\nexport const LITERAL_TYPE = 'cate.core.types.Literal';\r\n\r\nexport const GEOMETRY_TYPE = 'shapely.geometry.base.BaseGeometry';\r\nexport const POINT_TYPE = 'shapely.geometry.point.Point';\r\nexport const MULTI_POINT_TYPE = 'shapely.geometry.multipoint.MultiPoint';\r\nexport const LINE_STRING_TYPE = 'shapely.geometry.linestring.LineString';\r\nexport const MULTI_LINE_STRING_TYPE = 'shapely.geometry.multilinestring.MultiLineString';\r\nexport const POLYGON_TYPE = 'shapely.geometry.polygon.Polygon';\r\nexport const MULTI_POLYGON_TYPE = 'shapely.geometry.multipolygon.multiPolygon';\r\nexport const GEOMETRY_COLLECTION_TYPE = 'shapely.geometry.collection.GeometryCollection';\r\n\r\n\r\n/**\r\n * Naive test if a targetDataType is assignable from a given sourceDataType.\r\n *\r\n * @param targetDataType The name of the target data type used in Cate's Python API\r\n * @param sourceDataType The name of the source data type used in Cate's Python API\r\n * @returns {boolean} true, if so.\r\n */\r\nexport function isAssignableFrom(targetDataType: string, sourceDataType: string) {\r\n    if (!targetDataType || !sourceDataType) {\r\n        return false;\r\n    }\r\n    if (targetDataType === sourceDataType) {\r\n        return true;\r\n    }\r\n    switch (targetDataType) {\r\n        case OBJECT_TYPE:\r\n        case ARBITRARY_TYPE:\r\n            return true;\r\n        case LITERAL_TYPE:\r\n            return sourceDataType === STR_TYPE;\r\n        case BOOL_TYPE:\r\n            return sourceDataType === INT_TYPE || sourceDataType === FLOAT_TYPE;\r\n        case INT_TYPE:\r\n            return sourceDataType === BOOL_TYPE;\r\n        case FLOAT_TYPE:\r\n            return sourceDataType === BOOL_TYPE || sourceDataType === INT_TYPE;\r\n        case ND_ARRAY_TYPE:\r\n            return sourceDataType === DATA_ARRAY_TYPE;\r\n        case DATA_FRAME_TYPE:\r\n            return sourceDataType === DATA_FRAME_LIKE_TYPE || sourceDataType === GEO_DATA_FRAME_TYPE\r\n                   || sourceDataType === GEO_DATA_FRAME_PROXY_TYPE;\r\n        case DATA_FRAME_LIKE_TYPE:\r\n            return sourceDataType === DATA_FRAME_TYPE\r\n                   || sourceDataType === GEO_DATA_FRAME_TYPE || sourceDataType === GEO_DATA_FRAME_PROXY_TYPE\r\n                   || sourceDataType === DATASET_TYPE || sourceDataType === DATASET_LIKE_TYPE;\r\n        case GEO_DATA_FRAME_TYPE:\r\n            return sourceDataType === GEO_DATA_FRAME_PROXY_TYPE;\r\n        case DATASET_TYPE:\r\n            return sourceDataType === DATASET_LIKE_TYPE;\r\n        case DATASET_LIKE_TYPE:\r\n            return sourceDataType === DATASET_TYPE || sourceDataType === DATA_FRAME_TYPE;\r\n        case SERIES_TYPE:\r\n            return sourceDataType === GEO_SERIES_TYPE;\r\n        case VAR_NAME_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE;\r\n        case VAR_NAMES_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE;\r\n        case DIM_NAME_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE;\r\n        case DIM_NAMES_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE;\r\n        case DICT_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE;\r\n        case FILE_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE;\r\n        case TIME_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE;\r\n        case TIME_RANGE_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE;\r\n        case POINT_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE || sourceDataType === POINT_TYPE;\r\n        case POLYGON_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE || sourceDataType === POLYGON_TYPE;\r\n        case GEOMETRY_LIKE_TYPE:\r\n            return sourceDataType === STR_TYPE\r\n                   || sourceDataType === POINT_LIKE_TYPE\r\n                   || sourceDataType === POLYGON_LIKE_TYPE\r\n                   || sourceDataType === GEOMETRY_TYPE\r\n                   || sourceDataType === POINT_TYPE\r\n                   || sourceDataType === MULTI_POINT_TYPE\r\n                   || sourceDataType === LINE_STRING_TYPE\r\n                   || sourceDataType === MULTI_LINE_STRING_TYPE\r\n                   || sourceDataType === POLYGON_TYPE\r\n                   || sourceDataType === MULTI_POLYGON_TYPE\r\n                   || sourceDataType === GEOMETRY_COLLECTION_TYPE;\r\n    }\r\n    return false;\r\n}\r\n","import * as React from 'react'\r\n\r\n//import './ListBox.css'\r\n\r\nexport enum ListBoxSelectionMode {\r\n    SINGLE,\r\n    MULTIPLE\r\n}\r\n\r\n\r\nexport interface IListBoxProps {\r\n    items: any[];\r\n    renderItem: (item: any, itemIndex: number) => JSX.Element;\r\n    getItemKey?: (item: any, itemIndex: number) => React.Key;\r\n    onItemClick?: (item: any, itemIndex: number) => void;\r\n    onItemDoubleClick?: (item: any, itemIndex: number) => void;\r\n    onSelection?: (newSelection: React.Key[], oldSelection: React.Key[]) => void;\r\n    selectionMode?: ListBoxSelectionMode;\r\n    selection?: React.Key[] | React.Key | null;\r\n    style?: Object;\r\n    itemStyle?: Object;\r\n}\r\n\r\n/**\r\n * A  ListBox is used similar to Blueprint's `Table` component.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class ListBox extends React.PureComponent<IListBoxProps, any> {\r\n\r\n    handleClick(event: MouseEvent, itemIndex, key: string | number) {\r\n        // console.log('handleClick', event.button, event.buttons,event.bubbles, event.detail);\r\n        if (event.detail === 2) {\r\n            return;\r\n        }\r\n        if (this.props.onSelection) {\r\n            const oldSelection = toSelectionArray(this.props.selection);\r\n            let newSelection;\r\n            if (this.props.selection) {\r\n                const selectionMode = this.props.selectionMode || ListBoxSelectionMode.SINGLE;\r\n                const itemIndex = oldSelection.findIndex(k => k === key);\r\n                if (itemIndex >= 0) {\r\n                    newSelection = oldSelection.slice();\r\n                    newSelection.splice(itemIndex, 1);\r\n                } else {\r\n                    if (selectionMode === ListBoxSelectionMode.SINGLE) {\r\n                        newSelection = [key];\r\n                    } else if (selectionMode === ListBoxSelectionMode.MULTIPLE) {\r\n                        newSelection = oldSelection.slice();\r\n                        newSelection.push(key);\r\n                    }\r\n                }\r\n            } else {\r\n                newSelection = [key];\r\n            }\r\n            this.props.onSelection(newSelection, oldSelection);\r\n        }\r\n        if (this.props.onItemClick) {\r\n            this.props.onItemClick(this.props.items[itemIndex], itemIndex);\r\n        }\r\n    }\r\n\r\n    handleDoubleClick(event, itemIndex) {\r\n        // console.log('handleDoubleClick', event.button, event.buttons,event.bubbles, event.detail);\r\n        if (this.props.onItemDoubleClick) {\r\n            this.props.onItemDoubleClick(this.props.items[itemIndex], itemIndex);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const items = this.props.items;\r\n        if (!items) {\r\n            return null;\r\n        }\r\n\r\n        const selection = new Set<any>(toSelectionArray(this.props.selection));\r\n        const getItemKey = this.props.getItemKey || ((item: any, itemIndex: number) => itemIndex);\r\n        const renderItem = this.props.renderItem;\r\n        //noinspection JSMismatchedCollectionQueryUpdate\r\n        let renderedItems: Array<JSX.Element> = [];\r\n        for (let itemIndex = 0; itemIndex < items.length; itemIndex++) {\r\n            const item = items[itemIndex];\r\n            const key = getItemKey(item, itemIndex);\r\n            const renderedItem = renderItem(item, itemIndex);\r\n            const selected = selection.has(key);\r\n            const className = selected ? 'cate-selected' : null;\r\n            renderedItems.push(\r\n                <li key={key}\r\n                    onClick={(event) => this.handleClick(event as any, itemIndex, key)}\r\n                    onDoubleClick={(event) => this.handleDoubleClick(event as any, itemIndex)}\r\n                    className={className}\r\n                    style={this.props.itemStyle}>\r\n                    {renderedItem}\r\n                </li>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <ul className=\"cate-list-box\" style={this.props.style}>\r\n                {renderedItems}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nconst EMPTY_ARRAY = [];\r\n\r\nfunction toSelectionArray(obj): any[] {\r\n    if (obj === null || typeof obj === 'undefined') {\r\n        return EMPTY_ARRAY;\r\n    }\r\n    if (obj.constructor === Array) {\r\n        return obj;\r\n    }\r\n    return [obj];\r\n}\r\n","import { IconName } from '@blueprintjs/core';\r\n\r\nimport {\r\n    getBasename,\r\n    getBasenameExtension,\r\n    getParentPath,\r\n    HostOS,\r\n    isAbsolutePath,\r\n    isWindowsRootPath\r\n} from '../../../../common/paths';\r\nimport { isNumber, isString } from '../../../../common/types';\r\nimport { FileFilter } from '../types';\r\n\r\n\r\n/**\r\n * Represents the current update status of a file node.\r\n */\r\nexport type FileNodeStatus = 'updating' | 'ready' | 'error';\r\n\r\n/**\r\n * A file node represent a file or directory in a file system.\r\n * When we create path strings from file node paths (hence FileNode[]),\r\n * we concatenate always by forward slashes (\"/\"), even if the server file system\r\n * is Windows OS. Therefore path strings ever start with a \"/\", even absolute paths.\r\n */\r\nexport interface FileNode {\r\n    /**\r\n     * Name of the file or directory. The root node's name is the empty string.\r\n     */\r\n    name: string;\r\n    /**\r\n     * Date-time of last modification.\r\n     */\r\n    lastModified?: string;\r\n    /**\r\n     * Size in bytes\r\n     */\r\n    size?: number;\r\n    /**\r\n     * True, if this node represents a directory\r\n     */\r\n    isDir: boolean;\r\n    /**\r\n     * Child nodes of the directory\r\n     */\r\n    childNodes?: FileNode[];\r\n    /**\r\n     * The node's update status.\r\n     * If status === undefined means, we have not updated this node yet (i.e. children not fetched)\r\n     */\r\n    status?: FileNodeStatus;\r\n    /**\r\n     * Detail message if status === \"error\"\r\n     */\r\n    message?: string;\r\n}\r\n\r\nexport const ALL_FILES_FILTER = {name: \"All files\", extensions: [\"*\"]};\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// FileNode operations\r\n\r\n/**\r\n * Returns a new `rootNode` where `updatedFileNode` is inserted at position given by `path`.\r\n * @param rootNode the root node\r\n * @param path normalized path\r\n * @param updatedFileNode the file node update that will replace the old one\r\n */\r\nexport function updateFileNode(rootNode: FileNode, path: string, updatedFileNode: FileNode): FileNode {\r\n    if (path === '') {\r\n        return {...rootNode, ...updatedFileNode, status: 'ready'};\r\n    }\r\n    return _updateFileNode(rootNode, path.split('/'), updatedFileNode);\r\n}\r\n\r\nfunction _updateFileNode(rootNode: FileNode, path: string[], updatedFileNode: FileNode): FileNode {\r\n    if (!rootNode.childNodes) {\r\n        // can't work without child nodes\r\n        console.error('_updateFileNode: root node without child nodes');\r\n        return rootNode;\r\n    }\r\n    updatedFileNode = !updatedFileNode.status ? {...updatedFileNode, status: 'ready'} : updatedFileNode;\r\n    const newRootNode: FileNode = {...rootNode, childNodes: [...rootNode.childNodes]};\r\n    let currentNode: FileNode = newRootNode;\r\n    for (let depth = 0; depth < path.length; depth++) {\r\n        if (!currentNode.childNodes) {\r\n            console.error(`_updateFileNode: no child nodes at index ${depth} in \"${path.join('/')}\"`);\r\n            return rootNode;\r\n        }\r\n        const name = path[depth];\r\n        const childIndex = currentNode.childNodes.findIndex(n => name.localeCompare(n.name) === 0);\r\n        if (childIndex < 0) {\r\n            console.error(`_updateFileNode: invalid path component \"${name}\" at index ${depth} in \"${path.join('/')}\"`);\r\n            return rootNode;\r\n        }\r\n        if (depth === path.length - 1) {\r\n            currentNode.childNodes[childIndex] = updatedFileNode;\r\n        } else {\r\n            const childNode = currentNode.childNodes[childIndex];\r\n            let newChildNode;\r\n            if (childNode.childNodes) {\r\n                newChildNode = {...childNode, childNodes: [...childNode.childNodes]};\r\n            } else {\r\n                newChildNode = {...childNode};\r\n            }\r\n            currentNode.childNodes[childIndex] = newChildNode;\r\n            currentNode = newChildNode;\r\n        }\r\n    }\r\n    return newRootNode;\r\n}\r\n\r\n/**\r\n * Get file node path excluding the `rootNode`.\r\n * @param rootNode the root node\r\n * @param path normalized path\r\n */\r\nexport function getFileNodePath(rootNode: FileNode, path: string): FileNode[] | null {\r\n    if (path === '') {\r\n        return [];\r\n    }\r\n    const pathNames = path.split('/');\r\n    const fileNodePath = _getValidSubFileNodePath(rootNode.childNodes, pathNames);\r\n    return pathNames.length === fileNodePath.length ? fileNodePath : null;\r\n}\r\n\r\n/**\r\n * Get valid sub file node path excluding the `rootNode`.\r\n * @param rootNode the root node\r\n * @param path normalized path\r\n */\r\nexport function getValidSubFileNodePath(rootNode: FileNode, path: string): FileNode[] {\r\n    return _getValidSubFileNodePath(rootNode.childNodes, path.split('/'));\r\n}\r\n\r\nfunction _getValidSubFileNodePath(rootNodes: FileNode[] | undefined, pathNames: string[]): FileNode[] {\r\n    let childNodes = rootNodes;\r\n    let fileNodePath: FileNode[] = [];\r\n    for (let depth = 0; depth < pathNames.length; depth++) {\r\n        if (!childNodes) {\r\n            return fileNodePath;\r\n        }\r\n        const name = pathNames[depth];\r\n        const node = childNodes.find(n => n.name.localeCompare(name) === 0);\r\n        if (!node) {\r\n            return fileNodePath;\r\n        }\r\n        fileNodePath.push(node);\r\n        childNodes = node.childNodes;\r\n    }\r\n    return fileNodePath;\r\n}\r\n\r\n/**\r\n * Get the file node in `rootNode` for given `path`.\r\n * @param rootNode the root node\r\n * @param path normalized path\r\n */\r\nexport function getFileNode(rootNode: FileNode, path: string): FileNode | null {\r\n    if (path === \"\") {\r\n        return rootNode;\r\n    }\r\n    const fileNodePath = getFileNodePath(rootNode, path);\r\n    if (fileNodePath) {\r\n        if (fileNodePath.length === 0) {\r\n            return rootNode;\r\n        } else {\r\n            return fileNodePath[fileNodePath.length - 1];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Get an icon name for given file node.\r\n * @param node the file node\r\n */\r\nexport function getFileNodeIcon(node: FileNode): IconName {\r\n    return node.isDir ? \"folder-close\" : \"document\";\r\n}\r\n\r\nexport function compareFileNames(a: FileNode, b: FileNode) {\r\n    if (a.isDir) {\r\n        if (!b.isDir) {\r\n            return -1;\r\n        }\r\n    } else if (b.isDir) {\r\n        return 1;\r\n    }\r\n    return a.name.localeCompare(b.name);\r\n}\r\n\r\nexport function compareFileLastModified(a: FileNode, b: FileNode) {\r\n    if (a.isDir) {\r\n        if (!b.isDir) {\r\n            return -1;\r\n        }\r\n    } else if (b.isDir) {\r\n        return 1;\r\n    }\r\n    if (isString(a.lastModified)) {\r\n        if (isString(b.lastModified)) {\r\n            const compValue = a.lastModified.localeCompare(b.lastModified);\r\n            if (compValue !== 0) {\r\n                return compValue;\r\n            }\r\n        }\r\n    } else if (isString(b.lastModified)) {\r\n        return -1;\r\n    }\r\n    return a.name.localeCompare(b.name);\r\n}\r\n\r\nexport function compareFileSize(a: FileNode, b: FileNode) {\r\n    if (a.isDir) {\r\n        if (!b.isDir) {\r\n            return -1;\r\n        }\r\n    } else if (b.isDir) {\r\n        return 1;\r\n    }\r\n    if (isNumber(a.size)) {\r\n        if (isNumber(b.size)) {\r\n            const compValue = a.size - b.size;\r\n            if (compValue !== 0) {\r\n                return compValue;\r\n            }\r\n        }\r\n    } else if (isNumber(b.size)) {\r\n        return -1;\r\n    }\r\n    return a.name.localeCompare(b.name);\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// FileDialog-internal path operations\r\n\r\n/**\r\n * Add `path` to the expanded paths `expandedPaths`. Return a new, updated array of expanded paths.\r\n * @param expandedPaths array of expanded paths\r\n * @param path normalized path\r\n * @returns a new array of expanded paths\r\n */\r\nexport function addExpandedDirPath(expandedPaths: string[], path: string): string[] {\r\n    const parentDir = getParentPath(path);\r\n    const cleanedPaths = expandedPaths.filter(p => !(p === path || p === parentDir || path.startsWith(p + '/')));\r\n    return [...cleanedPaths, path];\r\n}\r\n\r\n/**\r\n * Remove `path` from the expanded paths `expandedPaths`. Return new, updated array of expanded paths.\r\n * @param expandedPaths array of expanded paths\r\n * @param path normalized path\r\n * @returns a new array of expanded paths\r\n */\r\nexport function removeExpandedDirPath(expandedPaths: string[], path: string): string[] {\r\n    const parentDir = getParentPath(path);\r\n    const cleanedPaths = expandedPaths.filter(p => !(p === path || p === parentDir || p.startsWith(path + '/')));\r\n    return parentDir !== '' ? [...cleanedPaths, parentDir] : cleanedPaths;\r\n}\r\n\r\nexport function isPathValidAtIndex(path: string[], index: number, name: string): boolean {\r\n    return index < path.length && path[index] === name;\r\n}\r\n\r\nexport function applyFileFilter(nodes: FileNode[], fileFilter: FileFilter): FileNode[] {\r\n    const extSet = new Set<string>(fileFilter.extensions);\r\n    if (extSet.has('*')) {\r\n        return nodes;\r\n    }\r\n    return nodes.filter(node => {\r\n        if (node.isDir) {\r\n            return true;\r\n        }\r\n        const ext = getBasenameExtension(node.name);\r\n        return extSet.has(ext);\r\n    });\r\n}\r\n\r\n/**\r\n * Parse a text value entered by the user into an array of normalized paths.\r\n * @param inputValue text value entered by the user, note this is an un-normalized path\r\n * @param currentDirPath the current, normalized directory\r\n * @param multiSelection if multiple selections are allowed\r\n * @param hostOS host OS name\r\n * @returns an array of normalized paths\r\n */\r\nexport function fromPathInputValue(inputValue: string,\r\n                                   currentDirPath: string,\r\n                                   multiSelection: boolean,\r\n                                   hostOS?: HostOS): string[] {\r\n    inputValue = inputValue.trim()\r\n    if (inputValue === '') {\r\n        return [];\r\n    }\r\n    let paths;\r\n    if (!multiSelection) {\r\n        paths = [inputValue];\r\n    } else {\r\n        const isWindows = hostOS === 'Windows';\r\n        paths = [];\r\n        let escChar = null;\r\n        let token = '';\r\n        for (let i = 0; i < inputValue.length; i++) {\r\n            const char = inputValue[i];\r\n            if (char === '\"' || char === \"'\") {\r\n                if (escChar === null) {\r\n                    escChar = char;\r\n                    token = '';\r\n                } else if (escChar === char) {\r\n                    escChar = null;\r\n                } else {\r\n                    token += char;\r\n                }\r\n            } else if (char === ' ') {\r\n                if (escChar === null) {\r\n                    if (token !== '') {\r\n                        paths.push(token);\r\n                        token = '';\r\n                    }\r\n                } else {\r\n                    token += char;\r\n                }\r\n            } else if (!isWindows && char === '\\\\') {\r\n                // escape char\r\n            } else {\r\n                token += char;\r\n            }\r\n        }\r\n        if (token !== '') {\r\n            paths.push(token);\r\n        }\r\n    }\r\n    return paths.map(p => toAbsolutePath(p, currentDirPath, hostOS));\r\n}\r\n\r\n/**\r\n * Convert path into internal normalized form used in the FileDialog UI.\r\n * @param path a non-normalized path, e.g. from user input\r\n * @param hostOS host OS name\r\n */\r\nfunction normalizePath(path: string, hostOS?: HostOS): string {\r\n    let prefix;\r\n\r\n    if (hostOS === 'Windows') {\r\n        // Normalize back-slashes into forward slashes\r\n        while (path.indexOf('\\\\') >= 0) {\r\n            path = path.replace('\\\\', '/');\r\n        }\r\n        if (path.startsWith('//')) {\r\n            // Note special case on Windows, where '//' are prefixes for network devices\r\n            prefix = '//';\r\n            path = path.substring(2);\r\n        }\r\n    } else {\r\n        // Remove back-slashes, because they escape special characters on non-Windows hosts\r\n        while (path.indexOf('\\\\') >= 0) {\r\n            path = path.replace('\\\\', '');\r\n        }\r\n    }\r\n\r\n    // Normalize by trimming leading '/'\r\n    while (path.startsWith('/')) {\r\n        path = path.substring(1);\r\n    }\r\n    // Normalize by trimming trailing '/'\r\n    while (path.endsWith('/')) {\r\n        path = path.substring(0, path.length - 1);\r\n    }\r\n    // Normalize by trimming double slashes '//'\r\n    while (path.indexOf('//') > 0) {\r\n        path = path.replace('//', '/')\r\n    }\r\n\r\n    return prefix ? prefix + path : path;\r\n}\r\n\r\nexport function denormalizePath(path: string, hostOS?: HostOS) {\r\n    if (hostOS === 'Windows') {\r\n        path = path.split('/').join('\\\\');\r\n        if (!isWindowsRootPath(path)) {\r\n            return '\\\\' + path;\r\n        }\r\n        return path;\r\n    } else {\r\n        return '/' + path;\r\n    }\r\n}\r\n\r\n/**\r\n * Return an absolute path for given `path`. Note that the returned absolute path are normalized and\r\n * *never* start with a slash ('/').\r\n * @param path an absolute or relative path\r\n * @param currentDirPath current, normalized path\r\n * @param hostOS host OS name\r\n */\r\nexport function toAbsolutePath(path: string, currentDirPath: string, hostOS?: HostOS): string {\r\n    const abs = isAbsolutePath(path, hostOS);\r\n    path = normalizePath(path, hostOS);\r\n    if (abs) {\r\n        return path;\r\n    }\r\n    if (currentDirPath === '') {\r\n        return path;\r\n    }\r\n    return currentDirPath + '/' + path;\r\n}\r\n\r\n/**\r\n * Format an array of selected paths into a text value that the user can edit.\r\n * @param selectedPaths array of selected paths\r\n * @param multiSelection if multiple selections are allowed\r\n * @returns a text value that the user can edit\r\n */\r\nexport function toPathInputValue(selectedPaths: string[], multiSelection: boolean): string {\r\n    if (selectedPaths.length === 0) {\r\n        return '';\r\n    }\r\n    if (!multiSelection) {\r\n        return getBasename(selectedPaths[0]);\r\n    }\r\n    return selectedPaths.map(p => escapePath(getBasename((p)))).join(' ');\r\n}\r\n\r\nfunction escapePath(path: string): string {\r\n    if (path.indexOf(' ') >= 0) {\r\n        if (path.indexOf('\"') >= 0) {\r\n            return `'${path}'`;\r\n        } else {\r\n            return `\"${path}\"`;\r\n        }\r\n    }\r\n    return path;\r\n}\r\n","import { Classes, InputGroup } from '@blueprintjs/core';\r\nimport * as React from 'react'\r\nimport { isDefined, isDefinedAndNotNull, isString, isUndefinedOrNull } from '../../../common/types';\r\n\r\nexport type FieldType<T> = T | null;\r\n\r\nexport interface FieldValue<T> {\r\n    textValue?: string;\r\n    value?: FieldType<T>;\r\n    error?: Error | any;\r\n}\r\n\r\ntype AnyFieldType = FieldType<any>;\r\ntype AnyFieldValue = FieldValue<any>;\r\n\r\nexport type FieldValidator = (value: AnyFieldType) => any;\r\n\r\nexport interface IFieldProps {\r\n    value: AnyFieldValue | any;\r\n    onChange: (value: AnyFieldValue) => void;\r\n    validator?: FieldValidator;\r\n    placeholder?: string;\r\n    size?: number;\r\n    className?: string;\r\n    style?: { [key: string]: any };\r\n    disabled?: boolean;\r\n    uncontrolled?: boolean;\r\n    type?: string;\r\n}\r\n\r\ntype IFieldState = AnyFieldValue | null;\r\n\r\n\r\nexport function toTextValue(value: AnyFieldValue | any, defaultValue: any = '') {\r\n    if (isFieldValue(value)) {\r\n        return isDefinedAndNotNull(value.textValue) ? value.textValue : `${value.value}`;\r\n    } else if (isString(value)) {\r\n        return value;\r\n    }\r\n    return isDefinedAndNotNull(value) ? `${value}` : defaultValue;\r\n}\r\n\r\nexport function toValue(value: any) {\r\n    if (isFieldValue(value)) {\r\n        return value.value;\r\n    }\r\n    return value;\r\n}\r\n\r\n\r\n/**\r\n * A Field represents a text input field that provides a value of some type\r\n * characterised by the \"valueHandler\" property.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class Field<P extends IFieldProps> extends React.PureComponent<P, IFieldState> {\r\n\r\n    static readonly NOMINAL_CLASS = '';\r\n    static readonly ERROR_CLASS = Classes.INTENT_DANGER;\r\n\r\n    protected _fieldValue: AnyFieldValue;\r\n\r\n    constructor(props: Readonly<P>) {\r\n        super(props);\r\n        this._fieldValue = this.toFieldValue(props.value);\r\n        if (this.props.uncontrolled) {\r\n            this.state = this._fieldValue;\r\n        }\r\n\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    getValue(): AnyFieldType {\r\n        return this._fieldValue.value;\r\n    }\r\n\r\n    setValue(value: AnyFieldValue | any | null) {\r\n        this.setFieldValue(this.newFieldValueFromValue(value));\r\n    }\r\n\r\n    setValueAndTextValue(value: any | null, textValue: string) {\r\n        this.setFieldValue(this.newFieldValueFromValueAndTextValue(value, textValue));\r\n    }\r\n\r\n    getTextValue(): string {\r\n        return this._fieldValue.textValue || '';\r\n    }\r\n\r\n    setTextValue(textValue: string) {\r\n        this.setFieldValue(this.newFieldValueFromTextValue(textValue));\r\n    }\r\n\r\n    getError(): Error | any {\r\n        return this._fieldValue.error;\r\n    }\r\n\r\n    setError(error: Error | null) {\r\n        this.setFieldValue({...this._fieldValue, error});\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<P>): void {\r\n        this._fieldValue = this.toFieldValue(nextProps.value);\r\n        if (this.props.uncontrolled) {\r\n            this.setState(this._fieldValue);\r\n        }\r\n    }\r\n\r\n    parseValue(textValue: string): AnyFieldType {\r\n        if (!textValue || textValue === '') {\r\n            return null;\r\n        }\r\n        return textValue;\r\n    }\r\n\r\n    formatValue(value: AnyFieldType): string {\r\n        if (isUndefinedOrNull(value)) {\r\n            return '';\r\n        } else if (isString(value)) {\r\n            return value;\r\n        }\r\n        return `${value}`;\r\n    }\r\n\r\n    validateValue(value: AnyFieldType): void {\r\n        if (this.props.validator) {\r\n            this.props.validator(value);\r\n        }\r\n    }\r\n\r\n    protected handleKeyPress(event: any) {\r\n        if (this.props.uncontrolled && event.charCode === 13) {\r\n            this.props.onChange(this.state);\r\n        }\r\n    }\r\n\r\n    protected handleBlur() {\r\n        if (this.props.uncontrolled) {\r\n            this.props.onChange(this.state);\r\n        }\r\n    }\r\n\r\n    protected handleInputChange(event: any) {\r\n        const textValue = event.target.value;\r\n        this.setTextValue(textValue || '');\r\n    }\r\n\r\n    private newFieldValueFromTextValue(textValue: string): AnyFieldValue {\r\n        let value = null;\r\n        let error;\r\n        try {\r\n            value = this.parseValue(textValue);\r\n            this.validateValue(value);\r\n        } catch (e) {\r\n            value = this._fieldValue ? this._fieldValue.value : value;\r\n            error = e;\r\n        }\r\n        return {textValue, value, error};\r\n    }\r\n\r\n    private newFieldValueFromValue(value: AnyFieldValue | any | null): AnyFieldValue {\r\n        if (isFieldValue(value)) {\r\n            return {...value as AnyFieldValue};\r\n        }\r\n        let textValue;\r\n        let error;\r\n        try {\r\n            textValue = this.formatValue(value);\r\n        } catch (e) {\r\n            textValue = '';\r\n            error = e;\r\n        }\r\n        try {\r\n            this.validateValue(value);\r\n        } catch (e) {\r\n            error = e;\r\n        }\r\n        return {textValue, value, error};\r\n    }\r\n\r\n    private newFieldValueFromValueAndTextValue(value: any, textValue: string): AnyFieldValue {\r\n        let error;\r\n        try {\r\n            this.validateValue(value);\r\n        } catch (e) {\r\n            error = e;\r\n        }\r\n        return {textValue, value, error};\r\n    }\r\n\r\n    private toFieldValue(value: any): AnyFieldValue {\r\n        if (isFieldValue(value)) {\r\n            return value;\r\n        } else if (isString(value)) {\r\n            return this.newFieldValueFromTextValue(value as string);\r\n        } else {\r\n            return this.newFieldValueFromValue(value);\r\n        }\r\n    }\r\n\r\n    private setFieldValue(fieldValue: AnyFieldValue) {\r\n        this._fieldValue = fieldValue;\r\n        if (this.props.uncontrolled) {\r\n            this.setState(fieldValue);\r\n        } else {\r\n            this.props.onChange(fieldValue);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const error = this.getError();\r\n        // console.log(\"Field.render: fieldValue = \", this._fieldValue);\r\n        const errorClassName = Field.ERROR_CLASS + ' ' + this.props.className;\r\n        const nominalClassName = Field.NOMINAL_CLASS + ' ' + this.props.className;\r\n\r\n        return (\r\n            <InputGroup\r\n                value={this.getTextValue()}\r\n                onChange={this.handleInputChange}\r\n                onBlur={this.handleBlur}\r\n                onKeyPress={this.handleKeyPress}\r\n                type={this.props.type || \"text\"}\r\n                className={error ? errorClassName : nominalClassName}\r\n                style={this.props.style}\r\n                size={this.props.size}\r\n                placeholder={this.props.placeholder}\r\n                disabled={this.props.disabled}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport function isFieldValue(value: any): boolean {\r\n    return isDefinedAndNotNull(value) && (isDefined(value.textValue) || isDefined(value.value));\r\n}\r\n\r\n","import { Field, FieldType, FieldValue, IFieldProps } from './Field';\r\n\r\nexport type TextFieldType = FieldType<string>;\r\nexport type TextFieldValue = FieldValue<string>;\r\n\r\nexport interface ITextFieldProps extends IFieldProps {\r\n    nullable?: boolean;\r\n}\r\n\r\n/**\r\n * A TextField represents a text input field providing values of type string.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class TextField extends Field<ITextFieldProps> {\r\n\r\n    validateValue(value: TextFieldType): void {\r\n        super.validateValue(value);\r\n        if (!value && !this.props.nullable) {\r\n            throw new Error('Text value expected.');\r\n        }\r\n    }\r\n}\r\n\r\n","import * as Cesium from 'cesium';\r\nimport { DirectGeometryObject, Feature } from 'geojson';\r\n\r\nimport { isBoolean, isDefined, isNumber, isString } from '../../../common/types';\r\nimport { SIMPLE_STYLE_DEFAULTS, SimpleStyle } from '../../../common/geojson-simple-style';\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// SimpleStyle\r\n\r\nexport interface CesiumSimpleStyle {\r\n    markerSymbol?: string;\r\n    markerColor?: Cesium.Color;\r\n    markerSize?: number;\r\n    markerCanvas?: HTMLCanvasElement;\r\n    stroke?: Cesium.Color;\r\n    strokeWidth?: number;\r\n    fill?: Cesium.Color;\r\n    title?: string;\r\n    description?: string;\r\n}\r\n\r\nconst MARKER_SIZE_SMALL = 24;\r\nconst MARKER_SIZE_MEDIUM = 48;\r\nconst MARKER_SIZE_LARGE = 64;\r\n\r\nconst MARKER_SIZES = {\r\n    small: MARKER_SIZE_SMALL,\r\n    medium: MARKER_SIZE_MEDIUM,\r\n    large: MARKER_SIZE_LARGE,\r\n};\r\n\r\nexport function simpleStyleToCesium(style: SimpleStyle, defaults?: SimpleStyle): CesiumSimpleStyle {\r\n    const cStyle: CesiumSimpleStyle = {};\r\n\r\n    if (isString(style.stroke) || isNumber(style.strokeOpacity) || isNumber(style.strokeWidth)) {\r\n        const stroke = getString('stroke', style, defaults, SIMPLE_STYLE_DEFAULTS);\r\n        let color = Cesium.Color.fromCssColorString(stroke);\r\n        const strokeWidth = getNumber('strokeWidth', style, defaults, SIMPLE_STYLE_DEFAULTS);\r\n        const strokeOpacity = getNumber('strokeOpacity', style, defaults, SIMPLE_STYLE_DEFAULTS);\r\n        if (strokeOpacity >= 0.0 && strokeOpacity < 1.0) {\r\n            color = Cesium.Color.fromAlpha(color, strokeOpacity);\r\n        }\r\n        cStyle.stroke = color;\r\n        cStyle.strokeWidth = strokeWidth;\r\n    }\r\n\r\n    if (isString(style.fill) || isNumber(style.fillOpacity)) {\r\n        const fill = getString('fill', style, defaults, SIMPLE_STYLE_DEFAULTS);\r\n        let color = Cesium.Color.fromCssColorString(fill);\r\n        const fillOpacity = getNumber('fillOpacity', style, defaults, SIMPLE_STYLE_DEFAULTS);\r\n        if (fillOpacity >= 0.0 && fillOpacity < 1.0) {\r\n            color = Cesium.Color.fromAlpha(color, fillOpacity);\r\n        }\r\n        cStyle.fill = color;\r\n    }\r\n\r\n    if (isString(style.markerSymbol) || isString(style.markerColor) || isString(style.markerSize)) {\r\n        const markerSymbol = getString('markerSymbol', style, defaults, SIMPLE_STYLE_DEFAULTS);\r\n        const markerColor = getString('markerColor', style, defaults, SIMPLE_STYLE_DEFAULTS);\r\n        const markerSize = getString('markerSize', style, defaults, SIMPLE_STYLE_DEFAULTS);\r\n        const color = Cesium.Color.fromCssColorString(markerColor);\r\n        const size = MARKER_SIZES[markerSize] || MARKER_SIZE_MEDIUM;\r\n        const pinBuilder = new Cesium.PinBuilder();\r\n        if (markerSymbol === '') {\r\n            cStyle.markerCanvas = pinBuilder.fromColor(color, size);\r\n        } else if (markerSymbol.length === 1) {\r\n            cStyle.markerSymbol = markerSymbol;\r\n            cStyle.markerCanvas = pinBuilder.fromText(markerSymbol, color, size);\r\n        } else {\r\n            cStyle.markerSymbol = markerSymbol;\r\n            Promise.resolve(pinBuilder.fromMakiIconId(markerSymbol, color, size)).then((markerCanvas) => {\r\n                cStyle.markerCanvas = markerCanvas;\r\n            });\r\n        }\r\n        cStyle.markerSize = size;\r\n        cStyle.markerColor = color;\r\n    }\r\n\r\n    if (isString(style.title)) {\r\n        cStyle.title = style.title;\r\n    }\r\n\r\n    if (isString(style.description)) {\r\n        cStyle.description = style.description;\r\n    }\r\n\r\n    return cStyle;\r\n}\r\n\r\nexport function entityToSimpleStyle(entity: Cesium.Entity | null): SimpleStyle | null {\r\n    if (!entity) {\r\n        return null;\r\n    } else if (entity.point) {\r\n        return pointGraphicsToSimpleStyle(entity.point);\r\n    } else if (entity.billboard) {\r\n        return billboardGraphicsToSimpleStyle(entity.billboard);\r\n    } else if (entity.label) {\r\n        return labelGraphicsToSimpleStyle(entity.label);\r\n    } else if (entity.polyline) {\r\n        return polylineGraphicsToSimpleStyle(entity.polyline);\r\n    } else if (entity.polygon) {\r\n        return polygonGraphicsToSimpleStyle(entity.polygon);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function applyStyleToEntityCollection(style: CesiumSimpleStyle, entities: Cesium.Entity[]): void {\r\n    for (let entity of entities) {\r\n        applyStyleToEntity(style, entity);\r\n    }\r\n}\r\n\r\nexport function applyStyleToEntity(style: CesiumSimpleStyle, entity: Cesium.Entity): void {\r\n    if (entity.point) {\r\n        const point = entity.point;\r\n        if (isDefined(style.markerColor)) {\r\n            point.color = new Cesium.ConstantProperty(style.markerColor);\r\n        }\r\n        if (isNumber(style.markerSize)) {\r\n            point.pixelSize = new Cesium.ConstantProperty(16 * (style.markerSize / MARKER_SIZE_SMALL));\r\n        }\r\n    } else if (entity.billboard) {\r\n        const billboard = entity.billboard;\r\n        if (isDefined(style.markerCanvas)) {\r\n            billboard.image = new Cesium.ConstantProperty(style.markerCanvas);\r\n        } else {\r\n            if (isDefined(style.markerColor)) {\r\n                billboard.color = new Cesium.ConstantProperty(style.markerColor);\r\n            }\r\n            if (isNumber(style.markerSize)) {\r\n                billboard.scale = new Cesium.ConstantProperty(style.markerSize / MARKER_SIZE_MEDIUM);\r\n            }\r\n        }\r\n    } else if (entity.label) {\r\n        const label = entity.label;\r\n        if (isDefined(style.title)) {\r\n            label.text = new Cesium.ConstantProperty(style.title);\r\n        }\r\n        if (isDefined(style.markerColor)) {\r\n            label.fillColor = new Cesium.ConstantProperty(style.markerColor);\r\n        }\r\n        if (isNumber(style.markerSize)) {\r\n            label.scale = new Cesium.ConstantProperty(style.markerSize / MARKER_SIZE_MEDIUM);\r\n        }\r\n    } else if (entity.polyline) {\r\n        const polyline = entity.polyline;\r\n        if (isDefined(style.stroke)) {\r\n            polyline.material = new Cesium.ColorMaterialProperty(style.stroke);\r\n        }\r\n        if (isNumber(style.strokeWidth)) {\r\n            polyline.width = new Cesium.ConstantProperty(style.strokeWidth);\r\n        }\r\n    } else if (entity.polygon) {\r\n        const polygon = entity.polygon;\r\n        if (isDefined(style.fill)) {\r\n            polygon.material = new Cesium.ColorMaterialProperty(style.fill);\r\n        }\r\n        if (isDefined(style.stroke)) {\r\n            polygon.outlineColor = new Cesium.ConstantProperty(style.stroke);\r\n        }\r\n        if (isNumber(style.strokeWidth)) {\r\n            polygon.outlineWidth = new Cesium.ConstantProperty(style.strokeWidth);\r\n        }\r\n    }\r\n}\r\n\r\nfunction colorToHexString(value: number): string {\r\n    if (value <= 0) {\r\n        return '00';\r\n    } else if (value >= 1) {\r\n        return 'ff';\r\n    } else {\r\n        const v = Math.floor(255.9999 * value);\r\n        if (v <= 0) {\r\n            return '00';\r\n        } else if (v >= 255) {\r\n            return 'ff';\r\n        } else if (v < 16) {\r\n            return '0' + v.toString(16);\r\n        } else {\r\n            return v.toString(16);\r\n        }\r\n    }\r\n}\r\n\r\nfunction rgbToCssColor(r: number, g: number, b: number): string {\r\n    const rs = colorToHexString(r);\r\n    const gs = colorToHexString(g);\r\n    const bs = colorToHexString(b);\r\n    return '#' + rs + gs + bs;\r\n}\r\n\r\nfunction pointGraphicsToSimpleStyle(point: Cesium.PointGraphics): SimpleStyle {\r\n    const now = Cesium.JulianDate.now();\r\n    const outlineColor = point.outlineColor;\r\n    const outlineWidth = point.outlineWidth;\r\n    const pixelSize = point.pixelSize;\r\n    const color = point.color;\r\n    let markerSize: 'small' | 'medium' | 'large';\r\n    let markerColor: string;\r\n    let markerSymbol: string;\r\n    let stroke: string;\r\n    let strokeWidth: number;\r\n    if (isDefined(pixelSize)) {\r\n        const pixelSizeValue = pixelSize.getValue(now);\r\n        if (pixelSizeValue <= MARKER_SIZE_SMALL) {\r\n            markerSize = 'small';\r\n        } else if (pixelSizeValue <= MARKER_SIZE_MEDIUM) {\r\n            markerSize = 'medium';\r\n        } else {\r\n            markerSize = 'large';\r\n        }\r\n    }\r\n    if (isDefined(color)) {\r\n        const colorValue = color.getValue(now);\r\n        markerColor = rgbToCssColor(colorValue.red, colorValue.green, colorValue.blue);\r\n    }\r\n    if (isDefined(outlineColor)) {\r\n        const colorValue = outlineColor.getValue(now);\r\n        stroke = rgbToCssColor(colorValue.red, colorValue.green, colorValue.blue);\r\n    }\r\n    if (isDefined(outlineWidth)) {\r\n        strokeWidth = outlineWidth.getValue(now);\r\n    }\r\n    return {\r\n        markerSize,\r\n        markerColor,\r\n        markerSymbol,\r\n        stroke,\r\n        strokeWidth,\r\n    };\r\n}\r\n\r\nfunction billboardGraphicsToSimpleStyle(point: Cesium.BillboardGraphics): SimpleStyle {\r\n    const now = Cesium.JulianDate.now();\r\n    const image = point.image;\r\n    const scale = point.scale;\r\n    const color = point.color;\r\n    let markerSymbol: string;\r\n    let markerSize: 'small' | 'medium' | 'large';\r\n    let markerColor: string;\r\n    if (isDefined(image)) {\r\n        const imageValue = image.getValue(now);\r\n        if (isString(imageValue)) {\r\n            markerSymbol = imageValue;\r\n        }\r\n    }\r\n    if (isDefined(scale)) {\r\n        const scaleValue = scale.getValue(now);\r\n        if (scaleValue < 1) {\r\n            markerSize = 'small';\r\n        } else if (scaleValue < 2) {\r\n            markerSize = 'medium';\r\n        } else {\r\n            markerSize = 'large';\r\n        }\r\n    }\r\n    if (isDefined(color)) {\r\n        const colorValue = color.getValue(now);\r\n        markerColor = rgbToCssColor(colorValue.red, colorValue.green, colorValue.blue);\r\n    }\r\n    return {\r\n        markerSymbol,\r\n        markerSize,\r\n        markerColor,\r\n    };\r\n}\r\n\r\nfunction labelGraphicsToSimpleStyle(point: Cesium.LabelGraphics): SimpleStyle {\r\n    const now = Cesium.JulianDate.now();\r\n    const text = point.text && point.text.getValue(now);\r\n    const scale = point.scale && point.scale.getValue(now);\r\n    const fillColor = point.fillColor && point.fillColor.getValue(now);\r\n    let title: string;\r\n    let markerSize: 'small' | 'medium' | 'large';\r\n    let markerColor: string;\r\n    if (isString(text)) {\r\n        title = text;\r\n    }\r\n    if (isNumber(scale)) {\r\n        if (scale < 1) {\r\n            markerSize = 'small';\r\n        } else if (scale < 2) {\r\n            markerSize = 'medium';\r\n        } else {\r\n            markerSize = 'large';\r\n        }\r\n    }\r\n    if (isDefined(fillColor)) {\r\n        markerColor = rgbToCssColor(fillColor.red, fillColor.green, fillColor.blue);\r\n    }\r\n    return {\r\n        title,\r\n        markerSize,\r\n        markerColor,\r\n    };\r\n}\r\n\r\nfunction polylineGraphicsToSimpleStyle(polyline: Cesium.PolylineGraphics): SimpleStyle {\r\n    const now = Cesium.JulianDate.now();\r\n    const width = polyline.width && polyline.width.getValue(now);\r\n    const material = polyline.material && polyline.material.getValue(now);\r\n    const color = material && material.color;\r\n    let stroke: string;\r\n    let strokeOpacity: number;\r\n    let strokeWidth: number;\r\n\r\n    if (isDefined(width)) {\r\n        strokeWidth = width;\r\n    }\r\n    if (isDefined(color)) {\r\n        stroke = rgbToCssColor(color.red, color.green, color.blue);\r\n        strokeOpacity = color.alpha;\r\n    }\r\n    return {\r\n        stroke,\r\n        strokeOpacity,\r\n        strokeWidth\r\n    };\r\n}\r\n\r\nfunction polygonGraphicsToSimpleStyle(polygon: Cesium.PolygonGraphics): SimpleStyle {\r\n    const now = Cesium.JulianDate.now();\r\n    const isFilled = polygon.fill && polygon.fill.getValue(now);\r\n    const material = polygon.material && polygon.material.getValue(now);\r\n    const color = material && material.color;\r\n    const isOutlined = polygon.outline && polygon.outline.getValue(now);\r\n    const outlineColor = polygon.outlineColor && polygon.outlineColor.getValue(now);\r\n    const outlineWidth = polygon.outlineWidth && polygon.outlineWidth.getValue(now);\r\n    let stroke: string;\r\n    let strokeOpacity: number;\r\n    let strokeWidth: number;\r\n    let fill: string;\r\n    let fillOpacity: number;\r\n\r\n    if (isDefined(color)) {\r\n        fill = rgbToCssColor(color.red, color.green, color.blue);\r\n        fillOpacity = color.alpha;\r\n    } else {\r\n        fill = SIMPLE_STYLE_DEFAULTS.fill;\r\n        fillOpacity = SIMPLE_STYLE_DEFAULTS.fillOpacity;\r\n    }\r\n    if (isBoolean(isFilled) && !Boolean(isFilled)) {\r\n        fillOpacity = 0;\r\n    }\r\n\r\n    if (isDefined(outlineColor)) {\r\n        stroke = rgbToCssColor(outlineColor.red, outlineColor.green, outlineColor.blue);\r\n        strokeOpacity = outlineColor.alpha;\r\n    }\r\n    if (isDefined(isOutlined) && !outlineColor) {\r\n        strokeOpacity = 0;\r\n    }\r\n    if (isDefined(outlineWidth)) {\r\n        strokeWidth = outlineWidth;\r\n    }\r\n\r\n    return {\r\n        fill,\r\n        fillOpacity,\r\n        stroke,\r\n        strokeOpacity,\r\n        strokeWidth\r\n    };\r\n}\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Geometry WKT\r\n\r\nexport function entityToGeoJson(entity: Cesium.Entity | null, id: string, properties: any): Feature<any> | null {\r\n    if (!entity) {\r\n        return null;\r\n    }\r\n\r\n    if (entity.position) {\r\n        const p = Cesium.Cartographic.fromCartesian(entity.position.getValue(Cesium.JulianDate.now()));\r\n        const coordinates = [Cesium.Math.toDegrees(p.longitude), Cesium.Math.toDegrees(p.latitude)];\r\n        return _entityToGeoJson(entity, id, properties, {\r\n            type: 'Point',\r\n            coordinates\r\n        });\r\n    }\r\n\r\n    if (entity.polyline) {\r\n        const positions = entity.polyline.positions.getValue(Cesium.JulianDate.now());\r\n        let coordinates = [];\r\n        for (let position of positions) {\r\n            const p = Cesium.Cartographic.fromCartesian(position);\r\n            coordinates.push([Cesium.Math.toDegrees(p.longitude), Cesium.Math.toDegrees(p.latitude)]);\r\n        }\r\n        return _entityToGeoJson(entity, id, properties, {\r\n            type: 'LineString',\r\n            coordinates\r\n        });\r\n    }\r\n\r\n    if (entity.polygon) {\r\n        const hierarchy = entity.polygon.hierarchy.getValue(Cesium.JulianDate.now());\r\n        const positions = hierarchy.positions || hierarchy;\r\n        const holes = hierarchy.holes;\r\n        if (holes && holes.length) {\r\n            throw new Error('entityToGeoJson() does not yet support polygons with holes');\r\n        }\r\n        let ring = [];\r\n        for (let position of positions) {\r\n            const p = Cesium.Cartographic.fromCartesian(position);\r\n            ring.push([Cesium.Math.toDegrees(p.longitude), Cesium.Math.toDegrees(p.latitude)]);\r\n        }\r\n        ring.push([ring[0][0], ring[0][1]]);\r\n        const coordinates = [ring];\r\n        return _entityToGeoJson(entity, id, properties, {\r\n            type: 'Polygon',\r\n            coordinates\r\n        });\r\n    }\r\n\r\n    throw new Error(`entityToGeoJson() called with unsupported entity: ${entity.toString()}`);\r\n}\r\n\r\nexport function _entityToGeoJson(entity: Cesium.Entity, id: string | undefined, properties: any, geometry: DirectGeometryObject): Feature<any> | null {\r\n    id = id || entity.id.toString();\r\n    //const properties = {...featurePropertiesFromSimpleStyle(entityToSimpleStyle(entity))};\r\n    return {type: 'Feature', id, geometry, properties};\r\n}\r\n\r\n\r\nexport function entityToGeometryWkt(entity: Cesium.Entity): string {\r\n\r\n    if (entity.polyline) {\r\n        const positions = entity.polyline.positions.getValue(Cesium.JulianDate.now());\r\n        return `LINESTRING (${cartesian3ArrayToWkt(positions)})`;\r\n    }\r\n\r\n    if (entity.polygon) {\r\n        const hierarchy = entity.polygon.hierarchy.getValue(Cesium.JulianDate.now());\r\n        const positions = hierarchy.positions;\r\n        const holes = hierarchy.holes;\r\n        const exterior = cartesian3ArrayToWktArray(positions);\r\n        if (exterior.length > 2) {\r\n            exterior.push(exterior[0]);\r\n        }\r\n        const linearRings = [`(${exterior.join(', ')})`];\r\n        if (holes && holes.length) {\r\n            for (let hole of holes) {\r\n                const interior = cartesian3ArrayToWktArray(hole.positions);\r\n                if (interior.length > 2) {\r\n                    interior.push(interior[0]);\r\n                }\r\n                linearRings.push(`(${interior.join(', ')})`);\r\n            }\r\n        }\r\n        return `POLYGON (${linearRings.join(', ')})`;\r\n    }\r\n\r\n    if (entity.rectangle) {\r\n        const coordinates = entity.rectangle.coordinates.getValue(Cesium.JulianDate.now());\r\n        const x1 = toDeg(coordinates.west);\r\n        const y1 = toDeg(coordinates.south);\r\n        const x2 = toDeg(coordinates.east);\r\n        const y2 = toDeg(coordinates.north);\r\n        return `POLYGON ((${x1} ${y1}, ${x2} ${y1}, ${x2} ${y2}, ${x1} ${y2}, ${x1} ${y1}))`;\r\n    }\r\n\r\n    if (entity.position) {\r\n        const position = entity.position.getValue(Cesium.JulianDate.now());\r\n        return `POINT (${cartesian3ToWkt(position)})`\r\n    }\r\n\r\n    throw new TypeError('can\\'t understand geometry of selected entity');\r\n}\r\n\r\nexport function canvasToCartographic(viewer: Cesium.Viewer,\r\n                                     canvasPos: Cesium.Cartesian2 | undefined,\r\n                                     degrees: boolean): Cesium.Cartographic | undefined {\r\n    let cartographic;\r\n    if (canvasPos) {\r\n        const ellipsoid = viewer.scene.globe.ellipsoid;\r\n        const cartesian = viewer.camera.pickEllipsoid(canvasPos, ellipsoid);\r\n        if (cartesian) {\r\n            cartographic = ellipsoid.cartesianToCartographic(cartesian);\r\n            if (cartographic && degrees) {\r\n                const factor = 10000.;\r\n                const longitude = Math.round(factor * Cesium.Math.toDegrees(cartographic.longitude)) / factor;\r\n                const latitude = Math.round(factor * Cesium.Math.toDegrees(cartographic.latitude)) / factor;\r\n                cartographic = {longitude, latitude, height: cartographic.height};\r\n            }\r\n        }\r\n    }\r\n    return cartographic;\r\n}\r\n\r\nexport function clientToCanvas(viewer: Cesium.Viewer,\r\n                               clientPos: Cesium.Cartesian2 | undefined): Cesium.Cartesian2 | undefined {\r\n    let canvasPos;\r\n    if (clientPos) {\r\n        const rect = viewer.canvas.getBoundingClientRect();\r\n        const x = clientPos.x;\r\n        const y = clientPos.y;\r\n        if ((x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom)) {\r\n            canvasPos = new Cesium.Cartesian2(x - rect.left, y - rect.top);\r\n        }\r\n    }\r\n    return canvasPos;\r\n}\r\n\r\nexport function pickEntity(viewer: Cesium.Viewer,\r\n                           canvasPos: Cesium.Cartesian2 | undefined): Cesium.Entity | undefined {\r\n    if (canvasPos) {\r\n        const pickedObject = viewer.scene.pick(canvasPos);\r\n        return pickedObject && pickedObject.id;\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Base maps\r\n\r\n/**\r\n * BaseMapOptions consists basically of properties to create an instance of Cesium.UrlTemplateImageryProvider.\r\n * See https://cesium.com/docs/cesiumjs-ref-doc/UrlTemplateImageryProvider.html.\r\n */\r\nexport interface BaseMapOptions {\r\n    url: string;\r\n    tilingScheme?: 'Geographic' | 'WebMercator';\r\n    credit?: string;\r\n    minimumLevel?: number;\r\n    maximumLevel?: number;\r\n    ellipsoid?: { x?: number, y?: number, z?: number };\r\n}\r\n\r\nexport function setViewerBaseMap(viewer: Cesium.Viewer, baseMapOptions: BaseMapOptions | null) {\r\n    let bgMapImageryProvider;\r\n    if (baseMapOptions === null) {\r\n        bgMapImageryProvider = Cesium.createWorldImagery();\r\n    } else {\r\n        const tilingScheme = baseMapOptions.tilingScheme === 'Geographic'\r\n                             ? new Cesium.GeographicTilingScheme()\r\n                             : new Cesium.WebMercatorTilingScheme();\r\n        const ellipsoid = baseMapOptions.ellipsoid && new Cesium.Ellipsoid(baseMapOptions.ellipsoid.x,\r\n                                                                           baseMapOptions.ellipsoid.y,\r\n                                                                           baseMapOptions.ellipsoid.z);\r\n        bgMapImageryProvider = new Cesium.UrlTemplateImageryProvider(\r\n            {\r\n                url: baseMapOptions.url,\r\n                tilingScheme,\r\n                ellipsoid,\r\n                credit: baseMapOptions.credit,\r\n                minimumLevel: baseMapOptions.minimumLevel,\r\n                maximumLevel: baseMapOptions.maximumLevel,\r\n            });\r\n    }\r\n    if (viewer.imageryLayers.length > 0) {\r\n        const oldLayer = viewer.imageryLayers.get(0);\r\n        viewer.imageryLayers.remove(oldLayer);\r\n    }\r\n    viewer.imageryLayers.add(new Cesium.ImageryLayer(bgMapImageryProvider), 0);\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Helpers\r\n\r\nexport function getEntityByEntityId(viewer: Cesium.Viewer, entityId: string): Cesium.Entity | null {\r\n    for (let i = 0; i < viewer.dataSources.length; i++) {\r\n        const dataSource = viewer.dataSources.get(i);\r\n        const entity = dataSource.entities.getById(entityId);\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction cartesian3ArrayToWktArray(positions: Cesium.Cartesian3[]): string[] {\r\n    return positions.map(p => cartesian3ToWkt(p));\r\n}\r\n\r\nfunction cartesian3ArrayToWkt(positions: Cesium.Cartesian3[]): string {\r\n    return cartesian3ArrayToWktArray(positions).join(', ');\r\n}\r\n\r\nfunction cartesian3ToWkt(position: Cesium.Cartesian3): string {\r\n    const cartographic = Cesium.Cartographic.fromCartesian(position);\r\n    return `${toDeg(cartographic.longitude)} ${toDeg(cartographic.latitude)}`;\r\n}\r\n\r\nfunction toDeg(x: number): number {\r\n    return x * (180. / Math.PI);\r\n}\r\n\r\nfunction _getValue(key: string, predicate: (object: any) => boolean, objects: any[]) {\r\n    for (let o of objects) {\r\n        if (o) {\r\n            const v = o[key];\r\n            if (predicate(v)) {\r\n                return v;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getNumber(key, ...objects) {\r\n    return _getValue(key, isNumber, objects);\r\n}\r\n\r\nfunction getString(key, ...objects) {\r\n    return _getValue(key, isString, objects);\r\n}\r\n","import { isDefined } from './types';\r\n\r\n/**\r\n * GeoJSON \"standard\" for styling geospatial data that can be shared across clients.\r\n * See https://github.com/mapbox/simplestyle-spec/tree/master/1.1.0\r\n */\r\nexport interface SimpleStyle {\r\n    // OPTIONAL: default \"\"\r\n    // A title to show when this item is clicked or\r\n    // hovered over\r\n    readonly title?: string;\r\n\r\n    // OPTIONAL: default \"\"\r\n    // A description to show when this item is clicked or\r\n    // hovered over\r\n    readonly description?: string;\r\n\r\n    // OPTIONAL: default \"medium\"\r\n    // specify the size of the marker. sizes\r\n    // can be different pixel sizes in different\r\n    // implementations\r\n    // Value must be one of\r\n    // \"small\"\r\n    // \"medium\"\r\n    // \"large\"\r\n    readonly markerSize?: 'small' | 'medium' | 'large';\r\n\r\n    // OPTIONAL: default \"\"\r\n    // a symbol to position in the center of this icon\r\n    // if not provided or \"\"; no symbol is overlaid\r\n    // and only the marker is shown\r\n    // Allowed values include\r\n    // - Icon ID\r\n    // - An integer 0 through 9\r\n    // - A lowercase character \"a\" through \"z\"\r\n    readonly markerSymbol?: string;\r\n\r\n    // OPTIONAL: default \"7e7e7e\"\r\n    // the marker's color\r\n    //\r\n    // value must follow COLOR RULES\r\n    readonly markerColor?: string;\r\n\r\n    // OPTIONAL: default \"555555\"\r\n    // the color of a line as part of a polygon; polyline; or\r\n    // multigeometry\r\n    //\r\n    // value must follow COLOR RULES\r\n    readonly stroke?: string;\r\n\r\n    // OPTIONAL: default 1.0\r\n    // the opacity of the line component of a polygon; polyline; or\r\n    // multigeometry\r\n    //\r\n    // value must be a floating point number greater than or equal to\r\n    // zero and less or equal to than one\r\n    readonly strokeOpacity?: number;\r\n\r\n    // OPTIONAL: default 2\r\n    // the width of the line component of a polygon; polyline; or\r\n    // multigeometry\r\n    //\r\n    // value must be a floating point number greater than or equal to 0\r\n    readonly strokeWidth?: number;\r\n\r\n    // OPTIONAL: default \"555555\"\r\n    // the color of the interior of a polygon\r\n    //\r\n    // value must follow COLOR RULES\r\n    readonly fill?: string;\r\n\r\n    // OPTIONAL: default 0.6\r\n    // the opacity of the interior of a polygon. Implementations\r\n    // may choose to set this to 0 for line features.\r\n    //\r\n    // value must be a floating point number greater than or equal to\r\n    // zero and less or equal to than one\r\n    readonly fillOpacity?: number;\r\n}\r\n\r\n/**\r\n * GeoJSON \"standard\" for styling geospatial data that can be shared across clients.\r\n * See https://github.com/mapbox/simplestyle-spec/tree/master/1.1.0\r\n */\r\nexport const SIMPLE_STYLE_DEFAULTS: SimpleStyle = {\r\n    title: '',\r\n    description: '',\r\n    markerSize: 'medium',\r\n    markerSymbol: '',\r\n    markerColor: '#7e7e7e',\r\n    stroke: '#555555',\r\n    strokeOpacity: 1,\r\n    strokeWidth: 2,\r\n    fill: '#555555',\r\n    fillOpacity: 0.6\r\n};\r\n\r\nexport function simpleStyleFromFeatureProperties(properties: any): SimpleStyle {\r\n    const styleProperties = {\r\n        title: properties['title'],\r\n        description: properties['description'],\r\n        markerSymbol: properties['marker-symbol'],\r\n        markerSize: properties['marker-size'],\r\n        markerColor: properties['marker-color'],\r\n        stroke: properties['stroke'],\r\n        strokeOpacity: properties['stroke-opacity'],\r\n        strokeWidth: properties['stroke-width'],\r\n        fill: properties['fill'],\r\n        fillOpacity: properties['fill-opacity'],\r\n    };\r\n\r\n    const simpleStyle = {};\r\n    for (let p of Object.getOwnPropertyNames(styleProperties)) {\r\n        if (isDefined(styleProperties[p])) {\r\n            simpleStyle[p] = styleProperties[p];\r\n        }\r\n    }\r\n\r\n    return simpleStyle;\r\n}\r\n\r\nexport function featurePropertiesFromSimpleStyle(style: SimpleStyle): any {\r\n    const styleProperties = {\r\n        'title': style.title,\r\n        'description': style.description,\r\n        'marker-symbol': style.markerSymbol,\r\n        'marker-size': style.markerSize,\r\n        'marker-color': style.markerColor,\r\n        'stroke': style.stroke,\r\n        'stroke-opacity': style.strokeOpacity,\r\n        'stroke-width': style.strokeWidth,\r\n        'fill': style.fill,\r\n        'fill-opacity': style.fillOpacity,\r\n    };\r\n\r\n    const properties = {};\r\n    for (let p of Object.getOwnPropertyNames(styleProperties)) {\r\n        if (isDefined(styleProperties[p])) {\r\n            properties[p] = styleProperties[p];\r\n        }\r\n    }\r\n\r\n    return properties;\r\n}\r\n","/**\r\n * Used to parse users' text inputs into normalized paths and to format normalized paths into user text outputs.\r\n * Values are according to output of Python's platform.system() call.\r\n */\r\nexport type HostOS = 'Windows' | 'Linux' | 'Java';\r\n\r\n\r\nexport function isAbsolutePath(path: string, hostOS?: HostOS) {\r\n    if (hostOS === 'Windows') {\r\n        return isWindowsRootPath(path) || isLinuxRootPath(path);\r\n    } else {\r\n        return isLinuxRootPath(path);\r\n    }\r\n}\r\n\r\nexport function isLinuxRootPath(path: string): boolean {\r\n    return path.startsWith('/');\r\n}\r\n\r\nexport function isWindowsRootPath(path: string): boolean {\r\n    return isWindowsNetworkDevicePath(path) || isWindowsDrivePath(path);\r\n}\r\n\r\nexport function isWindowsNetworkDevicePath(path: string): boolean {\r\n    return path.startsWith('//') || path.startsWith('\\\\\\\\');\r\n}\r\n\r\nexport function isWindowsDrivePath(path: string): boolean {\r\n    return path.length >= 2\r\n           && /^[a-z]+$/i.test(path[0])\r\n           && path[1] === ':'\r\n           && (path.length === 2 || path[2] === '/' || path[2] === '\\\\');\r\n}\r\n\r\n/**\r\n * Make `path2` absolute with respect to absolute (directory) path `path1`.\r\n * `path1` must be absolute and `path2` must be relative, otherwise the\r\n * result is not defined.\r\n *\r\n * @param path1 first absolute path\r\n * @param path2 second relative path\r\n * @param hostOS host OS identifier\r\n * @returns `path1` relative to `path2`.\r\n */\r\nexport function makeAbsolutePath(path1: string, path2: string, hostOS?: HostOS): string {\r\n    let comps1 = splitPath(path1, hostOS);\r\n    let comps2 = splitPath(path2, hostOS);\r\n    if (comps1.length > 0 && comps1[comps1.length - 1] === '') {\r\n        comps1 = comps1.slice(0, comps1.length - 1);\r\n    }\r\n    if (comps2.length > 0 && comps2[0] === '') {\r\n        comps2 = comps2.slice(1);\r\n    }\r\n    return joinPathComponents(normPathComponents(comps1.concat(comps2)), hostOS);\r\n}\r\n\r\n/**\r\n * Make `path1` relative to another (directory) path `path2`.\r\n * Both paths must be either relative or absolute, otherwise the\r\n * result is not defined.\r\n *\r\n * @param path1 first path\r\n * @param path2 second path\r\n * @param hostOS host OS identifier\r\n * @returns `path1` relative to `path2`.\r\n */\r\nexport function makeRelativePath(path1: string, path2: string, hostOS?: HostOS): string {\r\n    if (path1 === '' || path1 === path2) {\r\n        return \"\";\r\n    }\r\n    const comps1 = splitPath(path1, hostOS);\r\n    const comps2 = splitPath(path2, hostOS);\r\n    let n1 = comps1.length;\r\n    let n2 = comps2.length;\r\n    let n = Math.max(n1, n2);\r\n    let iFirstDiff = Math.min(n1, n2);\r\n    for (let i = 0; i < n; i++) {\r\n        if (i < n1 && i < n2) {\r\n            let comp1 = comps1[i];\r\n            let comp2 = comps2[i];\r\n            if (comp1 !== comp2) {\r\n                iFirstDiff = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (iFirstDiff === n) {\r\n        return '';\r\n    }\r\n    let relPathComps: string[];\r\n    if (n2 > iFirstDiff) {\r\n        relPathComps = new Array<string>(n2 - iFirstDiff).fill('..');\r\n    } else {\r\n        relPathComps = [];\r\n    }\r\n    if (n1 > iFirstDiff) {\r\n        relPathComps = relPathComps.concat(comps1.slice(iFirstDiff));\r\n    }\r\n    return relPathComps.join('/');\r\n}\r\n\r\n/**\r\n * Normalizes `path`. Removes '.', '..', end trailing file separators.\r\n * @param path the path\r\n * @param hostOS host OS identifier\r\n * @returns a normalized path\r\n */\r\nexport function normPath(path: string, hostOS?: HostOS): string {\r\n    return joinPathComponents(normPathComponents(splitPath(path, hostOS), hostOS));\r\n}\r\n\r\n// noinspection JSUnusedLocalSymbols\r\n/**\r\n * Normalizes path `components`. Removes '.', '..', end trailing empty strings.\r\n * @param components the path components\r\n * @param hostOS host OS identifier\r\n * @returns a normalized path components\r\n */\r\nexport function normPathComponents(components: string[], hostOS?: HostOS): string[] {\r\n    const newComponents = Array<string>(components.length);\r\n    let insPos = 0;\r\n    for (let i = 0; i < components.length; i++) {\r\n        const component = components[i];\r\n        if (component === '.') {\r\n            // No-op\r\n        } else if (component === '..') {\r\n            insPos--;\r\n        } else {\r\n            if (insPos < 0) {\r\n                // Cannot normalize\r\n                return components;\r\n            }\r\n            newComponents[insPos] = component;\r\n            insPos++;\r\n        }\r\n    }\r\n    if (insPos < 0) {\r\n        // Cannot normalize\r\n        return components;\r\n    }\r\n    return newComponents.slice(0, insPos);\r\n}\r\n\r\n/**\r\n * Join path components.\r\n * @param components the path components\r\n * @param hostOS host OS identifier\r\n * @returns a path\r\n */\r\nexport function joinPathComponents(components: string[], hostOS?: HostOS): string {\r\n    return components.join(hostOS === 'Windows' ? '\\\\' : '/');\r\n}\r\n\r\n/**\r\n * Split path into path components.\r\n * @param path a path\r\n * @param hostOS host OS identifier\r\n * @returns the path's components\r\n */\r\nexport function splitPath(path: string, hostOS?: HostOS): string[] {\r\n    if (hostOS === 'Windows') {\r\n        if (isWindowsNetworkDevicePath(path) || isWindowsDrivePath(path)) {\r\n            const components = splitPath(path.substring(2));\r\n            if (components.length === 0) {\r\n                return components;\r\n            }\r\n            return [path.substr(0, 2) + components[0]].concat(components.slice(1));\r\n        }\r\n        return path.split(/[/\\\\]/);\r\n    }\r\n    return path.split('/');\r\n}\r\n\r\n/**\r\n * Get the parent dir of path `path`.\r\n * @param path a path\r\n * @param hostOS host OS identifier\r\n * @returns the path's parent path\r\n */\r\nexport function getParentPath(path: string, hostOS?: HostOS): string {\r\n    const components = splitPath(path, hostOS);\r\n    return components.length > 0\r\n           ? joinPathComponents(components.slice(0, components.length - 1), hostOS)\r\n           : '';\r\n}\r\n\r\n/**\r\n * Get the basename of `path`.\r\n * @param path a path\r\n * @param hostOS host OS identifier\r\n * @returns the path's basename\r\n */\r\nexport function getBasename(path: string, hostOS?: HostOS): string {\r\n    const components = splitPath(path, hostOS);\r\n    return components.length > 0\r\n           ? components[components.length - 1]\r\n           : path;\r\n}\r\n\r\n/**\r\n * Get filename extension\r\n * @param basename the filename (a name, not a path!)\r\n */\r\nexport function getBasenameExtension(basename: string): string {\r\n    const index = basename.lastIndexOf('.');\r\n    if (index > 0) {\r\n        return basename.substring(index + 1);\r\n    }\r\n    return '';\r\n}","import { IconName } from '@blueprintjs/core';\nimport { Feature, FeatureCollection, GeoJsonObject, Point } from 'geojson';\nimport { JSONSchema7 } from 'json-schema';\n\nimport { SimpleStyle } from '../common/geojson-simple-style';\nimport { HostOS } from '../common/paths';\nimport { BaseMapOptions } from './components/cesium/cesium-util';\nimport { GeometryToolType } from './components/cesium/geometry-tool';\nimport { FileNode } from './components/desktop/fs/FileNode';\nimport {\n    FileFilter,\n    MessageBoxOptions,\n    MessageBoxResult, OpenDialogOptions, OpenDialogProperty,\n    OpenDialogResult,\n    SaveDialogOptions, SaveDialogProperty,\n    SaveDialogResult\n} from './components/desktop/types';\nimport { PanelContainerLayout } from './components/PanelContainer';\nimport { ViewLayoutState, ViewState } from './components/ViewState';\nimport { JobFailure, JobProgress, JobStatus, WebAPIClient } from './webapi';\n\n\n/**\n * Interface describing Cate's application state structure.\n * Cate's application state is a giant, structured, plain JavaScript object.\n *\n * It is modelled after the principles explained in http://jamesknelson.com/5-types-react-application-state/.\n *\n * @author Norman Fomferra\n */\n\nexport interface State {\n    data: DataState;\n    communication: CommunicationState;\n    control: ControlState;\n    session: SessionState;\n    location: LocationState;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// DataState\n\n/**\n * Cate's domain data which is usually received from the Cate WebAPI service.\n */\nexport interface DataState {\n    dataStores: DataStoreState[] | null;\n    operations: OperationState[] | null;\n    workspace: WorkspaceState | null;\n    fsRootNode: FileNode;\n    colorMaps: ColorMapCategoryState[] | null;\n    baseMaps: BaseMapState[];\n    workspaceNames: string[] | null;\n    hasWebGL: boolean;\n}\n\nexport type WebAPIStatus = 'login' | 'launching' | 'connecting' | 'open' |\n    'error' | 'closed' | 'shuttingDown' | 'loggingOut';\n\nexport interface WebAPIServiceInfo {\n    name: string;\n    version: string;\n    timestamp: string;\n    userRootMode: boolean;\n    hostOS?: HostOS;\n    dependencies?: {[packageName: string]: string};\n    autoStopInfo?: WebAPIAutoStopInfo;\n}\n\nexport interface WebAPIAutoStopInfo {\n    // Configured auto-stop time in seconds\n    availableTime: number;\n    // Duration in seconds of service inactivity\n    inactivityTime: number;\n    // Duration in seconds remaining until service auto-stop\n    remainingTime: number;\n}\n\nexport interface HubStatus {\n    status: \"ok\" | \"offline\";\n    message?: string;\n    deployment: \"development\" | \"production\";\n}\n\nexport interface DataStoreNotice {\n    id: string;\n    title: string;\n    content: string;\n    icon: IconName | null;\n    intent: string | null;\n}\n\nexport interface DataStoreState {\n    id: string;\n    title: string | null;\n    isLocal: boolean;\n    description: string | null;\n    notices: DataStoreNotice[] | null;\n    dataSources?: DataSourceState[] | null;\n}\n\nexport type DataSourceCapability =\n    \"open\"\n    | \"write_zarr\"\n    | \"constrain_time\"\n    | \"constrain_region\";\n\n\nexport interface DatasetDescriptor {\n    data_id: string;\n    data_type: string;\n    crs?: string;\n    bbox?: [number, number, number, number];\n    spatial_res?: number;\n    time_range?: [string | null, string | null];\n    time_period?: string;\n    data_vars?: VariableDescriptor[];\n    coords?: VariableDescriptor[];\n    abstract?: string;\n    catalog_url?: string;\n    catalogue_url?: string;\n    cci_project?: string;\n    info_url?: string;\n    licences?: [string];\n    title?: string;\n    uuid?: string;\n    // Anything else:\n    // [attr_name: string]: any;\n}\n\nexport interface VariableDescriptor {\n    name: string;\n    units?: string;\n    long_name?: string;\n    standard_name?: string;\n    dims?: string[];\n}\n\n// TODO: (forman) use this in the future instead of DatasetDescriptor/VariableDescriptor\n// {{{{{{{{{{{{\n\nexport interface DataDescriptor2 {\n    data_id: string;\n    data_type: string;\n    crs?: string | null;\n    bbox?: [number, number, number, number] | null;\n    time_range?: [string | null, string | null] | null;\n    time_period?: string | null;\n    open_params_schema?: JSONSchema7 | null;\n}\n\nexport interface GeoDataFrameDescriptor2 extends DataDescriptor2 {\n}\n\nexport interface DatasetDescriptor2 extends DataDescriptor2 {\n    spatial_res?: number | null;\n    dims?: { [dim_name: string]: number } | null;\n    coords?: { [var_name: string]: VariableDescriptor2 } | null;\n    data_vars?: { [var_name: string]: VariableDescriptor2 } | null;\n    attrs?: { [attr_name: string]: any } | null;\n}\n\nexport interface VariableDescriptor2 {\n    name: string;\n    dtype: string;\n    dims: string[];\n    chunks?: number[] | null;\n    attrs?: { [attr_name: string]: any } | null;\n}\n\n// }}}}}}}}}}}}\n\n\nexport interface DataSourceState {\n    id: string;\n    title?: string;\n    // TODO: (forman) replace by descriptor in the future\n    metaInfo?: DatasetDescriptor;\n    metaInfoStatus: 'init' | 'loading' | 'ok' | 'error';\n    // TODO: (forman) use this in the future instead of metaInfo\n    // descriptor?: DatasetDescriptor2 | GeoDataFrameDescriptor2;\n    // descriptorStatus: 'init' | 'loading' | 'ok' | 'error';\n    dataType?: string | null;\n    capabilities?: DataSourceCapability[] | null;\n    temporalCoverage?: [string, string] | null;\n}\n\nexport interface OperationState {\n    name: string;\n    qualifiedName: string;\n    hasMonitor: boolean;\n    description: string | null;\n    tags: Array<string>;\n    inputs: OperationInputState[];\n    outputs: OperationOutputState[];\n}\n\nexport interface OperationIOBaseState {\n    name: string;\n    dataType: string;\n    description: string | null;\n    units?: string | null;\n}\n\nexport interface OperationInputState extends OperationIOBaseState {\n    /* optional properties used mainly for validation */\n    defaultValue?: any;\n    nullable?: boolean;\n    valueSet?: any[];\n    valueSetSource?: string;\n    valueRange?: [number, number] | [string, string];\n    scriptLang?: string;\n    fileOpenMode?: 'w' | 'r' | 'rw';\n    fileFilters?: FileFilter[];\n    fileProps?: OpenDialogProperty[] | SaveDialogProperty[];\n    noUI?: boolean;\n    password?: boolean;\n}\n\nexport interface OperationOutputState extends OperationIOBaseState {\n}\n\n/**\n * An operation argument that refers to a constant value.\n */\nexport interface OperationArgumentValue {\n    value: any;\n}\n\n/**\n * An operation argument that refers to another resource.\n */\nexport interface OperationArgumentSource {\n    /**\n     * Resource name. May later also use syntax \"<resource>.<outputName>\" or \"<resource>[<variableName>]\".\n     */\n    source: string;\n}\n\n/**\n * Operation argument.\n */\nexport type OperationArg = OperationArgumentValue | OperationArgumentSource;\n\n/**\n * Positional operation argument list.\n */\n//export type OperationArgs = OperationArg[];\n\n/**\n * Non-positional operation keyword-arguments.\n */\nexport type OperationKWArgs = { [name: string]: OperationArg };\n\n/**\n * IMPORTANT: WorkspaceState must reflect what is returned by cate.core.workspace.Workspace.to_json_dict()\n */\nexport interface WorkspaceState {\n    /**\n     * The workspace' base directory path.\n     */\n    baseDir: string;\n    /**\n     * The workspace' description.\n     */\n    description: string | null;\n    /**\n     * Is it a scratch workspace? Scratch workspaces must be saved-as to some real location.\n     */\n    isScratch: boolean;\n    /**\n     * Has it been modified since it has been created, opened, or saved?\n     */\n    isModified: boolean;\n    /**\n     * Has it been saved before?\n     */\n    isSaved: boolean;\n    /**\n     * The workflow and its steps.\n     */\n    workflow: WorkflowState;\n    /**\n     * Information about the resources\n     */\n    resources: ResourceState[];\n}\n\n/**\n * IMPORTANT: WorkflowState must reflect what is returned by cate.core.workflow.Workflow.to_json_dict()\n */\nexport interface WorkflowState {\n    steps: WorkflowStepState[];\n}\n\n/**\n * IMPORTANT: WorkflowStepState must reflect what is returned by cate.core.workflow.Step.to_json_dict()\n */\nexport interface WorkflowStepState {\n    /**\n     * Step ID. The ID will be used as Workspace's resource name.\n     */\n    id: string;\n\n    /**\n     * Step type (not used yet).\n     */\n    type: 'operation' | 'workflow' | 'python-expression' | 'python-script' | 'executable';\n\n    /**\n     * The actual action to be performed. Allowed values depend on 'type'.\n     * For example, 'op' is the operation's name, if type===\"operation\".\n     */\n    op: string;\n\n    /**\n     * Whether the step stores resource files for faster opening of workspaces.\n     */\n    persistent?: boolean;\n\n    inputs: { [name: string]: WorkflowPortState & string };\n    outputs: { [name: string]: WorkflowPortState & string };\n}\n\n/**\n * IMPORTANT: WorkflowStepState must reflect what is returned by cate.core.workflow.NodePort.to_json_dict()\n */\nexport interface WorkflowPortState {\n    /**\n     * A constant value.\n     * Constraint: value!==undefined, if sourceRef===null.\n     */\n    value: any | undefined;\n    /**\n     * Reference to a step which provides the value of this port.\n     * Constraint: sourceRef!==null, if value===undefined.\n     *\n     * Source reference can either be the ID of another (single-output) step or it can have the form\n     * \"stepId.outputPort\" if it refers to specific output of a (multi-output) step.\n     */\n    source: string | null;\n}\n\nexport type DimSizes = { [dimName: string]: number };\nexport type Attributes = { [attrName: string]: any };\n\n// TODO (forman): harmonize ResourceState + VariableState, in the end\n//                1. ResourceState is-a VariableState\n//                2. ResourceState has-zero-or-more VariableStates\n//                3. VariableState also has a path name\n\n/**\n * IMPORTANT: ResourceState must reflect what is returned by cate.core.workspace.Workspace.to_json_dict()\n */\nexport interface ResourceState {\n    id: number;\n    updateCount: number;\n    name: string;\n    dataType: string;\n    dimSizes?: DimSizes;\n    units?: string;\n    validMin?: number;\n    validMax?: number;\n    attributes?: Attributes;\n    variables?: VariableState[];\n    coordVariables?: VariableState[];\n}\n\n/**\n * IMPORTANT: VariableState must reflect what is returned by cate.core.workspace.Workspace.to_json_dict()\n */\nexport interface VariableState {\n    name: string;\n    dataType: string;\n    numDims?: number;\n    dimNames?: string[];\n    shape?: number[];\n    chunkSizes?: number[];\n    units?: string;\n    validMin?: number;\n    validMax?: number;\n    data?: any[];\n    attributes?: Attributes;\n    isCoord?: boolean;\n    isDefault?: boolean;\n    imageLayout?: ImageLayout;\n    isFeatureAttribute?: boolean;\n    isYFlipped?: boolean;\n    colorMapName?: string;\n    displayMin?: number;\n    displayMax?: number;\n    // Only given, if variable is scalar, see issue #702\n    value?: number | string | boolean;\n}\n\n/**\n * Image layout for use with Cesium and OpenLayers.\n */\nexport interface ImageLayout {\n    extent?: {\n        /** The westernmost longitude, in radians, in the range [-Pi, Pi]. */\n        west: number,\n        /** The southernmost latitude, in radians, in the range [-Pi/2, Pi/2]. */\n        south: number,\n        /** The easternmost longitude, in radians, in the range [-Pi, Pi]. */\n        east: number,\n        /** The northernmost latitude, in radians, in the range [-Pi/2, Pi/2]. */\n        north: number\n    };\n    ellipsoid?: {\n        /** The radius in the x direction. */\n        x: number;\n        /** The radius in the y direction. */\n        y: number;\n        /** The radius in the z direction. */\n        z: number;\n    };\n    numLevels: number;\n    numLevelZeroTilesX: number;\n    numLevelZeroTilesY: number;\n    tileWidth: number;\n    tileHeight: number;\n}\n\nexport type WorldViewMode = '2D' | '3D';\n\n/**\n * Data object for view type \"world\".\n */\nexport interface WorldViewDataState {\n    /**\n     * 2D map or 3D globe?\n     */\n    viewMode: WorldViewMode;\n\n    /**\n     * ID of the base map, see state.data.baseMaps.\n     */\n    baseMapId: string;\n\n    /**\n     * Code of the projection used by the 2D map.\n     */\n    projectionCode: string;\n\n    /**\n     * The layers in a viewer.\n     */\n    layers: LayerState[];\n\n    /**\n     * The ID of the selected layer.\n     */\n    selectedLayerId: string | null;\n\n    /**\n     * The ID of the selected entity in Cesium 3D globe.\n     */\n    selectedEntityId: string | null;\n\n    /**\n     * The position of a layer split. Must be in the range 0 to 1.\n     */\n    layerSplitPosition;\n}\n\nexport interface FigureViewDataState {\n    /**\n     * The resource identifier.\n     */\n    resourceId: number;\n    /**\n     * Whether the figure has a fixed size or it adapts to the current container size.\n     */\n    fixedSize: boolean;\n}\n\nexport interface AnimationViewDataState extends FigureViewDataState {\n    /**\n     * The HTML representing the animation.\n     */\n    innerHTML?: string;\n    /**\n     * The response status.\n     */\n    status?: number;\n}\n\n\nexport interface TableViewDataState {\n    resName: string;\n    varName: string | null;\n    dataRows: any[] | null;\n    error?: any;\n    isLoading?: boolean;\n}\n\n\n/**\n * State of a layer.\n */\nexport interface LayerState {\n    /**\n     * Layer ID.\n     */\n    id: string;\n\n    /**\n     * Layer type\n     */\n    type: 'VariableImage' | 'ResourceVector' | 'Image' | 'Vector' | 'Unknown';\n\n    /**\n     * Layer name.\n     */\n    name?: string | null;\n\n    /**\n     * True if the layer is visible and shown; otherwise, false.\n     */\n    visible: boolean;\n\n    /**\n     * The layer's opacity.\n     */\n    opacity?: number;\n}\n\nexport interface ImageStatisticsState {\n    /**\n     * The true minimum value in the current data subset.\n     */\n    min: number;\n\n    /**\n     * The true maximum value in the current data subset.\n     */\n    max: number;\n}\n\nexport const SPLIT_MODE_OFF = 'off';\nexport const SPLIT_MODE_LEFT = 'left';\nexport const SPLIT_MODE_RIGHT = 'right';\nexport type SplitMode = 'off' | 'left' | 'right';\n\n\n/**\n * Base of image layers.\n */\nexport interface ImageLayerBase extends LayerState {\n    /**\n     * The brightness of this layer. 1.0 uses the unmodified imagery color.\n     * Less than 1.0 makes the imagery darker while greater than 1.0 makes it brighter.\n     */\n    brightness: number;\n\n    /**\n     * The contrast of this layer. 1.0 uses the unmodified imagery color.\n     * Less than 1.0 reduces the contrast while greater than 1.0 increases it.\n     */\n    contrast: number;\n\n    /**\n     * The hue of this layer. 0.0 uses the unmodified imagery color.\n     */\n    hue: number;\n\n    /**\n     * The saturation of this layer. 1.0 uses the unmodified imagery color.\n     * Less than 1.0 reduces the saturation while greater than 1.0 increases it.\n     */\n    saturation: number;\n\n    /**\n     * The gamma correction to apply to this layer. 1.0 uses the unmodified imagery color.\n     */\n    gamma: number;\n\n    /**\n     * Split mode.\n     */\n    splitMode: SplitMode;\n}\n\n/**\n * State of an image layer.\n */\nexport interface ImageLayerState extends ImageLayerBase {\n    /**\n     * The layer type.\n     */\n    type: 'Image';\n}\n\n/**\n * Base of vector layers.\n */\nexport interface VectorLayerBase extends LayerState {\n    /**\n     * Stores the default style for all entities of the layer.\n     */\n    style?: SimpleStyle;\n\n    /**\n     * Stores the style and any edited entities.\n     * This object will only contain keys, if an entities style has changed.\n     * Default styles come from the SimpleStyle interface of VectorLayerBase.\n     */\n    entityStyles?: { [entityId: string]: SimpleStyle };\n}\n\n\n/**\n * State of a vector layer.\n */\nexport interface VectorLayerState extends VectorLayerBase {\n    /**\n     * The layer type.\n     */\n    type: 'Vector';\n\n    /**\n     * The (GeoJSON-providing) URL or GeoJSON object.\n     */\n    data: string | GeoJsonObject;\n}\n\n/**\n * Resource reference\n */\nexport interface ResourceRefState {\n    /**\n     * The id of the resource that contains the variable.\n     */\n    resId: number;\n}\n\n/**\n * Variable reference\n */\nexport interface VariableRefState extends ResourceRefState {\n    /**\n     * The name of the variable.\n     */\n    varName: string;\n}\n\n/**\n * Variable data reference\n */\nexport interface VariableDataRefState extends VariableRefState {\n    /**\n     * The current index into the variable that results in a 2D-subset (i.e. with dimensions ['lat', 'lon']).\n     */\n    varIndex: number[];\n}\n\n/**\n * State of an image layer that displays a variable.\n */\nexport interface VariableLayerBase extends LayerState, VariableDataRefState {\n    /**\n     * Image layer minimum display value.\n     */\n    displayMin: number;\n    /**\n     * Image layer maximum display value.\n     */\n    displayMax: number;\n    /**\n     * Image layer color map name.\n     */\n    colorMapName: string;\n    /**\n     * Whether to blend alpha 0...1 at bottom value range.\n     */\n    alphaBlending: boolean;\n    /**\n     * Image enhancement attributes.\n     */\n    statistics?: ImageStatisticsState;\n}\n\n/**\n * State of an image layer that displays a variable.\n */\nexport interface VariableImageLayerState extends ImageLayerBase, VariableLayerBase {\n    /**\n     * The layer type.\n     */\n    type: 'VariableImage';\n}\n\n/**\n * State of an image layer that displays a variable.\n */\nexport interface ResourceVectorLayerState extends VectorLayerBase, ResourceRefState {\n    /**\n     * The layer type.\n     */\n    type: 'ResourceVector';\n}\n\n/**\n * An object comprising the resource and one of its variables which can be represented as a spatial 2D layer.\n */\nexport class LayerVariableState {\n    /**\n     * The resource.\n     */\n    resource: ResourceState;\n    /**\n     * A spatial 2D variable within the resource.\n     */\n    variable: VariableState;\n}\n\nexport interface BaseMapState {\n    id: string;\n    title: string;\n    options: BaseMapOptions | null;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ColorMapState\n\n\nexport interface ColorMapState {\n    name: string;\n    imageData: string;\n}\n\nexport interface ColorMapCategoryState {\n    name: string;\n    description: string;\n    colorMaps: ColorMapState[];\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CommunicationState\n\n/**\n * Communication state is the status of any not-yet-complete requests to other services.\n */\nexport interface CommunicationState {\n    webAPIServiceURL: string;\n    webAPIServiceInfo: WebAPIServiceInfo | null;\n    webAPIStatus: WebAPIStatus | null;\n    webAPIClient: WebAPIClient | null;\n    // A map that stores the current state of any tasks (e.g. data fetch jobs from remote API) given a jobId\n    tasks: { [jobId: number]: TaskState; };\n}\n\nexport interface TaskState {\n    title?: string;\n    status: JobStatus;\n    failure?: JobFailure;\n    progress?: JobProgress;\n    requestLock?: string;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ControlState\n\n\n/**\n * Control State is state which is specific to a given container component, and which is not stored in the screen’s\n * URL or in the HTML5 History API.\n */\nexport interface ControlState {\n\n    // TODO (forman): Move following selection properties into SessionState so they can be stored.\n    // WorkspacePanel\n    selectedWorkspaceResourceName: string | null;\n    selectedWorkflowStepId: string | null;\n    // VariablesPanel\n    selectedVariableName: string | null;\n\n    selectedCtxOperationName: string | null;\n\n    // A map that stores the last state of any dialog given a dialogId\n    dialogs: { [dialogId: string]: DialogState };\n\n    // Select directory dialog\n    directorySelectDialog: OpenDialogState;\n    // Open file dialog\n    fileOpenDialog: OpenDialogState;\n    // Save file dialog\n    fileSaveDialog: SaveDialogState;\n    // Browse file dialog\n    fileBrowseDialog: BrowseDialogState;\n    // Message box\n    messageBox: MessageBoxState;\n\n    // Take care, workspace objects come from Python back-end, therefore must preserve view settings.\n    viewLayout: ViewLayoutState;\n    views: ViewState<any>[];\n    activeViewId: string | null;\n\n    newPlacemarkToolType: GeometryToolType;\n\n    // Used to force component update after an entity's properties have changed\n    entityUpdateCount: number;\n}\n\nexport interface DialogState {\n    isOpen?: boolean;\n}\n\nexport interface OpenDialogState extends DialogState {\n    onClose: (result: OpenDialogResult) => any;\n    options?: OpenDialogOptions;\n    result?: OpenDialogResult;\n}\n\nexport interface SaveDialogState extends DialogState {\n    onClose: (result: SaveDialogResult) => any;\n    options?: SaveDialogOptions;\n    result?: SaveDialogResult;\n}\n\nexport interface BrowseDialogState extends DialogState {\n    onClose: (result: OpenDialogResult) => any;\n    options?: OpenDialogOptions;\n}\n\nexport interface MessageBoxState extends DialogState {\n    onClose?: (result: MessageBoxResult | null) => any;\n    options?: MessageBoxOptions;\n    result?: MessageBoxResult | null;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SessionState\n\nexport type SavedLayers = { [key: string]: LayerState };\n\n/**\n * Backend-configuration settings.\n */\nexport interface BackendConfigState {\n    dataStoresPath: string;\n    useWorkspaceImageryCache: boolean;\n    resourceNamePattern: string;\n    proxyUrl: string;\n}\n\nexport interface Placemark extends Feature<Point> {\n    id: string;\n}\n\nexport interface PlacemarkCollection extends FeatureCollection<Point> {\n    features: Placemark[];\n}\n\nexport const STYLE_CONTEXT_ENTITY = 'entity';\nexport const STYLE_CONTEXT_LAYER = 'layer';\n\nexport type StyleContext = 'entity' | 'layer';\nexport type WorkspacePanelMode = 'resources' | 'steps';\n\n/**\n * Session state contains information about the human being which is currently using Cate.\n * Session state is only ever read when a component is mounted.\n * Session state can be used to save preferences.\n */\nexport interface SessionState {\n    mainWindowBounds?: { x: number; y: number; width: number; height: number };\n    devToolsOpened?: boolean;\n    forceAppBar?: boolean;\n    /**\n     * lastWorkspacePath != null, only if it is not a scratch-workspace\n     */\n    lastWorkspacePath?: string | null;\n    reopenLastWorkspace?: boolean;\n    offlineMode: boolean;\n    autoUpdateSoftware: boolean;\n    autoShowNewFigures: boolean;\n\n    // AppMainPage\n    panelContainerUndockedMode: boolean;\n    leftPanelContainerLayout: PanelContainerLayout;\n    rightPanelContainerLayout: PanelContainerLayout;\n    selectedLeftTopPanelId: string | null;\n    selectedLeftBottomPanelId: string | null;\n    selectedRightTopPanelId: string | null;\n    selectedRightBottomPanelId: string | null;\n\n    showLayerTextOverlay: boolean;\n    debugWorldView: boolean;\n\n    /**\n     * backendConfig settings are applied on restart (of the WebAPI) only.\n     */\n    backendConfig: BackendConfigState;\n\n    // DataSourcesPanel\n    selectedDataStoreId: string | null;\n    selectedDataSourceId: string | null;\n    dataSourceFilterExpr: string;\n    dataSourceListHeight: number;\n    showDataSourceDetails: boolean;\n    showAllDataSources: boolean;\n    showDataSourceIDs: boolean;\n    showDataStoreDescription: boolean;\n    showDataStoreNotices: boolean;\n\n    // OperationsPanel\n    selectedOperationName: string | null;\n    operationFilterTags: string[];\n    operationFilterExpr: string;\n    operationListHeight: number;\n    showOperationDetails: boolean;\n\n    // WorkspacePanel\n    workspacePanelMode: WorkspacePanelMode;\n    resourceListHeight: number;\n    showResourceDetails: boolean;\n    workflowStepListHeight: number;\n    showWorkflowStepDetails: boolean;\n\n    // VariablePanel\n    variableListHeight: number;\n    showVariableDetails: boolean;\n\n    // LayersPanel\n    showSelectedVariableLayer: boolean;\n    layerListHeight: number;\n    showLayerDetails: boolean;\n    lastBaseMapId: string;\n    savedLayers: SavedLayers;\n    styleContext: StyleContext;\n\n    // PlacemarksPanel\n    placemarkCollection: PlacemarkCollection;\n    selectedPlacemarkId: string | null;\n    placemarkListHeight: number;\n    showPlacemarkDetails: boolean;\n    defaultPlacemarkStyle: SimpleStyle;\n\n    // Preferences\n    showDependencies?: boolean;\n\n    // EU GDPR\n    cookieConsentObtained: boolean;\n    trackingConsentObtained: boolean;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LocationState\n\nexport class GeographicPosition {\n    longitude: number;\n    latitude: number;\n    height?: number;\n}\n\n/**\n * Location state stores information about the current location in space and time.\n * Information in this object may change frequently, e.g. due to mouse moves on a Globe.\n */\nexport interface LocationState {\n    globeMousePosition: GeographicPosition | null;\n    globeViewPosition: GeographicPosition | null;\n    positionData: { [varName: string]: number } | null\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MessageState\n\nexport interface MessageActionState {\n    text: string;\n    onClick?: (...actionArgs) => void;\n    href?: string;\n    icon?: IconName;\n}\n\nexport interface MessageState {\n    type: 'info' | 'success' | 'notification' | 'warning' | 'error';\n    text: string | JSX.Element;\n    action?: MessageActionState;\n}\n\n","import { IActionProps, ILinkProps, Intent, IToaster, Position, Toaster } from '@blueprintjs/core';\r\nimport { MessageState } from './state';\r\n\r\nlet MessageToaster: IToaster | null = null;\r\n\r\nexport function showToast(message: MessageState, timeout?: number) {\r\n\r\n    if (!MessageToaster) {\r\n        MessageToaster = Toaster.create({\r\n                                            className: 'cate-toaster',\r\n                                            position: Position.BOTTOM,\r\n                                        });\r\n    }\r\n\r\n    let icon;\r\n    let intent;\r\n    if (message.type === 'info') {\r\n        icon = 'info-sign';\r\n        intent = Intent.NONE;\r\n        timeout = timeout || 2500;\r\n    } else if (message.type === 'success') {\r\n        icon = 'tick';\r\n        intent = Intent.SUCCESS;\r\n        timeout = timeout || 2500;\r\n    } else if (message.type === 'notification') {\r\n        icon = 'notifications';\r\n        intent = Intent.PRIMARY;\r\n        timeout = timeout || 2500;\r\n    } else if (message.type === 'warning') {\r\n        icon = 'warning-sign';\r\n        intent = Intent.WARNING;\r\n        timeout = timeout || 6000;\r\n    } else if (message.type === 'error') {\r\n        icon = 'error';\r\n        intent = Intent.DANGER;\r\n        timeout = timeout || 10000;\r\n    } else {\r\n        timeout = timeout || 5000;\r\n    }\r\n\r\n    let action: IActionProps & ILinkProps;\r\n    if (message.action) {\r\n        action = {\r\n            onClick: message.action.onClick,\r\n            text: message.action.text,\r\n            icon: message.action.icon,\r\n            href: message.action.href,\r\n            target: message.action.href ? '_blank' : undefined,\r\n        }\r\n    }\r\n\r\n    MessageToaster.show({\r\n                            message: message.text,\r\n                            icon,\r\n                            intent,\r\n                            action,\r\n                            timeout,\r\n                        });\r\n}\r\n","import { IconName } from '@blueprintjs/icons';\r\nimport * as assert from '../../common/assert';\r\n\r\n\r\nexport type SplitDir = 'hor' | 'ver';\r\n\r\nexport type ViewPath = string;\r\n\r\n\r\nexport interface ViewState<T> {\r\n    id: string;\r\n    title: string;\r\n    icon?: IconName;\r\n    /**\r\n     * The view type is used to lookup the renderer for this kind of view, e.g. \"world\".\r\n     */\r\n    type: string;\r\n    /**\r\n     * Type T of 'data' property depends on 'type' property, e.g. if type is \"world\",\r\n     * data may contains a layer list, the selected layer, and a projection code.\r\n     */\r\n    data: T;\r\n}\r\n\r\nexport type ViewRenderer<T> = (view: ViewState<T>) => JSX.Element;\r\n\r\n\r\n/**\r\n * Definition for a panel of views with one visible at a time.\r\n */\r\nexport interface ViewPanelState {\r\n    viewIds: string[];\r\n    selectedViewId: string | null;\r\n}\r\n\r\n/**\r\n * JSON-serializable view viewLayout\r\n */\r\nexport interface ViewSplitState {\r\n    /**\r\n     * First and second panel is either a view panel given by view IDs or another ViewSplitState.\r\n     */\r\n    layouts: [ViewLayoutState, ViewLayoutState];\r\n\r\n    /**\r\n     * Direction is horizontal/vertical.\r\n     */\r\n    dir: SplitDir;\r\n\r\n    /**\r\n     * Horizontal/vertical position of 1st panel in pixels.\r\n     */\r\n    pos: number;\r\n}\r\n\r\nexport type ViewLayoutState = ViewSplitState | ViewPanelState;\r\n\r\n\r\nexport function isViewSplitState(obj: any) {\r\n    return 'layouts' in obj;\r\n}\r\n\r\nexport function isViewPanelState(obj: any) {\r\n    return 'viewIds' in obj;\r\n}\r\n\r\nexport function getViewPanel(viewLayout: ViewLayoutState, viewPath: ViewPath): ViewPanelState {\r\n    return _getViewPanel(viewLayout, viewPath, 0);\r\n}\r\n\r\nexport function findViewPanel(viewLayout: ViewLayoutState,\r\n                              filter: (viewPanel: ViewPanelState) => boolean): ViewPanelState | null {\r\n    if (isViewPanelState(viewLayout)) {\r\n        const viewPanel = viewLayout as ViewPanelState;\r\n        return filter && filter(viewPanel) ? viewPanel : null;\r\n    }\r\n    assert.ok(isViewSplitState(viewLayout), 'ViewSplitState expected');\r\n    const viewSplit = viewLayout as ViewSplitState;\r\n    return findViewPanel(viewSplit.layouts[0], filter) || findViewPanel(viewSplit.layouts[1], filter);\r\n}\r\n\r\nexport function findMoveTargetViewIds(viewLayout: ViewLayoutState, sourceViewId: string): { after: string[]; before: string[] } {\r\n    const result = {before: [], after: []};\r\n    _collectMoveTargetViewIds(viewLayout, sourceViewId, result);\r\n    return result;\r\n}\r\n\r\nexport function moveView(viewLayout: ViewLayoutState,\r\n                         sourceViewId: string,\r\n                         placement: 'before' | 'after',\r\n                         targetViewId: string): ViewLayoutState {\r\n    return _moveView(viewLayout, sourceViewId, placement, targetViewId);\r\n}\r\n\r\nexport function addViewToPanel(viewLayout: ViewLayoutState,\r\n                               placeAfterViewId: string,\r\n                               viewId: string): ViewLayoutState {\r\n    return _addViewToPanel(viewLayout, placeAfterViewId, viewId);\r\n}\r\n\r\nexport function addViewToLayout(viewLayout: ViewLayoutState,\r\n                                viewId: string): ViewLayoutState {\r\n    return _addViewToLayout(viewLayout, viewId);\r\n}\r\n\r\nexport function splitViewPanel(viewLayout: ViewLayoutState,\r\n                               viewPath: ViewPath,\r\n                               dir: SplitDir,\r\n                               pos: number): ViewLayoutState {\r\n    return _splitViewPanel(viewLayout, viewPath, dir, pos, 0);\r\n}\r\n\r\nexport function changeViewSplitPos(viewLayout: ViewLayoutState,\r\n                                   viewPath: ViewPath,\r\n                                   delta: number): ViewLayoutState {\r\n    return _changeViewSplitPos(viewLayout, viewPath, delta, 0);\r\n}\r\n\r\nexport function selectViewInLayout(viewLayout: ViewLayoutState,\r\n                                   viewPath: ViewPath,\r\n                                   viewId: string): ViewLayoutState {\r\n    return _selectViewInLayout(viewLayout, viewPath, viewId, 0);\r\n}\r\n\r\nexport function removeViewFromLayout(viewLayout: ViewLayoutState,\r\n                                     viewPath: ViewPath,\r\n                                     viewId: string): ViewLayoutState {\r\n    return _removeViewFromLayout(viewLayout, viewPath, viewId, 0);\r\n}\r\n\r\nexport function removeAllViewsFromLayout(viewLayout: ViewLayoutState,\r\n                                         viewPath: ViewPath) {\r\n    return _removeViewFromLayout(viewLayout, viewPath, null, 0);\r\n}\r\n\r\n// function removeViewFromViewIds(viewIds: string[], viewId: string): string[] {\r\n//     while (true) {\r\n//         const i = viewIds.indexOf(viewId);\r\n//         if (i >= 0) {\r\n//             viewIds = viewIds.slice(0, i).concat(viewIds.slice(i + 1));\r\n//         } else {\r\n//             break;\r\n//         }\r\n//     }\r\n//     return viewIds;\r\n// }\r\n\r\nexport function addViewToViewArray(views: ViewState<any>[], view: ViewState<any>): ViewState<any>[] {\r\n    return views.concat([view]);\r\n}\r\n\r\nexport function removeViewFromViewArray(views: ViewState<any>[], viewId: string): ViewState<any>[] {\r\n    while (true) {\r\n        const i = views.findIndex(w => w.id === viewId);\r\n        if (i >= 0) {\r\n            views = views.slice(0, i).concat(views.slice(i + 1));\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return views;\r\n}\r\n\r\n\r\nfunction _getViewPanel(viewLayout: ViewLayoutState,\r\n                       viewPath: ViewPath,\r\n                       pathIndex: number): ViewPanelState {\r\n    if (isViewPanelState(viewLayout)) {\r\n        return viewLayout as ViewPanelState;\r\n    }\r\n    if (pathIndex < viewPath.length) {\r\n        assert.ok(isViewSplitState(viewLayout), 'ViewSplitState expected');\r\n        const viewSplit = viewLayout as ViewSplitState;\r\n        const layoutIndex = viewPath[pathIndex];\r\n        return _getViewPanel(viewSplit.layouts[layoutIndex], viewPath, pathIndex + 1);\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nexport function _moveView(viewLayout: ViewLayoutState,\r\n                          sourceViewId: string,\r\n                          placement: 'before' | 'after',\r\n                          targetViewId: string): ViewLayoutState {\r\n    if (isViewSplitState(viewLayout)) {\r\n        const viewSplit = viewLayout as ViewSplitState;\r\n        let oldLayout1 = viewSplit.layouts[0];\r\n        let oldLayout2 = viewSplit.layouts[1];\r\n        let newLayout1 = _moveView(oldLayout1, sourceViewId, placement, targetViewId);\r\n        let newLayout2 = _moveView(oldLayout2, sourceViewId, placement, targetViewId);\r\n        if (oldLayout1 === newLayout1 && oldLayout2 === newLayout2) {\r\n            // no change!\r\n            return viewSplit;\r\n        }\r\n        if (newLayout1 === null) {\r\n            assert.ok(newLayout2);\r\n            return newLayout2;\r\n        }\r\n        if (newLayout2 === null) {\r\n            return newLayout1;\r\n        }\r\n        return {...viewSplit, layouts: [newLayout1, newLayout2]} as ViewSplitState;\r\n    } else {\r\n        const viewPanel = viewLayout as ViewPanelState;\r\n        let viewIds = viewPanel.viewIds;\r\n        let selectedViewId = viewPanel.selectedViewId;\r\n\r\n        const sourceViewIndex = viewIds.findIndex(id => id === sourceViewId);\r\n        if (sourceViewIndex >= 0) {\r\n            // remove sourceViewId\r\n            viewIds = viewIds.slice();\r\n            viewIds.splice(sourceViewIndex, 1);\r\n            if (viewIds.length === 0) {\r\n                // sourceViewId was the last one, so close this panel\r\n                return null;\r\n            }\r\n            if (selectedViewId === sourceViewId && viewIds.length) {\r\n                // the removed view was the selected view, select some other view now\r\n                const selectedViewIndex = sourceViewIndex < viewIds.length ? sourceViewIndex : viewIds.length - 1;\r\n                selectedViewId = viewIds[selectedViewIndex];\r\n            }\r\n        }\r\n\r\n        const targetViewIndex = viewIds.findIndex(id => id === targetViewId);\r\n        if (targetViewIndex >= 0) {\r\n            if (placement === 'before') {\r\n                // insert sourceViewId before\r\n                viewIds = viewIds.slice(0, targetViewIndex).concat([sourceViewId].concat(viewIds.slice(targetViewIndex)));\r\n            } else {\r\n                // insert sourceViewId after\r\n                viewIds = viewIds.slice(0, targetViewIndex + 1).concat([sourceViewId].concat(viewIds.slice(targetViewIndex + 1)));\r\n            }\r\n            selectedViewId = sourceViewId;\r\n        }\r\n        if (viewIds !== viewPanel.viewIds) {\r\n            return {viewIds, selectedViewId};\r\n        }\r\n    }\r\n    // no change!\r\n    return viewLayout;\r\n}\r\n\r\n\r\n// TODO (forman): refactor out similar code with _moveViewToPanel()\r\nfunction _addViewToPanel(viewLayout: ViewLayoutState,\r\n                         placeAfterViewId: string,\r\n                         viewId: string): ViewLayoutState {\r\n    if (isViewSplitState(viewLayout)) {\r\n        const viewSplit = viewLayout as ViewSplitState;\r\n        let oldLayout1 = viewSplit.layouts[0];\r\n        let oldLayout2 = viewSplit.layouts[1];\r\n        let newLayout1 = _addViewToPanel(oldLayout1, placeAfterViewId, viewId);\r\n        let newLayout2;\r\n        if (oldLayout1 === newLayout1) {\r\n            newLayout2 = _addViewToPanel(oldLayout2, placeAfterViewId, viewId);\r\n        } else {\r\n            newLayout2 = oldLayout2;\r\n        }\r\n        if (oldLayout1 === newLayout1 && oldLayout2 === newLayout2) {\r\n            // no change!\r\n            return viewSplit;\r\n        }\r\n        const layouts = [newLayout1, newLayout2];\r\n        return {...viewSplit, layouts} as ViewSplitState;\r\n    } else {\r\n        const viewPanel = viewLayout as ViewPanelState;\r\n        let oldViewIds = viewPanel.viewIds;\r\n        const placeAfterIndex = oldViewIds.findIndex(id => id === placeAfterViewId);\r\n        if (placeAfterIndex < 0) {\r\n            // no change!\r\n            return viewPanel;\r\n        }\r\n        const insertionIndex = placeAfterIndex + 1;\r\n        const viewIds = oldViewIds.slice(0, insertionIndex).concat([viewId].concat(oldViewIds.slice(insertionIndex)));\r\n        return {viewIds, selectedViewId: viewId};\r\n    }\r\n}\r\n\r\n\r\nfunction _addViewToLayout(viewLayout: ViewLayoutState,\r\n                          viewId: string): ViewLayoutState {\r\n    if (isViewSplitState(viewLayout)) {\r\n        const viewSplit = viewLayout as ViewSplitState;\r\n        const oldLayout = viewSplit.layouts[0];\r\n        const newLayout = _addViewToLayout(oldLayout, viewId);\r\n        const layouts = [newLayout, viewSplit.layouts[1]];\r\n        return {...viewSplit, layouts} as ViewSplitState;\r\n    } else {\r\n        const viewPanel = viewLayout as ViewPanelState;\r\n        const viewIds = viewPanel.viewIds.concat([viewId]);\r\n        return {viewIds, selectedViewId: viewId};\r\n    }\r\n}\r\n\r\n\r\nfunction _splitViewPanel(viewLayout: ViewLayoutState,\r\n                         viewPath: ViewPath,\r\n                         dir: SplitDir,\r\n                         pos: number,\r\n                         pathIndex: number): ViewLayoutState {\r\n    assert.ok(pathIndex <= viewPath.length, 'illegal path index');\r\n    if (pathIndex < viewPath.length) {\r\n        assert.ok(isViewSplitState(viewLayout), 'ViewSplitState expected');\r\n        const viewSplit = viewLayout as ViewSplitState;\r\n        const layoutIndex = viewPath.charCodeAt(pathIndex) - 48; // 48 = ascii('0')\r\n        const oldLayout = viewSplit.layouts[layoutIndex];\r\n        const newLayout = _splitViewPanel(oldLayout, viewPath, dir, pos, pathIndex + 1);\r\n        let layouts;\r\n        if (layoutIndex === 0) {\r\n            layouts = [newLayout, viewSplit.layouts[1]];\r\n        } else {\r\n            layouts = [viewSplit.layouts[0], newLayout];\r\n        }\r\n        return {...viewSplit, layouts};\r\n    } else {\r\n        assert.ok(isViewPanelState(viewLayout), 'ViewPanelState expected');\r\n        const viewPanel = viewLayout as ViewPanelState;\r\n        let viewIds = viewPanel.viewIds;\r\n        assert.ok(viewIds.length > 1, 'ViewPanelState must have more than one view to be split');\r\n        const selectedViewId = viewPanel.selectedViewId;\r\n        let index = viewIds.findIndex(id => id === selectedViewId);\r\n        if (index === viewIds.length - 1) {\r\n            index -= 1;\r\n        }\r\n        assert.ok(index >= 0);\r\n        const viewIds1 = viewIds.slice(0, index + 1);\r\n        const viewIds2 = viewIds.slice(index + 1);\r\n        return {\r\n            dir, pos,\r\n            layouts: [\r\n                {\r\n                    viewIds: viewIds1,\r\n                    selectedViewId: viewIds1[viewIds1.length - 1],\r\n                },\r\n                {\r\n                    viewIds: viewIds2,\r\n                    selectedViewId: viewIds2[0],\r\n                }\r\n            ],\r\n        };\r\n    }\r\n}\r\n\r\nfunction _changeViewSplitPos(viewLayout: ViewLayoutState,\r\n                             viewPath: ViewPath,\r\n                             delta: number,\r\n                             pathIndex: number): ViewLayoutState {\r\n    assert.ok(pathIndex <= viewPath.length, 'illegal path index');\r\n    if (pathIndex < viewPath.length) {\r\n        assert.ok(isViewSplitState(viewLayout), 'ViewSplitState expected');\r\n        const viewSplit = viewLayout as ViewSplitState;\r\n        const layoutIndex = viewPath.charCodeAt(pathIndex) - 48; // 48 = ascii('0')\r\n        const oldLayout = viewSplit.layouts[layoutIndex];\r\n        const newLayout = _changeViewSplitPos(oldLayout, viewPath, delta, pathIndex + 1);\r\n        let layouts;\r\n        if (layoutIndex === 0) {\r\n            layouts = [newLayout, viewSplit.layouts[1]];\r\n        } else {\r\n            layouts = [viewSplit.layouts[0], newLayout];\r\n        }\r\n        return {...viewSplit, layouts};\r\n    } else {\r\n        assert.ok(isViewSplitState(viewLayout), 'ViewSplitState expected');\r\n        const viewSplit = viewLayout as ViewSplitState;\r\n        return {...viewSplit, pos: viewSplit.pos + delta};\r\n    }\r\n}\r\n\r\nfunction _selectViewInLayout(viewLayout: ViewLayoutState,\r\n                             viewPath: ViewPath,\r\n                             viewId: string,\r\n                             pathIndex: number): ViewLayoutState {\r\n    assert.ok(pathIndex <= viewPath.length, 'illegal path index');\r\n    if (pathIndex < viewPath.length) {\r\n        assert.ok(isViewSplitState(viewLayout), 'ViewSplitState expected');\r\n        const viewSplit = viewLayout as ViewSplitState;\r\n        const layoutIndex = viewPath.charCodeAt(pathIndex) - 48; // 48 = ascii('0')\r\n        const oldLayout = viewSplit.layouts[layoutIndex];\r\n        const newLayout = _selectViewInLayout(oldLayout, viewPath, viewId, pathIndex + 1);\r\n        if (oldLayout === newLayout) {\r\n            // No change!\r\n            return viewSplit;\r\n        }\r\n        let layouts;\r\n        if (layoutIndex === 0) {\r\n            layouts = [newLayout, viewSplit.layouts[1]];\r\n        } else {\r\n            layouts = [viewSplit.layouts[0], newLayout];\r\n        }\r\n        return {...viewSplit, layouts};\r\n    } else {\r\n        assert.ok(isViewPanelState(viewLayout), 'ViewPanelState expected');\r\n        const viewPanel = viewLayout as ViewPanelState;\r\n        let viewIds = viewPanel.viewIds;\r\n        if (viewId === viewPanel.selectedViewId) {\r\n            // No change!\r\n            return viewPanel;\r\n        }\r\n        assert.ok(viewIds.indexOf(viewId) >= 0, 'viewId not found');\r\n        return {viewIds: viewIds, selectedViewId: viewId};\r\n    }\r\n}\r\n\r\nexport function selectView(viewLayout: ViewLayoutState, viewId: string): ViewLayoutState {\r\n    if (isViewSplitState(viewLayout)) {\r\n        const viewSplit = viewLayout as ViewSplitState;\r\n        const oldLayout1 = viewSplit.layouts[0];\r\n        const oldLayout2 = viewSplit.layouts[1];\r\n        const newLayout1 = selectView(oldLayout1, viewId);\r\n        const newLayout2 = selectView(oldLayout2, viewId);\r\n        if (oldLayout1 !== newLayout1 || oldLayout2 !== newLayout2) {\r\n            return {...viewSplit, layouts: [newLayout1, newLayout2]} as ViewSplitState;\r\n        }\r\n    } else {\r\n        const viewPanel = viewLayout as ViewPanelState;\r\n        if (viewId !== viewPanel.selectedViewId) {\r\n            const viewIds = viewPanel.viewIds;\r\n            const selectedViewIndex = viewIds.findIndex(id => id === viewId);\r\n            if (selectedViewIndex >= 0) {\r\n                return {viewIds, selectedViewId: viewId};\r\n            }\r\n        }\r\n    }\r\n    // no change\r\n    return viewLayout;\r\n}\r\n\r\n\r\nfunction _removeViewFromLayout(viewLayout: ViewLayoutState,\r\n                               viewPath: ViewPath,\r\n                               viewId: string | null,\r\n                               pathIndex: number): ViewLayoutState {\r\n    assert.ok(pathIndex <= viewPath.length, 'illegal path index');\r\n    if (pathIndex < viewPath.length) {\r\n        assert.ok(isViewSplitState(viewLayout), 'ViewSplitState expected');\r\n        const viewSplit = viewLayout as ViewSplitState;\r\n        const layoutIndex = viewPath.charCodeAt(pathIndex) - 48; // 48 = ascii('0')\r\n        const oldLayout = viewSplit.layouts[layoutIndex];\r\n        const newLayout = _removeViewFromLayout(oldLayout, viewPath, viewId, pathIndex + 1);\r\n        if (oldLayout === newLayout) {\r\n            // No change!\r\n            return viewSplit;\r\n        }\r\n        if (isViewPanelState(newLayout) && (newLayout as ViewPanelState).viewIds.length === 0) {\r\n            // A panel has been returned which is now empty, so return the other panel that is left.\r\n            if (layoutIndex === 0) {\r\n                return viewSplit.layouts[1];\r\n            } else {\r\n                return viewSplit.layouts[0];\r\n            }\r\n        }\r\n\r\n        let layouts;\r\n        if (layoutIndex === 0) {\r\n            layouts = [newLayout, viewSplit.layouts[1]];\r\n        } else {\r\n            layouts = [viewSplit.layouts[0], newLayout];\r\n        }\r\n\r\n        return {...viewSplit, layouts};\r\n    } else {\r\n        assert.ok(isViewPanelState(viewLayout), 'ViewPanelState expected');\r\n        const viewPanel = viewLayout as ViewPanelState;\r\n        if (viewId) {\r\n            let viewIds = viewPanel.viewIds;\r\n            const viewIndex = viewIds.indexOf(viewId);\r\n            if (viewIndex < 0) {\r\n                // No change!\r\n                return viewPanel;\r\n            }\r\n            viewIds = viewIds.slice(0, viewIndex).concat(viewIds.slice(viewIndex + 1));\r\n            let selectedViewId = viewPanel.selectedViewId;\r\n            if (selectedViewId === viewId) {\r\n                selectedViewId = viewIndex > 0 ? viewIds[viewIndex - 1] : viewIndex < viewIds.length ? viewIds[viewIndex] : null;\r\n            }\r\n            return {viewIds, selectedViewId};\r\n        } else {\r\n            return {viewIds: [], selectedViewId: null};\r\n        }\r\n    }\r\n}\r\n\r\nfunction _collectMoveTargetViewIds(viewLayout: ViewLayoutState, sourceViewId: string, result: { after: string[]; before: string[] }) {\r\n    const viewIds = (viewLayout as ViewPanelState).viewIds;\r\n    if (viewIds) {\r\n        let lastViewId = null;\r\n        for (let i = 0; i < viewIds.length; i++) {\r\n            const viewId = viewIds[i];\r\n            if (viewId !== sourceViewId) {\r\n                const nextViewId = i < viewIds.length + 1 ? viewIds[i + 1] : null;\r\n                if (nextViewId === null || nextViewId !== sourceViewId) {\r\n                    result.after.push(viewId);\r\n                }\r\n                if (lastViewId === null || lastViewId !== sourceViewId) {\r\n                    result.before.push(viewId);\r\n                }\r\n            }\r\n            lastViewId = viewId;\r\n        }\r\n    }\r\n    const layouts = (viewLayout as ViewSplitState).layouts;\r\n    if (layouts) {\r\n        for (let layout of layouts) {\r\n            _collectMoveTargetViewIds(layout, sourceViewId, result);\r\n        }\r\n    }\r\n}\r\n","export const NEW_OPERATION_STEP_DIALOG_ID = 'newOperationStepDialog';\r\nexport const NEW_CTX_OPERATION_STEP_DIALOG_ID = 'newCtxOperationStepDialog';\r\nexport const EDIT_OPERATION_STEP_DIALOG_ID = 'editOperationStepDialog';\r\n\r\n","import * as Cookies from 'js-cookie';\r\n\r\nconst C_COOKIE_CONSENT_OBTAINED = 'cookieConsentObtained';\r\nconst C_TRACKING_CONSENT_OBTAINED = 'trackingConsentObtained';\r\n\r\nconst C_ON = '1';\r\nconst C_OFF = '0';\r\nconst C_OPTIONS: Cookies.CookieAttributes = {expires: 365};\r\n\r\n\r\nexport function isCookieConsentObtained() : boolean {\r\n    return Cookies.get(C_COOKIE_CONSENT_OBTAINED) === C_ON;\r\n}\r\n\r\nexport function isTrackingConsentObtained() : boolean {\r\n    return Cookies.get(C_TRACKING_CONSENT_OBTAINED) === C_ON;\r\n}\r\n\r\nexport function storeCookieConsent(trackingConsentObtained: boolean) {\r\n    Cookies.set(C_COOKIE_CONSENT_OBTAINED, C_ON, C_OPTIONS);\r\n    Cookies.set(C_TRACKING_CONSENT_OBTAINED, trackingConsentObtained ? C_ON : C_OFF, C_OPTIONS);\r\n}\r\n","import { isCookieConsentObtained, isTrackingConsentObtained } from './cookies';\nimport {\n    CommunicationState,\n    ControlState,\n    DataState,\n    LocationState,\n    SessionState,\n    STYLE_CONTEXT_ENTITY,\n    WorldViewDataState\n} from './state';\nimport { BASE_MAPS, DEFAULT_BASE_MAP_ID, hasWebGL, MY_PLACES_LAYER, newWorldView } from './state-util';\nimport { SimpleStyle } from '../common/geojson-simple-style';\nimport { ViewState } from './components/ViewState';\n\n\nexport const DEFAULT_SERVICE_URL = 'http://localhost:9090';\n\nexport const INITIAL_DATA_STATE: DataState = {\n    dataStores: null,\n    operations: null,\n    workspace: null,\n    colorMaps: null,\n    baseMaps: BASE_MAPS,\n    fsRootNode: {name: '', isDir: true, lastModified: '', size: 0},\n    workspaceNames: null,\n    hasWebGL: hasWebGL(),\n};\n\nconst INITIAL_WORLD_VIEW: ViewState<WorldViewDataState> = newWorldView();\n\nexport const INITIAL_CONTROL_STATE: ControlState = {\n    selectedWorkflowStepId: null,\n    selectedWorkspaceResourceName: null,\n    selectedVariableName: null,\n\n    dialogs: {},\n    directorySelectDialog: {\n        onClose: () => {\n        }\n    },\n    fileOpenDialog: {\n        onClose: () => {\n        }\n    },\n    fileSaveDialog: {\n        onClose: () => {\n        }\n    },\n    fileBrowseDialog: {\n        onClose: () => {\n        }\n    },\n    messageBox: {},\n\n    selectedCtxOperationName: null,\n\n    views: [INITIAL_WORLD_VIEW],\n    viewLayout: {\n        viewIds: [INITIAL_WORLD_VIEW.id],\n        selectedViewId: INITIAL_WORLD_VIEW.id,\n    },\n    activeViewId: INITIAL_WORLD_VIEW.id,\n\n    newPlacemarkToolType: 'NoTool',\n    entityUpdateCount: 0,\n};\n\n\nexport const INITIAL_SESSION_STATE: SessionState = {\n    reopenLastWorkspace: false,\n    lastWorkspacePath: null,\n    autoUpdateSoftware: true,\n    autoShowNewFigures: true,\n    offlineMode: false,\n    showSelectedVariableLayer: true,\n    savedLayers: {},\n\n    selectedDataStoreId: null,\n    selectedDataSourceId: null,\n    dataSourceFilterExpr: '',\n    selectedOperationName: null,\n    operationFilterTags: [],\n    operationFilterExpr: '',\n\n    dataSourceListHeight: 200,\n    showDataSourceDetails: true,\n    resourceListHeight: 100,\n    showResourceDetails: true,\n    workflowStepListHeight: 100,\n    showWorkflowStepDetails: true,\n    operationListHeight: 200,\n    showOperationDetails: true,\n    variableListHeight: 200,\n    showVariableDetails: true,\n    layerListHeight: 160,\n    showLayerDetails: true,\n    lastBaseMapId: DEFAULT_BASE_MAP_ID,\n\n    panelContainerUndockedMode: false,\n    leftPanelContainerLayout: {horPos: 300, verPos: 400},\n    rightPanelContainerLayout: {horPos: 300, verPos: 400},\n    selectedLeftTopPanelId: 'dataSources',\n    selectedLeftBottomPanelId: 'operations',\n    selectedRightTopPanelId: 'workspace',\n    selectedRightBottomPanelId: 'variables',\n    placemarkCollection: {\n        type: 'FeatureCollection',\n        features: []\n    },\n    selectedPlacemarkId: null,\n    placemarkListHeight: 160,\n    showPlacemarkDetails: true,\n    defaultPlacemarkStyle: {...MY_PLACES_LAYER.style} as SimpleStyle,\n\n    workspacePanelMode: 'steps',\n\n    showDataStoreDescription: false,\n    showDataStoreNotices: true,\n    showDataSourceIDs: true,\n    showAllDataSources: false,\n\n    showLayerTextOverlay: true,\n    debugWorldView: false,\n    styleContext: STYLE_CONTEXT_ENTITY,\n\n    backendConfig: {\n        dataStoresPath: null,\n        useWorkspaceImageryCache: false,\n        resourceNamePattern: 'res_{index}',\n        proxyUrl: null,\n    },\n\n    cookieConsentObtained: isCookieConsentObtained(),\n    trackingConsentObtained: isTrackingConsentObtained(),\n};\n\n\nexport const INITIAL_COMMUNICATION_STATE: CommunicationState = {\n    webAPIServiceURL: DEFAULT_SERVICE_URL,\n    webAPIStatus: null,\n    webAPIServiceInfo: null,\n    webAPIClient: null,\n    tasks: {},\n};\n\nexport const INITIAL_LOCATION_STATE: LocationState = {\n    globeMousePosition: null,\n    globeViewPosition: null,\n    positionData: null,\n};\n\n","import { combineReducers, Reducer } from 'redux';\nimport deepEqual from 'deep-equal';\n\nimport * as assert from '../common/assert';\nimport { featurePropertiesFromSimpleStyle } from '../common/geojson-simple-style';\nimport { updateObject, updatePropertyObject } from '../common/objutil';\nimport { isString } from '../common/types';\nimport * as actions from './actions';\nimport { Action, OBTAIN_COOKIE_CONSENT, UPDATE_FS_ROOT_NODE } from './actions';\nimport { updateFileNode } from './components/desktop/fs/FileNode';\nimport {\n    addViewToLayout,\n    addViewToPanel,\n    addViewToViewArray,\n    changeViewSplitPos,\n    findViewPanel,\n    getViewPanel,\n    moveView,\n    removeViewFromLayout,\n    removeViewFromViewArray,\n    selectView,\n    selectViewInLayout,\n    splitViewPanel,\n    ViewState\n} from './components/ViewState';\nimport { NEW_CTX_OPERATION_STEP_DIALOG_ID } from './containers/operation-step-dialog-ids';\nimport { storeCookieConsent } from './cookies';\nimport {\n    INITIAL_COMMUNICATION_STATE,\n    INITIAL_CONTROL_STATE,\n    INITIAL_DATA_STATE,\n    INITIAL_LOCATION_STATE,\n    INITIAL_SESSION_STATE\n} from './initial-state';\nimport {\n    CommunicationState,\n    ControlState, DataSourceState,\n    DataState,\n    DataStoreState,\n    LayerState,\n    LocationState,\n    SessionState,\n    State,\n    VectorLayerBase\n} from './state';\nimport {\n    AUTO_LAYER_ID,\n    computeDataSourceCapabilities,\n    getFigureViewTitle,\n    getPlacemarkTitleAndIndex,\n    isImageLayer,\n    isVectorLayer,\n    newAnimationView,\n    newFigureView,\n    newTableView,\n    newWorldView,\n    PLACEMARK_ID_PREFIX,\n    updateAutoLayer,\n} from './state-util';\n\n\n// Note: reducers are unit-tested through actions.spec.ts\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// state.data reducers\n\nconst updateDataStores = (state: DataState,\n                          action: Action,\n                          createDataSources: (dataStore: DataStoreState) => DataSourceState[]): DataState => {\n    const dataStoreId = action.payload.dataStoreId;\n    const dataStoreIndex = state.dataStores.findIndex(dataStore => dataStore.id === dataStoreId);\n    if (dataStoreIndex < 0) {\n        throw Error('illegal data store ID: ' + dataStoreId);\n    }\n    const oldDataStore = state.dataStores[dataStoreIndex];\n    const newDataStore = {...oldDataStore, dataSources: createDataSources(oldDataStore)};\n    const newDataStores = [...state.dataStores];\n    newDataStores[dataStoreIndex] = newDataStore;\n    return {...state, dataStores: newDataStores};\n};\n\nconst dataReducer = (state: DataState = INITIAL_DATA_STATE, action: Action): DataState => {\n    switch (action.type) {\n        case actions.UPDATE_WORKSPACE_NAMES: {\n            const workspaceNames = action.payload.workspaceNames || null;\n            return {...state, workspaceNames};\n        }\n        case actions.UPDATE_OPERATIONS: {\n            const operations = action.payload.operations;\n            return {...state, operations};\n        }\n        case actions.SET_CURRENT_WORKSPACE: {\n            const workspace = action.payload.workspace;\n            return {...state, workspace};\n        }\n        case UPDATE_FS_ROOT_NODE: {\n            const {path, updatedFileNode} = action.payload;\n            const fsRootNode = updateFileNode(state.fsRootNode, path, updatedFileNode);\n            return {...state, fsRootNode};\n        }\n        case actions.UPDATE_COLOR_MAPS: {\n            const colorMaps = action.payload.colorMaps;\n            return {...state, colorMaps};\n        }\n        case actions.UPDATE_DATA_STORES: {\n            const dataStores = action.payload.dataStores.slice();\n            return {...state, dataStores};\n        }\n        case actions.UPDATE_DATA_SOURCES: {\n            return updateDataStores(state, action, () => {\n                return action.payload.dataSources.slice();\n            });\n        }\n        case actions.UPDATE_DATA_SOURCE_META_INFO: {\n            return updateDataStores(state, action, dataStore => {\n                const newDataSources = [...dataStore.dataSources];\n                const {dataSourceId, metaInfo, metaInfoStatus} = action.payload;\n                const dataSourceIndex = newDataSources.findIndex(dataSource => dataSource.id === dataSourceId);\n                if (dataSourceIndex < 0) {\n                    throw Error('illegal data source ID: ' + dataSourceId);\n                }\n                const oldDataSource = newDataSources[dataSourceIndex];\n                let newDataSource = {\n                    ...oldDataSource,\n                    metaInfo,\n                    metaInfoStatus,\n                };\n                let capabilities = newDataSource.capabilities;\n                if (!capabilities && metaInfo && metaInfoStatus === 'ok') {\n                    capabilities = computeDataSourceCapabilities(newDataSource);\n                }\n                if (capabilities !== newDataSource.capabilities) {\n                    newDataSource = {...newDataSource, capabilities}\n                }\n                newDataSources[dataSourceIndex] = newDataSource;\n                return newDataSources;\n            });\n        }\n    }\n    return state;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// state.control reducers\n\nconst controlReducer = (state: ControlState = INITIAL_CONTROL_STATE, action: Action) => {\n    switch (action.type) {\n        case actions.RENAME_RESOURCE: {\n            const resName = action.payload.resName;\n            const newResName = action.payload.newResName;\n\n            // Rename resName in selectedWorkspaceResourceName\n            let selectedWorkspaceResourceName = state.selectedWorkspaceResourceName;\n            if (selectedWorkspaceResourceName === resName) {\n                selectedWorkspaceResourceName = newResName;\n            }\n\n            // Rename resName in views and their layers\n            const views = viewsReducer(state.views, action, state.activeViewId);\n\n            if (selectedWorkspaceResourceName !== state.selectedWorkspaceResourceName\n                || views !== state.views) {\n                return {...state, selectedWorkspaceResourceName, views};\n            }\n            return state;\n        }\n        case actions.UPDATE_ENTITY_STYLE: {\n            const views = viewsReducer(state.views, action, state.activeViewId);\n            if (views !== state.views) {\n                return {...state, views};\n            }\n            return state;\n        }\n        case actions.UPDATE_DATA_SOURCES: {\n            const dataSources = action.payload.dataSources;\n            const selectedDataSourceId = (dataSources && dataSources.length) ? dataSources[0].id : null;\n            return {...state, selectedDataSourceId};\n        }\n        case actions.UPDATE_OPERATIONS: {\n            const operations = action.payload.operations;\n            const selectedOperationName = (operations && operations.length) ? operations[0].name : null;\n            return {...state, selectedOperationName};\n        }\n        case actions.SET_SELECTED_VARIABLE: {\n            const selectedVariable = action.payload.selectedVariable;\n            const selectedVariableName = selectedVariable ? selectedVariable.name : null;\n            let views = state.views;\n            const newViews = viewsReducer(state.views, action, state.activeViewId);\n            if (newViews !== views) {\n                views = newViews;\n            }\n            return {...state, selectedVariableName, views};\n        }\n        case actions.UPDATE_CONTROL_STATE:\n            return {...state, ...action.payload};\n        case actions.ADD_PLACEMARK:\n            return {...state, newPlacemarkToolType: 'NoTool'};\n        case actions.ACTIVATE_NEW_PLACEMARK_TOOL: {\n            let newPlacemarkToolType = action.payload.newPlacemarkToolType;\n            if (newPlacemarkToolType === state.newPlacemarkToolType) {\n                newPlacemarkToolType = 'NoTool';\n            }\n            return {...state, newPlacemarkToolType};\n        }\n        case actions.UPDATE_DIALOG_STATE: {\n            const dialogs = updatePropertyObject(state.dialogs, action.payload.dialogId, action.payload.dialogState);\n            return {...state, dialogs};\n        }\n        case actions.ADD_WORLD_VIEW: {\n            const view = newWorldView(action.payload.baseMapId);\n            return addView(state, view, action.payload.placeAfterViewId);\n        }\n        case actions.SHOW_FIGURE_VIEW: {\n            const {resource, placeAfterViewId} = action.payload;\n            const figureView = state.views.find(v => v.type === 'figure' && resource.id === v.data.resourceId);\n            if (figureView) {\n                const viewLayout = selectView(state.viewLayout, figureView.id);\n                return {...state, viewLayout};\n            } else {\n                const view = newFigureView(resource);\n                return addView(state, view, placeAfterViewId);\n            }\n        }\n        case actions.SHOW_ANIMATION_VIEW: {\n            const {resource, placeAfterViewId} = action.payload;\n            const animationView = state.views.find(v => v.type === 'animation' && resource.id === v.data.resourceId);\n            if (animationView) {\n                const viewLayout = selectView(state.viewLayout, animationView.id);\n                return {...state, viewLayout};\n            } else {\n                const view = newAnimationView(resource);\n                return addView(state, view, placeAfterViewId);\n            }\n        }\n        case actions.SHOW_TABLE_VIEW: {\n            const {resName, varName, placeAfterViewId} = action.payload;\n            // TODO: use resource.id, not .name!!!\n            const tableView = state.views.find(v => v.type === 'table' && v.data.resName === resName && v.data.varName === varName);\n            if (tableView) {\n                const viewLayout = selectView(state.viewLayout, tableView.id);\n                return {...state, viewLayout};\n            } else {\n                const view = newTableView(resName, varName);\n                return addView(state, view, placeAfterViewId);\n            }\n        }\n        case actions.ADD_TABLE_VIEW: {\n            const {placeAfterViewId, resName, varName} = action.payload;\n            const view = newTableView(resName, varName);\n            return addView(state, view, placeAfterViewId);\n        }\n        case actions.SELECT_VIEW: {\n            const {viewPath, viewId} = action.payload;\n            const viewLayout = selectViewInLayout(state.viewLayout, viewPath, viewId);\n            return {...state, viewLayout, activeViewId: viewId};\n        }\n        case actions.MOVE_VIEW: {\n            const {sourceViewId, placement, targetViewId} = action.payload;\n            const viewLayout = moveView(state.viewLayout, sourceViewId, placement, targetViewId);\n            let activeViewId = state.activeViewId;\n            if (activeViewId) {\n                const containsActiveId = viewPanel => viewPanel.viewIds.indexOf(activeViewId) >= 0;\n                const activeViewPanel = findViewPanel(viewLayout, containsActiveId);\n                if (activeViewPanel && activeViewPanel.selectedViewId !== activeViewId) {\n                    activeViewId = activeViewPanel.selectedViewId;\n                }\n            }\n            return {...state, viewLayout, activeViewId};\n        }\n        case actions.CLOSE_VIEW: {\n            const viewPath = action.payload.viewPath;\n            const viewId = action.payload.viewId;\n            const views = removeViewFromViewArray(state.views, viewId);\n            const viewLayout = removeViewFromLayout(state.viewLayout, viewPath, viewId);\n            let activeViewId = state.activeViewId;\n            if (activeViewId === viewId) {\n                activeViewId = null;\n                let viewPanel = getViewPanel(viewLayout, viewPath);\n                if (viewPanel && viewPanel.selectedViewId) {\n                    activeViewId = viewPanel.selectedViewId;\n                } else {\n                    viewPanel = findViewPanel(viewLayout, viewPanel => !!viewPanel.selectedViewId);\n                    if (viewPanel) {\n                        activeViewId = viewPanel.selectedViewId;\n                    }\n                }\n            }\n            return {...state, viewLayout, views, activeViewId};\n        }\n        case actions.SPLIT_VIEW_PANEL: {\n            const viewPath = action.payload.viewPath;\n            const dir = action.payload.dir;\n            const pos = action.payload.pos;\n            const viewLayout = splitViewPanel(state.viewLayout, viewPath, dir, pos);\n            return {...state, viewLayout};\n        }\n        case actions.CHANGE_VIEW_SPLIT_POS: {\n            const viewPath = action.payload.viewPath;\n            const delta = action.payload.delta;\n            const viewLayout = changeViewSplitPos(state.viewLayout, viewPath, delta);\n            return {...state, viewLayout};\n        }\n        case actions.INC_ENTITY_UPDATE_COUNT: {\n            const entityUpdateCount = state.entityUpdateCount + 1;\n            return {...state, entityUpdateCount};\n        }\n        case actions.INVOKE_CTX_OPERATION: {\n            const {selectedCtxOperationName, inputAssignments} = action.payload;\n            let dialogState: any = state.dialogs[NEW_CTX_OPERATION_STEP_DIALOG_ID];\n            dialogState = {...dialogState, isOpen: true, inputAssignments};\n            return {\n                ...state,\n                selectedCtxOperationName,\n                dialogs: {...state.dialogs, [NEW_CTX_OPERATION_STEP_DIALOG_ID]: dialogState}\n            };\n        }\n        case actions.UPDATE_MOUSE_IDLE_STATE: {\n            return {...state, ...action.payload};\n        }\n        case actions.OPEN_MESSAGE_BOX: {\n            return {\n                ...state, messageBox: {...state.messageBox, ...action.payload, isOpen: true}\n            };\n        }\n        case actions.CLOSE_MESSAGE_BOX: {\n            return {\n                ...state, messageBox: {...state.messageBox, ...action.payload, isOpen: false}\n            };\n        }\n        case actions.OPEN_DIRECTORY_SELECT_DIALOG: {\n            return {\n                ...state, directorySelectDialog: {...state.directorySelectDialog, ...action.payload, isOpen: true}\n            };\n        }\n        case actions.CLOSE_DIRECTORY_SELECT_DIALOG: {\n            return {\n                ...state,\n                directorySelectDialog: {...state.directorySelectDialog, ...action.payload, isOpen: false}\n            };\n        }\n        case actions.OPEN_FILE_OPEN_DIALOG: {\n            return {\n                ...state, fileOpenDialog: {...state.fileOpenDialog, ...action.payload, isOpen: true}\n            };\n        }\n        case actions.CLOSE_FILE_OPEN_DIALOG: {\n            return {\n                ...state, fileOpenDialog: {...state.fileOpenDialog, ...action.payload, isOpen: false}\n            };\n        }\n        case actions.OPEN_FILE_SAVE_DIALOG: {\n            return {\n                ...state, fileSaveDialog: {...state.fileSaveDialog, ...action.payload, isOpen: true}\n            };\n        }\n        case actions.CLOSE_FILE_SAVE_DIALOG: {\n            return {\n                ...state, fileSaveDialog: {...state.fileSaveDialog, ...action.payload, isOpen: false}\n            };\n        }\n        case actions.OPEN_FILE_BROWSE_DIALOG: {\n            return {\n                ...state, fileBrowseDialog: {...state.fileBrowseDialog, ...action.payload, isOpen: true}\n            };\n        }\n        case actions.CLOSE_FILE_BROWSE_DIALOG: {\n            return {\n                ...state, fileBrowseDialog: {...state.fileBrowseDialog, ...action.payload, isOpen: false}\n            };\n        }\n        default: {\n            const newViews = viewsReducer(state.views, action, state.activeViewId);\n            if (newViews !== state.views) {\n                return {...state, views: newViews};\n            }\n        }\n    }\n\n    return state;\n};\n\n\nfunction addView(state: ControlState, view: ViewState<any>, placeAfterViewId: string | null) {\n    const newId = view.id;\n    const newViews = addViewToViewArray(state.views, view);\n    const oldViewLayout = state.viewLayout;\n    let newViewLayout;\n    if (placeAfterViewId) {\n        newViewLayout = addViewToPanel(oldViewLayout, placeAfterViewId, newId);\n    }\n    if (!newViewLayout || newViewLayout === oldViewLayout) {\n        // Could not be inserted, so use following call which will always succeed.\n        newViewLayout = addViewToLayout(oldViewLayout, newId);\n    }\n    return {...state, viewLayout: newViewLayout, views: newViews, activeViewId: newId};\n}\n\n\nconst viewsReducer = (state: ViewState<any>[], action: Action, activeViewId: string) => {\n    // delegate action to all children\n    let newViews = null;\n    for (let i = 0; i < state.length; i++) {\n        const oldView = state[i];\n        const newView = viewReducer(oldView, action, activeViewId);\n        if (oldView !== newView) {\n            if (!newViews) {\n                newViews = state.slice(0, i);\n            }\n        }\n        if (newViews && newView) {\n            newViews.push(newView);\n        }\n    }\n    return newViews || state;\n};\n\n\nconst viewReducer = (state: ViewState<any>, action: Action, activeViewId: string) => {\n    const isActiveView = state.id === activeViewId;\n    switch (action.type) {\n        case actions.RENAME_RESOURCE: {\n            if (state.type === 'world') {\n                const layers = layersReducer(state.data.layers, action, isActiveView);\n                if (layers !== state.data.layers) {\n                    return {...state, data: {...state.data, layers}};\n                }\n            } else if (state.type === 'figure') {\n                let title = getFigureViewTitle(action.payload.resName);\n                if (state.title === title) {\n                    title = getFigureViewTitle(action.payload.newResName);\n                    return {...state, title};\n                }\n            }\n            break;\n        }\n        case actions.UPDATE_ENTITY_STYLE: {\n            const viewId = action.payload.viewId;\n            if (state.id === viewId && state.type === 'world') {\n                const layers = layersReducer(state.data.layers, action, isActiveView);\n                if (layers !== state.data.layers) {\n                    return {...state, data: {...state.data, layers}};\n                }\n            }\n            break;\n        }\n        case actions.SET_SHOW_SELECTED_VARIABLE_LAYER: {\n            if (state.type === 'world') {\n                const layers = layersReducer(state.data.layers, action, isActiveView);\n                if (layers !== state.data.layers) {\n                    return {...state, data: {...state.data, layers}};\n                }\n            }\n            break;\n        }\n        // TODO (forman): clean up code duplication here, following actions are basically all the same\n        //                SET_SELECTED_ENTITY_ID,\n        //                SET_SELECTED_LAYER_ID,\n        //                SET_VIEW_MODE,\n        //                SET_PROJECTION_CODE,\n        //                SET_SPLIT_LAYER_ID,\n        //                SET_SPLIT_LAYER_POS\n        //\n        case actions.SET_SELECTED_LAYER_ID: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id && state.type === 'world') {\n                const selectedLayerId = action.payload.selectedLayerId;\n                return {...state, data: {...state.data, selectedLayerId}};\n            }\n            break;\n        }\n        case actions.SET_SELECTED_ENTITY_ID: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id && state.type === 'world') {\n                const selectedEntityId = action.payload.selectedEntityId;\n                return {...state, data: {...state.data, selectedEntityId}};\n            }\n            break;\n        }\n        case actions.SET_VIEW_MODE: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'world');\n                const viewMode = action.payload.viewMode;\n                return {...state, data: {...state.data, viewMode}};\n            }\n            break;\n        }\n        case actions.SET_LAYER_SPLIT_POSITION: {\n            const {viewId, layerSplitPosition} = action.payload;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'world');\n                return {...state, data: {...state.data, layerSplitPosition}};\n            }\n            break;\n        }\n        case actions.SET_BASE_MAP_ID: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'world');\n                const baseMapId = action.payload.baseMapId;\n                return {...state, data: {...state.data, baseMapId}};\n            }\n            break;\n        }\n        case actions.SET_PROJECTION_CODE: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'world');\n                const projectionCode = action.payload.projectionCode;\n                return {...state, data: {...state.data, projectionCode}};\n            }\n            break;\n        }\n        case actions.ADD_LAYER: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'world');\n                const layer = action.payload.layer;\n                const selectLayer = action.payload.selectLayer;\n                const selectedLayerId = selectLayer ? layer.id : state.data.selectedLayerId;\n                const layers = state.data.layers.concat([layer]);\n                return {...state, data: {...state.data, layers, selectedLayerId}};\n            }\n            break;\n        }\n        case actions.REMOVE_LAYER: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'world');\n                const layerId = action.payload.id;\n                const layers = state.data.layers.slice();\n                let selectedLayerId = state.data.selectedLayerId;\n                if (layerId === selectedLayerId) {\n                    selectedLayerId = null;\n                }\n                const layerIndex = layers.findIndex(l => l.id === layerId);\n                if (layerIndex >= 0) {\n                    layers.splice(layerIndex, 1);\n                    return {...state, data: {...state.data, layers, selectedLayerId}};\n                }\n            }\n            break;\n        }\n        case actions.MOVE_LAYER_UP: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'world');\n                const layerId = action.payload.id;\n                const layers = state.data.layers.slice();\n                const layerIndex = layers.findIndex(l => l.id === layerId);\n                assert.ok(layerIndex >= 0, 'layerIndex >= 0');\n                if (layerIndex > 0) {\n                    const temp = layers[layerIndex - 1];\n                    layers[layerIndex - 1] = layers[layerIndex];\n                    layers[layerIndex] = temp;\n                    return {...state, data: {...state.data, layers}};\n                }\n            }\n            break;\n        }\n        case actions.MOVE_LAYER_DOWN: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'world');\n                const layerId = action.payload.id;\n                const layers = state.data.layers.slice();\n                const layerIndex = layers.findIndex(l => l.id === layerId);\n                assert.ok(layerIndex >= 0, 'layerIndex >= 0');\n                if (layerIndex >= 0 && layerIndex < layers.length - 1) {\n                    const temp = layers[layerIndex + 1];\n                    layers[layerIndex + 1] = layers[layerIndex];\n                    layers[layerIndex] = temp;\n                    return {...state, data: {...state.data, layers}};\n                }\n            }\n            break;\n        }\n        case actions.UPDATE_LAYER: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'world');\n                const layer = action.payload.layer;\n                const layers = state.data.layers.slice();\n                const layerIndex = layers.findIndex(l => l.id === layer.id);\n                assert.ok(layerIndex >= 0, 'layerIndex >= 0');\n                // layers[layerIndex] = {...layers[layerIndex], ...layer};\n                layers[layerIndex] = updateObject(layers[layerIndex], layer);\n                return {...state, data: {...state.data, layers}};\n            }\n            break;\n        }\n        case actions.UPDATE_LAYER_STYLE: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'world');\n                const {layerId, style} = action.payload;\n                const layers = state.data.layers.slice();\n                const layerIndex = layers.findIndex(l => l.id === layerId);\n                assert.ok(layerIndex >= 0, 'layerIndex >= 0');\n                let layer = layers[layerIndex];\n                layers[layerIndex] = {...layer, style: {...layer.style, ...style}};\n                return {...state, data: {...state.data, layers}};\n            }\n            break;\n        }\n        case actions.UPDATE_TABLE_VIEW_DATA: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'table');\n                const data = {...state.data, ...action.payload};\n                return {...state, data};\n            }\n            break;\n        }\n        case actions.UPDATE_ANIMATION_VIEW_DATA: {\n            const viewId = action.payload.viewId;\n            if (viewId === state.id) {\n                assert.ok(state.type === 'animation');\n                const data = {...state.data, ...action.payload};\n                return {...state, data};\n            }\n            break;\n        }\n        default: {\n            if (state.type === 'world') {\n                const layers = layersReducer(state.data.layers, action, isActiveView);\n                if (layers !== state.data.layers) {\n                    return {...state, data: {...state.data, layers}};\n                }\n            }\n        }\n    }\n    return state;\n};\n\nconst layersReducer = (state: LayerState[], action: Action, isActiveView: boolean) => {\n    // delegate action to all children\n    let newLayers;\n    for (let i = 0; i < state.length; i++) {\n        const oldLayer = state[i];\n        const newLayer = layerReducer(oldLayer, action, isActiveView);\n        if (oldLayer !== newLayer) {\n            if (!newLayers) {\n                newLayers = state.slice(0, i);\n            }\n        }\n        if (newLayers && newLayer) {\n            newLayers.push(newLayer);\n        }\n    }\n    return newLayers || state;\n};\n\nconst layerReducer = (state: LayerState, action: Action, isActiveView: boolean) => {\n    switch (action.type) {\n        case actions.RENAME_RESOURCE: {\n            const resName = action.payload.resName;\n            const newResName = action.payload.newResName;\n            if ((state as any).resName === resName) {\n                return {...state, resName: newResName};\n            }\n            break;\n        }\n        case actions.UPDATE_ENTITY_STYLE: {\n            const {layerId, entityId, style} = action.payload;\n            if (state.id === layerId && isVectorLayer(state)) {\n                const vectorLayer = state as VectorLayerBase;\n                const entityStyles = vectorLayer.entityStyles;\n                const oldStyle = entityStyles && entityStyles[entityId];\n                const newStyle = {...oldStyle, ...style};\n                if (!deepEqual(oldStyle, newStyle)) {\n                    return {...state, entityStyles: {...entityStyles, [entityId]: newStyle}};\n                }\n            }\n            break;\n        }\n        case actions.SET_SHOW_SELECTED_VARIABLE_LAYER: {\n            if (state.id === AUTO_LAYER_ID) {\n                const showSelectedVariableLayer = action.payload.showSelectedVariableLayer;\n                return {...state, visible: showSelectedVariableLayer};\n            }\n            break;\n        }\n        case actions.SET_SELECTED_VARIABLE: {\n            if (state.id === AUTO_LAYER_ID && isActiveView) {\n                const resource = action.payload.resource;\n                const selectedVariable = action.payload.selectedVariable;\n                const savedLayers = action.payload.savedLayers;\n                return updateAutoLayer(state, resource, selectedVariable, savedLayers);\n            }\n            break;\n        }\n        case actions.SET_LAYER_SPLIT_MODE: {\n            const {layerId, splitMode} = action.payload;\n            if (state.id === layerId && isImageLayer(state)) {\n                return {...state, splitMode};\n            }\n            break;\n        }\n    }\n    return state;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// state.session reducers\n\nlet updatePlacemarkProperties = function (state: SessionState, placemarkId: any, properties: any) {\n    const features = state.placemarkCollection.features.slice();\n    const featureIndex = features.findIndex(f => f.id === placemarkId);\n    const oldFeature = featureIndex >= 0 && features[featureIndex];\n    assert.ok(oldFeature);\n    const oldProperties = oldFeature && oldFeature.properties;\n    const newProperties = {...oldProperties, ...properties};\n    const newFeature = {...oldFeature, properties: newProperties};\n    if (featureIndex >= 0) {\n        features[featureIndex] = newFeature;\n    } else {\n        features.push(newFeature);\n    }\n    const placemarkCollection = {...state.placemarkCollection, features};\n    return {...state, placemarkCollection};\n};\n\nlet updatePlacemarkGeometry = function (state: SessionState, placemarkId: any, geometry: any) {\n    const features = state.placemarkCollection.features.slice();\n    const featureIndex = features.findIndex(f => f.id === placemarkId);\n    const oldFeature = featureIndex >= 0 && features[featureIndex];\n    assert.ok(oldFeature);\n    const oldGeometry = oldFeature && oldFeature.geometry;\n    const newGeometry = {...oldGeometry, ...geometry};\n    const newFeature = {...oldFeature, geometry: newGeometry};\n    if (featureIndex >= 0) {\n        features[featureIndex] = newFeature;\n    } else {\n        features.push(newFeature);\n    }\n    const placemarkCollection = {...state.placemarkCollection, features};\n    return {...state, placemarkCollection};\n};\n\nconst sessionReducer = (state: SessionState = INITIAL_SESSION_STATE, action: Action): SessionState => {\n    switch (action.type) {\n        case actions.SET_SELECTED_ENTITY_ID: {\n            const selectedEntityId = action.payload.selectedEntityId || null;\n            let selectedPlacemarkId = null;\n            if (isString(selectedEntityId) && selectedEntityId.startsWith(PLACEMARK_ID_PREFIX)) {\n                selectedPlacemarkId = selectedEntityId;\n            }\n            if (selectedPlacemarkId !== state.selectedPlacemarkId) {\n                return {...state, selectedPlacemarkId};\n            }\n            break;\n        }\n        case actions.UPDATE_INITIAL_STATE:\n            return {...state, ...action.payload.session};\n        case actions.UPDATE_SESSION_STATE:\n            return {...state, ...action.payload};\n        case actions.SET_SHOW_SELECTED_VARIABLE_LAYER:\n            return {...state, ...action.payload};\n        case actions.SET_BASE_MAP_ID:\n            return {...state, lastBaseMapId: action.payload.baseMapId};\n        case actions.SAVE_LAYER: {\n            const {key, layer} = action.payload;\n            // const savedLayers = {...state.savedLayers, [key]: layer};\n            const savedLayers = updateObject(state.savedLayers, {[key]: layer});\n            return {...state, savedLayers};\n        }\n        case actions.ADD_PLACEMARK: {\n            let placemark = action.payload.placemark;\n            let features = state.placemarkCollection.features;\n            let properties = {...placemark.properties};\n            // Set initial title\n            const {title, index} = getPlacemarkTitleAndIndex(placemark, state.placemarkCollection);\n            if (title) {\n                properties = {...properties, title};\n                if (placemark.geometry.type === 'Point') {\n                    properties['marker-symbol'] = index.toString(16).slice(-1);\n                }\n                placemark = {...placemark, properties}\n            }\n            features = features.concat([placemark]);\n            const placemarkCollection = {...state.placemarkCollection, features};\n            return {...state, placemarkCollection, selectedPlacemarkId: placemark.id};\n        }\n        case actions.REMOVE_PLACEMARK: {\n            const placemarkId = action.payload.placemarkId;\n            let features = state.placemarkCollection.features;\n            const removedFeatureIndex = features.findIndex(f => f.id === placemarkId);\n            if (removedFeatureIndex >= 0) {\n                features = features.slice();\n                features.splice(removedFeatureIndex, 1);\n                let selectedPlacemarkId = null;\n                if (removedFeatureIndex < features.length) {\n                    selectedPlacemarkId = features[removedFeatureIndex].id;\n                } else if (features.length > 0) {\n                    selectedPlacemarkId = features[features.length - 1].id;\n                }\n                const placemarkCollection = {...state.placemarkCollection, features};\n                return {...state, placemarkCollection, selectedPlacemarkId};\n            }\n            break;\n        }\n        case actions.UPDATE_PLACEMARK_GEOMETRY: {\n            const {placemarkId, geometry} = action.payload;\n            return updatePlacemarkGeometry(state, placemarkId, geometry);\n        }\n        case actions.UPDATE_PLACEMARK_PROPERTIES: {\n            const {placemarkId, properties} = action.payload;\n            return updatePlacemarkProperties(state, placemarkId, properties);\n        }\n        case actions.UPDATE_PLACEMARK_STYLE: {\n            const {placemarkId, style} = action.payload;\n            const properties = featurePropertiesFromSimpleStyle(style);\n            const defaultPlacemarkStyle = {...state.defaultPlacemarkStyle, ...style};\n            return {...updatePlacemarkProperties(state, placemarkId, properties), defaultPlacemarkStyle};\n        }\n        case OBTAIN_COOKIE_CONSENT: {\n            const {trackingConsentObtained} = action.payload;\n            storeCookieConsent(trackingConsentObtained)\n            return {...state, cookieConsentObtained: true, trackingConsentObtained};\n        }\n    }\n    return state;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// state.communication reducers\n\nconst communicationReducer = (state: CommunicationState = INITIAL_COMMUNICATION_STATE, action: Action) => {\n    switch (action.type) {\n        case actions.SET_WEBAPI_SERVICE_URL: {\n            const webAPIServiceURL = action.payload.webAPIServiceURL;\n            return {...state, webAPIServiceURL};\n        }\n        case actions.SET_WEBAPI_STATUS: {\n            const webAPIStatus = action.payload.webAPIStatus;\n            return {...state, webAPIStatus};\n        }\n        case actions.SET_WEBAPI_CLIENT: {\n            const webAPIClient = action.payload.webAPIClient;\n            return {...state, webAPIClient, webAPIStatus: 'open'};\n        }\n        case actions.SET_WEBAPI_SERVICE_INFO: {\n            const webAPIServiceInfo = action.payload.webAPIServiceInfo;\n            return {\n                ...state,\n                webAPIServiceInfo: {\n                    ...state.webAPIServiceInfo,\n                    ...webAPIServiceInfo\n                }\n            };\n        }\n        case actions.SET_WEBAPI_AUTO_STOP_INFO: {\n            const autoStopInfo = action.payload.webAPIAutoStopInfo;\n            return {\n                ...state,\n                webAPIServiceInfo: {\n                    ...state.webAPIServiceInfo,\n                    autoStopInfo\n                }\n            };\n        }\n        case actions.UPDATE_HUB_STATUS: {\n            return {\n                ...state,\n                hubStatus: action.payload\n            }\n        }\n        case actions.UPDATE_TASK_STATE:\n            return {\n                ...state,\n                tasks: updatePropertyObject(state.tasks, action.payload.jobId, action.payload.taskState)\n            };\n        case actions.REMOVE_TASK_STATE: {\n            const tasks = {...state.tasks};\n            delete tasks[action.payload.jobId];\n            return {...state, tasks};\n        }\n    }\n    return state;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// state.location reducers\n\n//noinspection JSUnusedLocalSymbols\nconst locationReducer = (state: LocationState = INITIAL_LOCATION_STATE, action: Action) => {\n    if (action.type === actions.SET_GLOBE_MOUSE_POSITION) {\n        const globeMousePosition = action.payload.position;\n        if (state.globeMousePosition !== globeMousePosition) {\n            return {...state, globeMousePosition};\n        }\n    } else if (action.type === actions.SET_GLOBE_VIEW_POSITION) {\n        const globeViewPosition = action.payload.position;\n        const positionData = action.payload.positionData;\n        if (state.globeViewPosition !== globeViewPosition || state.positionData !== positionData) {\n            return {...state, globeViewPosition, positionData};\n        }\n    }\n    return state;\n};\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Combined State reducer\n\nexport const stateReducer = combineReducers<State>({\n                                                       data: dataReducer as Reducer<DataState>,\n                                                       control: controlReducer as Reducer<ControlState>,\n                                                       session: sessionReducer as Reducer<SessionState>,\n                                                       communication: communicationReducer as Reducer<CommunicationState>,\n                                                       location: locationReducer as Reducer<LocationState>,\n                                                   });\n\n\n\n\n\n","import * as React from 'react';\r\nimport { Button, Checkbox, Classes, Collapse, Drawer, Intent, Position } from '@blueprintjs/core';\r\nimport { connect, Dispatch } from 'react-redux';\r\nimport { State } from '../state';\r\nimport { obtainCookieConsent } from '../actions';\r\n\r\n\r\ninterface IDispatch {\r\n    dispatch: Dispatch<State>;\r\n}\r\n\r\ninterface IGdprBannerProps {\r\n    cookieConsentObtained: boolean;\r\n    trackingConsentObtained: boolean;\r\n}\r\n\r\n// noinspection JSUnusedLocalSymbols\r\nfunction mapStateToProps(state: State): IGdprBannerProps {\r\n    return {\r\n        cookieConsentObtained: state.session.cookieConsentObtained,\r\n        trackingConsentObtained: state.session.trackingConsentObtained,\r\n    };\r\n}\r\n\r\nconst GdprBanner: React.FC<IGdprBannerProps & IDispatch> = (\r\n    {\r\n        cookieConsentObtained,\r\n        trackingConsentObtained,\r\n        dispatch,\r\n    }\r\n) => {\r\n    const [customizeMode, setCustomizeMode] = React.useState(false);\r\n    const [trackingAllowed, setTrackingAllowed] = React.useState(trackingConsentObtained);\r\n\r\n    if (cookieConsentObtained) {\r\n        return null;\r\n    }\r\n\r\n    const handleConsent = () => {\r\n        dispatch(obtainCookieConsent(customizeMode ? trackingAllowed : true));\r\n    };\r\n\r\n    const handleTrackingAllowed = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setTrackingAllowed(e.currentTarget.checked);\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            title=\"Data Protection Notice\"\r\n            icon=\"info-sign\"\r\n            position={Position.BOTTOM}\r\n            isOpen={true}\r\n            isCloseButtonShown={false}\r\n            canOutsideClickClose={false}\r\n            canEscapeKeyClose={false}\r\n            size={240}\r\n        >\r\n            <div className={Classes.DRAWER_BODY}>\r\n                <div className={Classes.DIALOG_BODY}>\r\n                    We use cookies so you can optimally use this website.\r\n                    Some cookies that are necessary for the operation of Cate App.\r\n                    In addition, we use cookies for statistical purposes.\r\n                    You can adjust the data protection settings or agree to all cookies\r\n                    directly. <a href='https://climate.esa.int/en/privacy/'>Privacy Statement</a>\r\n                </div>\r\n\r\n                <div className={Classes.DIALOG_FOOTER}>\r\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                        <Button\r\n                            intent={Intent.PRIMARY}\r\n                            onClick={handleConsent}\r\n                        >\r\n                            {customizeMode ? \"I agree to selected Cookies\" : \"I agree to all Cookies\"}\r\n                        </Button>\r\n                        <Button\r\n                            rightIcon={customizeMode ? 'caret-up' : 'caret-down'}\r\n                            onClick={() => setCustomizeMode(!customizeMode)}\r\n                        >\r\n                            Settings\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <Collapse isOpen={customizeMode}>\r\n                    <div className={Classes.DIALOG_BODY}>\r\n                        <Checkbox\r\n                            checked={true}\r\n                        >\r\n                            <strong>Functional</strong>: Cate does not work without functional cookies.\r\n                            We'll just save your consent with this notice and possibly auto-login information\r\n                            if you use the Cate cloud services.\r\n                        </Checkbox>\r\n                        <Checkbox\r\n                            checked={trackingAllowed}\r\n                            onChange={handleTrackingAllowed}\r\n                        >\r\n                            <strong>Tracking</strong>: Cate uses the open source software\r\n                            tool <a href=\"https://matomo.org/\">Matomo</a>, which uses cookies.\r\n                            With these cookies we count Cate App visits - of course anonymously.\r\n                            Matomo fully complies to the EU General Data Protection Regulation (GDPR).\r\n                        </Checkbox>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps)(GdprBanner);\r\n","import * as React from 'react';\r\nimport { connect, Dispatch } from 'react-redux';\r\nimport { Menu, MenuDivider, MenuItem } from '@blueprintjs/core';\r\nimport {\r\n    closeWorkspaceInteractive,\r\n    deleteWorkspaceInteractive,\r\n    newWorkspaceInteractive,\r\n    openWorkspaceInteractive,\r\n    saveWorkspaceAsInteractive,\r\n    saveWorkspaceInteractive\r\n} from '../actions';\r\nimport { State } from '../state';\r\n\r\ninterface IDispatch {\r\n    dispatch: Dispatch<State>;\r\n}\r\n\r\ninterface IWorkspacesMenuProps {\r\n}\r\n\r\n// noinspection JSUnusedLocalSymbols\r\nfunction mapStateToProps(state: State): IWorkspacesMenuProps {\r\n    return {};\r\n}\r\n\r\nconst _WorkspacesMenu: React.FC<IWorkspacesMenuProps & IDispatch> = (props) => {\r\n\r\n    const handleNew = () => {\r\n        props.dispatch(newWorkspaceInteractive());\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        props.dispatch(openWorkspaceInteractive() as any);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.dispatch(closeWorkspaceInteractive() as any);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        props.dispatch(saveWorkspaceInteractive() as any);\r\n    };\r\n\r\n    const handleSaveAs = () => {\r\n        props.dispatch(saveWorkspaceAsInteractive());\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        props.dispatch(deleteWorkspaceInteractive() as any);\r\n    };\r\n\r\n    return (\r\n        <Menu>\r\n            <MenuItem\r\n                text=\"New Workspace\"\r\n                icon=\"folder-new\"\r\n                onClick={handleNew}\r\n            />\r\n            <MenuItem\r\n                text=\"Open Workspace\"\r\n                icon=\"folder-shared-open\"\r\n                onClick={handleOpen}\r\n            />\r\n            <MenuItem\r\n                text=\"Close Workspace\"\r\n                icon=\"folder-close\"\r\n                onClick={handleClose}\r\n            />\r\n            <MenuDivider/>\r\n            <MenuItem\r\n                text=\"Save Workspace\"\r\n                icon=\"add-to-folder\"\r\n                onClick={handleSave}\r\n            />\r\n            <MenuItem\r\n                text=\"Save Workspace As...\"\r\n                onClick={handleSaveAs}\r\n            />\r\n            <MenuDivider/>\r\n            <MenuItem\r\n                text=\"Delete Workspace\"\r\n                icon=\"trash\"\r\n                onClick={handleDelete}\r\n            />\r\n        </Menu>\r\n    );\r\n};\r\n\r\nconst WorkspacesMenu = connect(mapStateToProps)(_WorkspacesMenu);\r\nexport default WorkspacesMenu;","import { Menu, MenuItem } from '@blueprintjs/core';\r\nimport * as React from 'react';\r\nimport { connect, Dispatch } from \"react-redux\";\r\n\r\nimport { State } from '../state';\r\n\r\ninterface IDispatch {\r\n    dispatch: Dispatch<State>;\r\n}\r\n\r\ninterface IHelpMenuProps {\r\n}\r\n\r\n// noinspection JSUnusedLocalSymbols\r\nfunction mapStateToProps(state: State): IHelpMenuProps {\r\n    return {};\r\n}\r\n\r\nconst _HelpMenu: React.FC<IHelpMenuProps & IDispatch> = () => {\r\n\r\n    const openUrl = (url: string) => {\r\n        window.open(url, '_blank');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Menu>\r\n                <MenuItem\r\n                    text=\"Cate Documentation\"\r\n                    onClick={() => openUrl(\"http://cate.readthedocs.io\")}\r\n                />\r\n                <MenuItem\r\n                    text=\"Cate Website\"\r\n                    onClick={() => openUrl(\"https://climate.esa.int/en/explore/analyse-climate-data\")}\r\n                />\r\n                <MenuItem\r\n                    text=\"Cate on GitHub\"\r\n                    onClick={() => openUrl(\"https://github.com/CCI-Tools/cate\")}\r\n                />\r\n                <MenuItem\r\n                    text=\"ESA Climate Office Helpdesk\"\r\n                    onClick={() => openUrl(\"https://climate.esa.int/en/helpdesk\")}\r\n                />\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst HelpMenu = connect(mapStateToProps)(_HelpMenu)\r\nexport default HelpMenu\r\n","import * as React from 'react';\nimport { connect, Dispatch } from 'react-redux';\nimport {\n    Button,\n    Navbar,\n    NavbarDivider,\n    NavbarGroup,\n    Popover,\n    PopoverPosition,\n} from '@blueprintjs/core';\n\nimport * as actions from '../actions';\nimport { State } from '../state';\nimport cateIcon from '../resources/cate-icon-128.png';\nimport WorkspacesMenu from './WorkspacesMenu';\n// import FilesMenu from './FilesMenu';\nimport HelpMenu from './HelpMenu';\n\n\nconst TITLE_STYLE = {marginLeft: 10};\n\ninterface IDispatch {\n    dispatch: Dispatch<State>;\n}\n\ninterface IAppBarProps {\n}\n\n// noinspection JSUnusedLocalSymbols\nfunction mapStateToProps(state: State): IAppBarProps {\n    return {\n    };\n}\n\n\nconst _AppBar: React.FC<IAppBarProps & IDispatch> = (\n    {\n        dispatch,\n    }\n) => {\n\n    const handleOpenInBrowser = () => {\n        window.open(window.location.href, \"_blank\");\n    };\n\n    const handleShutdownServer = () => {\n        dispatch(actions.showShutdownDialog());\n    };\n\n    const handlePreferencesClick = () => {\n        dispatch(actions.showPreferencesDialog());\n    };\n\n    return (\n        <Navbar>\n            <NavbarGroup>\n                <img src={cateIcon} width={32} height={32} alt={'Cate icon'}/>\n                <h2 style={TITLE_STYLE}>Cate - ESA CCI Toolbox</h2>\n            </NavbarGroup>\n            <NavbarGroup align=\"right\">\n                <Popover content={<WorkspacesMenu/>} position={PopoverPosition.BOTTOM}>\n                    <Button className=\"bp3-minimal\" rightIcon={'caret-down'}>Workspaces</Button>\n                </Popover>\n                {/*<Popover content={<FilesMenu/>} position={PopoverPosition.BOTTOM}>*/}\n                {/*    <Button className=\"bp3-minimal\" rightIcon={'caret-down'}>Files</Button>*/}\n                {/*</Popover>*/}\n                <Popover content={<HelpMenu/>} position={PopoverPosition.BOTTOM}>\n                    <Button className=\"bp3-minimal\" rightIcon={'caret-down'}>Help</Button>\n                </Popover>\n                <NavbarDivider/>\n                {isRunningInIFrame() &&\n                    <Button\n                        className=\"bp3-minimal\"\n                        icon='share'\n                        onClick={handleOpenInBrowser}\n                    />\n                }\n                <Button\n                    className=\"bp3-minimal\"\n                    icon='offline'\n                    onClick={handleShutdownServer}\n                />\n                <Button\n                    className=\"bp3-minimal\"\n                    icon='cog'\n                    onClick={handlePreferencesClick}\n                />\n            </NavbarGroup>\n        </Navbar>\n    );\n}\n\nconst AppBar = connect(mapStateToProps)(_AppBar);\nexport default AppBar;\n\n\n// https://stackoverflow.com/questions/326069/how-to-identify-if-a-webpage-is-being-loaded-inside-an-iframe-or-directly-into-t\nfunction isRunningInIFrame(): boolean {\n    try {\n        return window.self !== window.top;\n    } catch (e) {\n        return true;\n    }\n}\n","import * as React from 'react';\r\nimport { Icon, Intent, NonIdealState, Spinner } from '@blueprintjs/core';\r\nimport { IconName } from '@blueprintjs/icons';\r\n\r\nexport const ICON_CIRCLE: IconName = 'circle';\r\nexport const ICON_DISABLE: IconName = 'disable';\r\n\r\nexport const CONFIG_ERROR_MESSAGE = (\r\n    <span>This is very likely a configuration error.</span>\r\n);\r\n\r\nexport const NO_WORKSPACE = (\r\n    <NonIdealState\r\n        title=\"No workspace\"\r\n        description={<span>Try <strong>File / New</strong> or <strong>File / Open</strong> from the main menu.</span>}\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_WORKSPACE_RESOURCES = (\r\n    <NonIdealState\r\n        title=\"No workspace resources\"\r\n        icon=\"database\"\r\n        description={<span>Open a dataset in DATA SOURCES panel or add a <code>read_</code> operation step from the OPERATIONS panel.</span>}\r\n    />\r\n);\r\n\r\nexport const NO_WORKFLOW_STEPS = (\r\n    <NonIdealState\r\n        title=\"No workflow steps\"\r\n        icon=\"flows\"\r\n        description={<span>Open a dataset in DATA SOURCES panel or add a <code>read_</code> operation step from the OPERATIONS panel.</span>}\r\n    />\r\n);\r\n\r\nexport const NO_DATA_STORES_FOUND = (\r\n    <NonIdealState\r\n        title=\"No data stores found\"\r\n        icon=\"offline\"\r\n        description={CONFIG_ERROR_MESSAGE}/>\r\n);\r\n\r\nexport const NO_LOCAL_DATA_SOURCES = (\r\n    <NonIdealState\r\n        title=\"No data sources\"\r\n        icon={ICON_CIRCLE}\r\n        description={<span>You can add a new data source using the \"+\" button below.</span>}/>\r\n);\r\n\r\nexport const DATA_SOURCES_LOADING = (\r\n    <NonIdealState\r\n        title=\"Loading data sources...\"\r\n        icon={<div style={{marginTop: 14}}><Spinner intent={Intent.PRIMARY}/></div>}\r\n        description={\r\n            <div className=\"bp3-text-small bp3-text-muted\">\r\n                Note: If loading seems to take forever,\r\n                try switching to another data store in between,\r\n                then come back to the desired one.\r\n            </div>\r\n        }/>\r\n);\r\n\r\nexport const NO_DATA_SOURCES_FOUND = (\r\n    <NonIdealState\r\n        title=\"No data sources found\"\r\n        icon={ICON_CIRCLE}\r\n        description={CONFIG_ERROR_MESSAGE}/>\r\n);\r\n\r\nexport const NO_OPERATIONS_FOUND = (\r\n    <NonIdealState\r\n        title=\"No operations found\"\r\n        description={CONFIG_ERROR_MESSAGE}\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_VARIABLES = (\r\n    <NonIdealState\r\n        title=\"No variables\"\r\n        icon={ICON_CIRCLE}\r\n        description={`Select a resource in the WORKSPACE panel first.`}/>\r\n);\r\n\r\nexport const NO_VARIABLES_EMPTY_RESOURCE = (resourceName) => (\r\n    <NonIdealState\r\n        title=\"No variables\"\r\n        icon={ICON_CIRCLE}\r\n        description={`Selected resource \"${resourceName}\" doesn't contain any variables.`}/>\r\n);\r\n\r\nexport const NO_ACTIVE_VIEW = (\r\n    <NonIdealState\r\n        title=\"No active view\"\r\n        description=\"Add a new view first.\"\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_WEB_GL = (\r\n    <NonIdealState\r\n        title=\"Can't open world view\"\r\n        description=\"Cate's world view component requires WebGL, which doesn't seem to be supported by your environment. This is likely on virtualized HW with low graphics capabilities. Sorry!\"\r\n        icon={ICON_DISABLE}/>\r\n);\r\n\r\nexport const NO_PLACES = (\r\n    <NonIdealState\r\n        title=\"No places\"\r\n        description={<span>Press the tool buttons below to add a new place.</span>}\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_PLACE_SELECTED = (\r\n    <NonIdealState\r\n        title=\"No place selected\"\r\n        description=\"Select a place to show and edit its details.\"\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_LAYERS_NO_VIEW = (\r\n    <NonIdealState\r\n        title=\"No layers\"\r\n        description=\"To show layers, activate a world view\"\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_LAYERS_EMPTY_VIEW = (\r\n    <NonIdealState\r\n        title=\"No layers\"\r\n        description={<span>Press the <Icon icon=\"add\"/> button to add a layer.</span>}\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_LAYER_SELECTED = (\r\n    <NonIdealState\r\n        title=\"No layer selected\"\r\n        description=\"Select a layer to browse and edit its details.\"\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_LAYER_FOR_STYLE = (\r\n    <NonIdealState\r\n        title=\"Styles unavailable\"\r\n        description=\"Select a layer in the LAYERS panel to modify its style.\"\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_ENTITY_FOR_STYLE = (\r\n    <NonIdealState\r\n        title=\"Styles unavailable\"\r\n        description=\"Select an entity in the World View to modify its style.\"\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_CHARTS = (\r\n    <NonIdealState\r\n        title=\"No charts\"\r\n        description={<span>Press the <Icon icon=\"add\"/> button to add a new chart.</span>}\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const NO_TABLE_DATA = (\r\n    <NonIdealState\r\n        title=\"No table data\"\r\n        description={<span>The resource seems to be empty or an error occurred.</span>}\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n\r\nexport const LOADING_TABLE_DATA_FAILED = (error: any) => (\r\n    <NonIdealState\r\n        title=\"Loading table data failed\"\r\n        description={<span>{`${error}`}</span>}\r\n        icon={ICON_CIRCLE}/>\r\n);\r\n","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport * as assert from '../../common/assert';\r\nimport { shallowEqual } from '../../common/shallow-equal';\r\n\r\nexport interface IExternalObjectComponentProps<E, ES> {\r\n    id: string;\r\n    externalObjectStore?: ExternalObjectStore<E, ES>;\r\n    style?: CSSProperties;\r\n    className?: string;\r\n    debug?: boolean;\r\n}\r\n\r\nexport interface ExternalObjectRef<E, ES> {\r\n    /**\r\n     * The reference to the external object.\r\n     */\r\n    object: E;\r\n\r\n    /**\r\n     * The current state of the external object.\r\n     */\r\n    state?: ES;\r\n\r\n    /**\r\n     * The HTML element that contains the external object.\r\n     */\r\n    container: HTMLElement;\r\n}\r\n\r\nexport type ExternalObjectStore<E, S> = { [id: string]: ExternalObjectRef<E, S> };\r\n\r\n/**\r\n * A React component that lets the *container* DOM element of a \"external object\" hook into the\r\n * real DOM created by React once this component is mounted. When we say external object, we refer to the fact that\r\n * such objects are kept in an in-memory store to let them survive unmounting from the real DOM through React.\r\n * The *container* DOM element of a external object is the root of a DOM tree that shall not be controlled by React\r\n * directly.\r\n *\r\n * Furthermore:\r\n *\r\n *   - The child elements of the *container* (often a \"canvas\" element) are usually controlled by a dedicated\r\n *     JavaScript API provided by a 3rd party library.\r\n *   - The *container* is associated with a complex JavaScript state which is manipulated by that JavaScript API.\r\n *   - Both the displayed content in the DOM child elements and associated JavaScript state are expensive to regenerate\r\n *     from the virtual DOM when implemented as a pure React component.\r\n *\r\n * Examples for native components are the *Cesium.Viewer* of the CesiumJS library or the *ol.Map* object of the\r\n * OpenLayers 3 library.\r\n *\r\n * Note that this is different from React's notion of an \"uncontrolled component\", where form data is handled\r\n * by the DOM itself. While this is also true for a PermanentComponent, we still consider the React component's\r\n * props to be the single source of truth. Therefore changes in this component's props must be reflected in\r\n * the \"external object\" so that it stays in snc with the current props.\r\n *\r\n * When the parent container of a PermanentComponent is mounted, the following steps are performed\r\n *   1. lookup the external object from the store using this component's *id* property;\r\n *   2. if such external object cannot be found, we will create the external object by calling\r\n *      *createPermanentObject()* and put the external object into this component's *store* using this component's *id*\r\n *      property so it will survive unmounting;\r\n *   3. append the *container* element of the external object to the \"div\" element controlled by this PermanentComponent;\r\n *   4. call *externalObjectMounted()*;\r\n *   5. get the previous props using the *id*;\r\n *   6. call *updatePermanentObject()* with the previous and current props so a delta can be computed and applied to\r\n *      the external component.\r\n *\r\n * When a PermanentComponent is unmounted, the following steps are performed:\r\n *   1. lookup the external object from the store using this component's *id* property;\r\n *   2. remove the external object's *container* element from the \"div\" element controlled by this PermanentComponent;\r\n *   3. it will call \"externalObjectUnmounted\".\r\n *\r\n * Note that the external object is removed from the store only if the \"dispose()\" method is called.\r\n *\r\n * @author Norman Fomferra\r\n * @version 0.5\r\n */\r\nexport abstract class ExternalObjectComponent<E, ES, P extends IExternalObjectComponentProps<E, ES>, S>\r\n    extends React.PureComponent<P, S> {\r\n    private static readonly DEFAULT_EXTERNAL_OBJECT_STORE: Object = {};\r\n\r\n    private parentContainer: HTMLElement | null;\r\n\r\n    constructor(props: P) {\r\n        super(props);\r\n        ExternalObjectComponent.checkProps(props);\r\n        this.parentContainer = null;\r\n        this.onRef = this.onRef.bind(this);\r\n    }\r\n\r\n    private static checkProps(props: any) {\r\n        if (!props.id) {\r\n            throw new Error('cannot construct ExternalObjectComponent without id');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the external object reference.\r\n     *\r\n     * Think twice, before using this method.\r\n     * The single source of truth should be your app's state.\r\n     *\r\n     * @returns the external object reference or null.\r\n     */\r\n    getExternalObjectRef(): ExternalObjectRef<E, ES> | null {\r\n        return this.externalObjectStore[this.props.id] || null;\r\n    }\r\n\r\n    // TODO (forman): we can probably simplify ExternalObjectComponent by getting rid of the intermediate container\r\n    //                created by newContainer(id), if we add the following methods to be overidden by clients,\r\n    //                in case this is needed. The default impls would do nothing:\r\n    //                     attachExternalObject(parentContainer, object)\r\n    //                     detachExternalObject(parentContainer, object)\r\n\r\n    /**\r\n     * Create a new container for the external object.\r\n     *\r\n     * @param id The id.\r\n     */\r\n    abstract newContainer(id: string): HTMLElement;\r\n\r\n    /**\r\n     * Create a new external object.\r\n     *\r\n     * @param parentContainer The parent container HTML element which either holds *container* or the *object*.\r\n     * @param container The HTML element created by *newContainer()*, if any.\r\n     */\r\n    abstract newExternalObject(parentContainer: HTMLElement, container: HTMLElement): E;\r\n\r\n    /**\r\n     * Called when the props of this component change and the delta between the external component's\r\n     * state (given by *prevState*) and this components props (given by *nextState*) must be reflected in\r\n     * the external object state.\r\n     *\r\n     * Clients must implement this method by computing the delta between *prevState* and *nextState* and update their\r\n     * external object accordingly.\r\n     *\r\n     * @param object The external object.\r\n     * @param prevState The previous state, may be null or undefined.\r\n     * @param nextState The next state, never null, always defined.\r\n     * @param parentContainer The parent container HTML element which either holds *container* or the *object*.\r\n     * @param container The HTML element created by *newContainer()*, if any.\r\n     */\r\n    abstract updateExternalObject(object: E, prevState: ES, nextState: ES,\r\n                                  parentContainer: HTMLElement, container: HTMLElement): void;\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    /**\r\n     * Extract the state of the external object encoded in the given props.\r\n     * The default implementation simply returns a shallow copy of the previous state\r\n     * overwritten by the given props.\r\n     *\r\n     * @param props The props which take precedence over the previous state.\r\n     * @param prevState The previous state.\r\n     * @returns {{}} State of the external object extracted from props.\r\n     */\r\n    propsToExternalObjectState(props: Readonly<P>, prevState?: Readonly<ES>): ES {\r\n        return {...prevState as any, ...props as any};\r\n    }\r\n\r\n    /**\r\n     * Called if the *externalObject* has been mounted and is now a child of the *parentContainer*.\r\n     *\r\n     * @param object The external object.\r\n     * @param props The props for the external object to be mounted.\r\n     * @param parentContainer The parent container HTML element which either holds *container* or the *object*.\r\n     * @param container The HTML element created by *newContainer()*, if any.\r\n     */\r\n    externalObjectMounted(object: E, props: Readonly<P>, parentContainer: HTMLElement, container: HTMLElement): void {\r\n    }\r\n\r\n    /**\r\n     * Called if the *externalObject* has been unmounted and is no longer a child of *parentContainer*.\r\n     *\r\n     * @param object The external object.\r\n     * @param props The props for the external object to be unmounted.\r\n     * @param parentContainer The parent container HTML element which either holds *container* or the *object*.\r\n     * @param container The HTML element created by *newContainer()*, if any.\r\n     */\r\n    externalObjectUnmounted(object: E, props: Readonly<P>, parentContainer: HTMLElement, container: HTMLElement): void {\r\n    }\r\n\r\n\r\n    // TODO (forman): optimize me: don't override componentWillUpdate(), instead override...\r\n    // - componentWillReceiveProps() to do what componentWillUpdate() currently does AND set whether render() does need to be called\r\n    // - shouldComponentUpdate() to return whether render() need to be called\r\n    /**\r\n     * Invoked by React immediately before rendering when new props or state are being received.\r\n     * This method is not called for the initial render.\r\n     *\r\n     * We use this as an opportunity to synchronize the external object's state with the next props being received.\r\n     *\r\n     * @param nextProps the next props\r\n     */\r\n    componentWillUpdate(nextProps: Readonly<P & ES>) {\r\n        if (this.props.debug) {\r\n            console.log('ExternalObjectComponent.componentWillUpdate nextProps.id =', nextProps.id);\r\n        }\r\n        ExternalObjectComponent.checkProps(nextProps);\r\n        if (this.props.id === nextProps.id) {\r\n            this.updateExternalComponentAndSaveProps(nextProps);\r\n        } else if (this.parentContainer) {\r\n            this.remountExternalObject(this.parentContainer, nextProps);\r\n        }\r\n    }\r\n\r\n    private onRef(parentContainer: HTMLElement | null) {\r\n        if (this.props.debug) {\r\n            console.log('ExternalObjectComponent.onRef: this.props =', this.props);\r\n        }\r\n        this.remountExternalObject(parentContainer, this.props as Readonly<P & ES>);\r\n    }\r\n\r\n    /**\r\n     * Renders a \"div\" element which serves as the parent container for this component's external object.\r\n     * The \"div\" element will have the \"id\" attribute set to this.props.id.\r\n     *\r\n     * @returns {JSX.Element}\r\n     */\r\n    render(): JSX.Element {\r\n        return (\r\n            <div id={this.props.id}\r\n                 className={this.props.className}\r\n                 style={this.props.style}\r\n                 ref={this.onRef}\r\n            >\r\n                {this.renderChildren()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    protected renderChildren() {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Removes the current external object from cache and creates a new one with the current props.\r\n     * Clients may call this method to force a regeneration of their external component.\r\n     */\r\n    forceRegeneration() {\r\n        let externalObjectStore = this.externalObjectStore;\r\n        let externalObjectRef = externalObjectStore[this.props.id];\r\n        if (externalObjectRef) {\r\n            delete externalObjectStore[this.props.id];\r\n            if (this.parentContainer && externalObjectRef.container) {\r\n                this.parentContainer.removeChild(externalObjectRef.container);\r\n            }\r\n            this.remountExternalObject(this.parentContainer, this.props as Readonly<P & ES>);\r\n        }\r\n    }\r\n\r\n    protected remountExternalObject(parentContainer: HTMLElement | null, props: Readonly<P & ES>) {\r\n        if (props.debug) {\r\n            console.log('ExternalObjectComponent.remountExternalObject: props.id =', props.id);\r\n        }\r\n        if (parentContainer) {\r\n            if (parentContainer.id !== props.id) {\r\n                this.unmountExternalObject(parentContainer, this.props as Readonly<P & ES>);\r\n            }\r\n            if (props.id in this.externalObjectStore) {\r\n                this.mountExistingExternalObject(parentContainer, props);\r\n            } else {\r\n                this.mountNewExternalObject(parentContainer, props);\r\n            }\r\n        } else if (this.parentContainer) {\r\n            this.unmountExternalObject(this.parentContainer, props);\r\n        }\r\n    }\r\n\r\n    private mountNewExternalObject(parentContainer: HTMLElement, props: Readonly<P & ES>) {\r\n        if (props.debug) {\r\n            console.log('ExternalObjectComponent.mountNewExternalObject: props.id =', props.id);\r\n        }\r\n        const container = this.newContainer(props.id);\r\n        if (container) {\r\n            if (props.debug) {\r\n                console.log('ExternalObjectComponent: attaching new external object with id =', props.id);\r\n            }\r\n            parentContainer.appendChild(container);\r\n        }\r\n        const object = this.newExternalObject(parentContainer, container);\r\n        this.externalObjectStore[props.id] = {object, container};\r\n        this.parentContainer = parentContainer;\r\n        this.externalObjectMounted(object, props, parentContainer, container);\r\n        this.updateExternalComponentAndSaveProps(props);\r\n    }\r\n\r\n    private mountExistingExternalObject(parentContainer: HTMLElement, props: Readonly<P & ES>) {\r\n        if (props.debug) {\r\n            console.log('ExternalObjectComponent.mountExistingExternalObject: props.id =', props.id);\r\n        }\r\n        const externalObjectRef = this.externalObjectStore[props.id];\r\n        assert.ok(externalObjectRef);\r\n        const container = externalObjectRef.container;\r\n        if (container && !parentContainer.contains(container)) {\r\n            if (props.debug) {\r\n                console.log('ExternalObjectComponent: attaching existing external object with id =', props.id);\r\n            }\r\n            parentContainer.appendChild(container);\r\n        }\r\n        this.parentContainer = parentContainer;\r\n        this.externalObjectMounted(externalObjectRef.object, props, parentContainer, container);\r\n        this.updateExternalComponentAndSaveProps(props);\r\n    }\r\n\r\n    private unmountExternalObject(parentContainer: HTMLElement, props: Readonly<P & ES>) {\r\n        if (this.props.debug) {\r\n            console.log('ExternalObjectComponent.unmountExternalObject: parentContainer.id =', parentContainer.id);\r\n        }\r\n        const externalObjectRef = this.externalObjectStore[parentContainer.id];\r\n        assert.ok(externalObjectRef);\r\n        const container = externalObjectRef.container;\r\n        if (container && parentContainer.contains(container)) {\r\n            if (props.debug) {\r\n                console.log('ExternalObjectComponent: detaching external object with id =', container.id);\r\n            }\r\n            parentContainer.removeChild(container);\r\n        }\r\n        this.parentContainer = null;\r\n        this.externalObjectUnmounted(externalObjectRef.object, props, parentContainer, container);\r\n    }\r\n\r\n    private updateExternalComponentAndSaveProps(nextProps: Readonly<P>): void {\r\n        const externalObjectRef = this.externalObjectStore[nextProps.id];\r\n        assert.ok(externalObjectRef);\r\n        // Get previous props\r\n        const prevState = externalObjectRef.state;\r\n        const nextState = this.propsToExternalObjectState(nextProps, prevState);\r\n        if (this.props.debug) {\r\n            console.log('ExternalObjectComponent: updating existing external object');\r\n            console.log('  this.props.id =', this.props.id);\r\n            console.log('  nextProps.id  =', nextProps.id);\r\n            console.log('  prevState     =', prevState);\r\n            console.log('  nextState     =', nextState);\r\n        }\r\n        if (this.shouldExternalObjectUpdate(prevState, nextState)) {\r\n            this.updateExternalObject(\r\n                externalObjectRef.object,\r\n                prevState, nextState,\r\n                this.parentContainer,\r\n                externalObjectRef.container\r\n            );\r\n        }\r\n        // Remember new state\r\n        externalObjectRef.state = nextState;\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    protected shouldExternalObjectUpdate(prevState: ES, nextState: ES): boolean {\r\n        return !shallowEqual(prevState, nextState);\r\n    }\r\n\r\n    private get externalObjectStore(): ExternalObjectStore<E, ES> {\r\n        return (this.props.externalObjectStore || ExternalObjectComponent.DEFAULT_EXTERNAL_OBJECT_STORE) as ExternalObjectStore<E, ES>;\r\n    }\r\n}\r\n","export function shallowEqual(v1: any, v2: any): boolean {\r\n    if (v1 === v2) {\r\n        return true;\r\n    }\r\n    if (v1 && v2) {\r\n        const t1: string = typeof v1;\r\n        const t2: string = typeof v2;\r\n        if (t1 !== t2) {\r\n            return false;\r\n        }\r\n        if (t1 === 'Array') {\r\n            if (!v1.length !== !v2.length) {\r\n                return false;\r\n            }\r\n            if (!v1.length && !v2.length) {\r\n                return true;\r\n            }\r\n            for (let i = 0; i < v1.length; i++) {\r\n                if (v1[i] !== v2[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        } else if (t1 === 'object') {\r\n            const names1 = Object.getOwnPropertyNames(v1);\r\n            const names2 = Object.getOwnPropertyNames(v2);\r\n            if (!names1.length !== !names2.length) {\r\n                return false;\r\n            }\r\n            if (!names1.length && !names2.length) {\r\n                return true;\r\n            }\r\n            for (let propertyName of names1) {\r\n                if (v1[propertyName] !== v2[propertyName]) {\r\n                    return false;\r\n                }\r\n            }\r\n            for (let propertyName of names2) {\r\n                if (v1[propertyName] !== v2[propertyName]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","import deepEqual from 'deep-equal';\r\nimport * as assert from './assert';\r\n\r\ntype ObjectWithId = { id: any; }\r\n\r\n/**\r\n * An action on an array of objects.\r\n */\r\nexport interface ArrayAction<T extends ObjectWithId> {\r\n    /**\r\n     * Action type, must be one of:  'ADD', 'REMOVE', 'UPDATE', 'MOVE'\r\n     */\r\n    type: 'ADD' | 'REMOVE' | 'UPDATE' | 'MOVE';\r\n    /**\r\n     * For type 'ADD': the insertion index.\r\n     * For type 'UPDATE': the index of the element to be updated.\r\n     * For type 'MOVE': the index from where to move.\r\n     */\r\n    index: number;\r\n    /**\r\n     * For type 'ADD' and 'UPDATE': the new element.\r\n     */\r\n    newElement?: T;\r\n    /**\r\n     * For type 'REMOVE' and 'UPDATE': the old element.\r\n     */\r\n    oldElement?: T;\r\n    /**\r\n     * For type 'UPDATE': the object containing change information.\r\n     */\r\n    change?: any;\r\n    /**\r\n     * For type 'MOVE': number of steps to move. May be negative to move an element down.\r\n     */\r\n    numSteps?: number;\r\n}\r\n\r\n/**\r\n * A diff for arrays whose elements are unique objects with an \"id\" property of any type.\r\n * An \"id\" property is considered equal to another if it shallow-equals the other i.e. element.id === other.id.\r\n *\r\n * By default, if the computeChange function is not provided, the \"change\" object between two elements\r\n * with same \"id\" property is computed by deepEqual from the \"deep-equal\" package.\r\n *\r\n * @param oldArray The first array, whose elements are all defined an non-null.\r\n * @param newArray The second array, whose elements are all defined an non-null.\r\n * @param computeChange An optional function used to compute an application-specific \"change\"\r\n *        between two elements with equal \"id\" properties.\r\n *        Signature: (element1, element2) => any\r\n * @returns {ArrayAction<T>[]} An array of actions to be performed to make oldArray equal to newArray.\r\n */\r\nexport function arrayDiff<T extends ObjectWithId>(oldArray: T[], newArray: T[], computeChange?: (e1: any, e2: any) => any): ArrayAction<T>[] {\r\n\r\n    const actions = [] as ArrayAction<T>[];\r\n    const currentArray = oldArray.slice();\r\n\r\n    // REMOVE first, so we have less actions afterwards\r\n    const newIds = new Set<string>(newArray.map(l => l.id));\r\n    for (let oldIndex = oldArray.length - 1; oldIndex >= 0; oldIndex--) {\r\n        const oldElement = oldArray[oldIndex];\r\n        if (!newIds.has(oldElement.id)) {\r\n            actions.push({type: 'REMOVE', index: oldIndex, oldElement});\r\n            currentArray.splice(oldIndex, 1);\r\n        }\r\n    }\r\n\r\n    assert.ok(currentArray.length <= newArray.length);\r\n\r\n    for (let newIndex = 0; newIndex < newArray.length; newIndex++) {\r\n        const newElement = newArray[newIndex];\r\n        assert.ok(!!newElement);\r\n        const currentElement = currentArray[newIndex];\r\n        if (!currentElement) {\r\n            actions.push({type: 'ADD', index: newIndex, newElement});\r\n            currentArray.push(newElement);\r\n        } else if (newElement.id !== currentElement.id) {\r\n            let currentIndex = -1;\r\n            for (let i = newIndex + 1; i < currentArray.length; i++) {\r\n                if (currentArray[i].id === newElement.id) {\r\n                    currentIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (currentIndex === -1) {\r\n                actions.push({type: 'ADD', index: newIndex, newElement});\r\n                currentArray.splice(newIndex, 0, newElement);\r\n            } else {\r\n                // Note: the current algorithm will only produce negative values for numSteps (= MOVE down)\r\n                actions.push({type: 'MOVE', index: currentIndex, numSteps: newIndex - currentIndex});\r\n                const layer = currentArray[currentIndex];\r\n                currentArray.splice(currentIndex, 1);\r\n                currentArray.splice(newIndex, 0, layer);\r\n                newIndex = newIndex - 1;\r\n            }\r\n        } else {\r\n            if (computeChange) {\r\n                const change = computeChange(currentElement, newElement);\r\n                if (change !== null && typeof change !== 'undefined') {\r\n                    actions.push({type: 'UPDATE', index: newIndex, oldElement: currentElement, newElement, change});\r\n                }\r\n            } else if (!deepEqual(currentElement, newElement)) {\r\n                actions.push({type: 'UPDATE', index: newIndex, oldElement: currentElement, newElement});\r\n            }\r\n        }\r\n    }\r\n\r\n    return actions;\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\nexport interface ISliderProps {\r\n    splitPos: number;\r\n    onChange: (splitPosition: number) => void;\r\n}\r\n\r\nexport class SplitSlider extends React.PureComponent<ISliderProps, null> {\r\n    static readonly DIV_STYLE: React.CSSProperties = {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        top: '0px',\r\n        backgroundColor: 'rgba(255, 255, 0, 0.5)',\r\n        width: '2px',\r\n        height: '100%',\r\n        zIndex: 5,\r\n        cursor: 'col-resize',\r\n    };\r\n\r\n    sliderElement: HTMLDivElement | null;\r\n    dragStartX: number;\r\n\r\n    constructor(props: ISliderProps) {\r\n        super(props);\r\n        this.handleRef = this.handleRef.bind(this);\r\n        this.mouseDown = this.mouseDown.bind(this);\r\n        this.mouseUp = this.mouseUp.bind(this);\r\n        this.sliderMove = this.sliderMove.bind(this);\r\n    }\r\n\r\n    mouseDown(e) {\r\n        this.dragStartX = e.clientX - this.sliderElement.offsetLeft;\r\n        window.addEventListener('mousemove', this.sliderMove, true);\r\n    }\r\n\r\n    mouseUp() {\r\n        window.removeEventListener('mousemove', this.sliderMove, true);\r\n    }\r\n\r\n    sliderMove(e) {\r\n        const splitPosition = (e.clientX - this.dragStartX) / this.sliderElement.parentElement.offsetWidth;\r\n        this.props.onChange(splitPosition);\r\n    }\r\n\r\n    handleRef(sliderElement: HTMLDivElement) {\r\n        if (sliderElement) {\r\n            sliderElement.addEventListener('mousedown', this.mouseDown, false);\r\n            window.addEventListener('mouseup', this.mouseUp, false);\r\n            this.dragStartX = 0;\r\n        } else if (this.sliderElement) {\r\n            this.sliderElement.removeEventListener('mousedown', this.mouseDown, false);\r\n        }\r\n        this.sliderElement = sliderElement;\r\n    }\r\n\r\n    render() {\r\n        const left = (100 * this.props.splitPos) + '%';\r\n        return (<div style={{...SplitSlider.DIV_STYLE, left}}\r\n                     ref={this.handleRef}/>);\r\n    }\r\n}\r\n\r\n\r\n","import * as Cesium from 'cesium'\r\nimport { isDefined } from '../../../common/types';\r\n\r\n\r\nexport const pointHeight = 10;\r\nexport const polylineHeight = 5;\r\nexport const polygonHeight = 0;\r\n\r\nexport const pointColor = new Cesium.ColorMaterialProperty(Cesium.Color.CHARTREUSE.withAlpha(0.9));\r\nexport const polylineColor = new Cesium.ColorMaterialProperty(Cesium.Color.YELLOW.withAlpha(0.9));\r\nexport const polylineWidth = 2;\r\nexport const polygonColor = new Cesium.ColorMaterialProperty(Cesium.Color.AQUA.withAlpha(0.7));\r\n\r\nexport type GeometryToolType = 'PointTool' | 'PolylineTool' | 'PolygonTool' | 'BoxTool' | 'NoTool';\r\n\r\nclass Click {\r\n    position: Cesium.Cartesian2;\r\n}\r\n\r\nclass Movement {\r\n    // noinspection JSUnusedGlobalSymbols\r\n    startPosition?: Cesium.Cartesian2;\r\n    endPosition: Cesium.Cartesian2;\r\n}\r\n\r\nexport abstract class ToolContext {\r\n\r\n    abstract newEntity(entity: Cesium.Entity): void;\r\n\r\n    abstract addToolEntity(entityT: Cesium.Entity): void;\r\n\r\n    abstract removeAllToolEntities(): void;\r\n\r\n    abstract pickEllipsoid(position: Cesium.Cartesian2): Cesium.Cartesian3 | undefined;\r\n\r\n    abstract cartesianWithHeightDelta(cartesian: Cesium.Cartesian3, height: number): Cesium.Cartesian3;\r\n\r\n    abstract cartesianToCartographic(cartesian: Cesium.Cartesian3): Cesium.Cartographic;\r\n\r\n    abstract cartographicToCartesian(cartographic: Cesium.Cartographic): Cesium.Cartesian3;\r\n}\r\n\r\nexport abstract class ToolContextBase extends ToolContext {\r\n    private _tool: Tool;\r\n\r\n    protected constructor() {\r\n        super();\r\n        this._tool = NO_TOOL;\r\n    }\r\n\r\n    set tool(tool: Tool) {\r\n        if (tool !== this._tool) {\r\n            this._tool.deactivate();\r\n            this._tool.context = null;\r\n            this._tool = tool;\r\n            this._tool.context = this;\r\n            this._tool.activate();\r\n        }\r\n    }\r\n\r\n    get tool(): Tool {\r\n        return this._tool;\r\n    }\r\n\r\n    onLeftClick(leftClick: Click): void {\r\n        this._tool.handleLeftClick(leftClick);\r\n    }\r\n\r\n    onLeftDoubleClick(leftClick: Click): void {\r\n        this._tool.handleLeftDoubleClick(leftClick);\r\n    }\r\n\r\n    onMouseMove(movement: Movement): void {\r\n        this._tool.handleMouseMove(movement);\r\n    }\r\n}\r\n\r\n\r\nexport class CesiumToolContext extends ToolContextBase {\r\n    private _viewer: Cesium.Viewer;\r\n    private _ellipsoid: Cesium.Ellipsoid;\r\n    private _toolDataSource: Cesium.CustomDataSource;\r\n    private _handler: Cesium.ScreenSpaceEventHandler;\r\n    private _onNewEntity?: (entity: Cesium.Entity) => void;\r\n\r\n    constructor(viewer: Cesium.Viewer, onNewEntity?: (entity: Cesium.Entity) => void) {\r\n        super();\r\n        this._viewer = viewer;\r\n        this._ellipsoid = viewer.scene.globe.ellipsoid;\r\n        this._toolDataSource = new Cesium.CustomDataSource('Tool Data Source');\r\n        viewer.dataSources.add(this._toolDataSource);\r\n        const handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\r\n        handler.setInputAction(leftClick => {\r\n            if (this.tool.isActive()) {\r\n                this.onLeftClick(leftClick);\r\n                this._viewer.scene.requestRender();\r\n            }\r\n        }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\r\n        handler.setInputAction(doubleClick => {\r\n            if (this.tool.isActive()) {\r\n                this.onLeftDoubleClick(doubleClick);\r\n                this._viewer.scene.requestRender();\r\n            }\r\n        }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);\r\n        handler.setInputAction(movement => {\r\n            if (this.tool.isActive()) {\r\n                this.onMouseMove(movement);\r\n                this._viewer.scene.requestRender();\r\n            }\r\n        }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\r\n        this._handler = handler;\r\n        this._onNewEntity = onNewEntity;\r\n    }\r\n\r\n    newEntity(entity: Cesium.Entity): void {\r\n        if (this._onNewEntity) {\r\n            this._onNewEntity(new Cesium.Entity(entity));\r\n        } else {\r\n            this._viewer.entities.add(entity);\r\n        }\r\n    }\r\n\r\n    addToolEntity(entity: Cesium.Entity): void {\r\n        this._toolDataSource.entities.add(entity);\r\n    }\r\n\r\n    removeAllToolEntities(): void {\r\n        this._toolDataSource.entities.removeAll();\r\n    }\r\n\r\n    pickEllipsoid(position: Cesium.Cartesian2): Cesium.Cartesian3 {\r\n        return this._viewer.camera.pickEllipsoid(position, this._ellipsoid);\r\n    }\r\n\r\n    cartesianWithHeightDelta(cartesian: Cesium.Cartesian3, height: number): Cesium.Cartesian3 {\r\n        const cartographic = this._ellipsoid.cartesianToCartographic(cartesian);\r\n        cartographic.height += height;\r\n        return this._ellipsoid.cartographicToCartesian(cartographic);\r\n    }\r\n\r\n    cartesianToCartographic(cartesian: Cesium.Cartesian3): Cesium.Cartographic {\r\n        return this._ellipsoid.cartesianToCartographic(cartesian);\r\n    }\r\n\r\n    cartographicToCartesian(cartographic: Cesium.Cartographic): Cesium.Cartesian3 {\r\n        return this._ellipsoid.cartographicToCartesian(cartographic);\r\n    }\r\n\r\n    destroy() {\r\n        this._handler.destroy();\r\n    }\r\n}\r\n\r\nexport interface Tool {\r\n    readonly type: string;\r\n\r\n    context: ToolContext | null;\r\n\r\n    isActive(): boolean;\r\n\r\n    activate(): void;\r\n\r\n    deactivate(): void;\r\n\r\n    handleLeftClick(leftClick: Click): void;\r\n\r\n    handleLeftDoubleClick(leftClick: Click): void;\r\n\r\n    handleMouseMove(movement: Movement): void;\r\n}\r\n\r\n\r\nabstract class ToolBase implements Tool {\r\n    readonly type: string;\r\n    private _context: ToolContext | null = null;\r\n\r\n    constructor(type: string) {\r\n        this.type = type;\r\n    }\r\n\r\n    set context(context: ToolContext | null) {\r\n        this._context = context;\r\n    }\r\n\r\n    get context(): ToolContext | null {\r\n        return this._context;\r\n    }\r\n\r\n    isActive(): boolean {\r\n        return this._context !== null;\r\n    }\r\n\r\n    activate() {\r\n    }\r\n\r\n    deactivate() {\r\n    }\r\n\r\n    handleLeftClick(leftClick: Click) {\r\n    }\r\n\r\n    handleLeftDoubleClick(leftClick: Click) {\r\n    }\r\n\r\n    handleMouseMove(movement: Movement) {\r\n    }\r\n}\r\n\r\nexport class NoTool extends ToolBase {\r\n    constructor() {\r\n        super('NoTool');\r\n    }\r\n}\r\n\r\nexport const NO_TOOL = new NoTool();\r\n\r\nexport class PointTool extends ToolBase {\r\n\r\n    constructor() {\r\n        super('PointTool');\r\n    }\r\n\r\n    handleLeftClick(leftClick) {\r\n        const position = this.context.pickEllipsoid(leftClick.position);\r\n        if (isDefined(position)) {\r\n            this.context.newEntity(new Cesium.Entity({\r\n                                                         position,\r\n                                                         point: {\r\n                                                             pixelSize: 6,\r\n                                                             //color: Cesium.Color.RED,\r\n                                                             //outlineColor: Cesium.Color.WHITE,\r\n                                                             outlineWidth: 1\r\n                                                         },\r\n                                                     }));\r\n        }\r\n    }\r\n}\r\n\r\nclass PolyTool extends ToolBase {\r\n\r\n    private readonly genPolygon: boolean;\r\n\r\n    // Note polylinePositions and polygonPositions differ in height\r\n    private polylinePositions: Cesium.Cartesian3[] | null = null;\r\n    private polygonPositions: Cesium.Cartesian3[] | null = null;\r\n\r\n    private polylineEntity: Cesium.Entity | null = null;\r\n    private polygonEntity: Cesium.Entity | null = null;\r\n\r\n    private hasRubberband: boolean = false;\r\n\r\n    constructor(type: string, genPolygon: boolean) {\r\n        super(type);\r\n        this.genPolygon = genPolygon;\r\n    }\r\n\r\n    deactivate() {\r\n        this.reset();\r\n    }\r\n\r\n    handleLeftClick(leftClick: Click) {\r\n        this.addPoint(leftClick.position);\r\n    }\r\n\r\n    handleMouseMove(movement: Movement) {\r\n        this.moveLastPoint(movement.endPosition);\r\n    }\r\n\r\n    handleLeftDoubleClick(leftClick: Click) {\r\n        this.endInteraction();\r\n    }\r\n\r\n    private addPoint(screenPosition: Cesium.Cartesian2) {\r\n        let position = this.context.pickEllipsoid(screenPosition);\r\n        if (isDefined(position)) {\r\n            position = this.context.cartesianWithHeightDelta(position, pointHeight);\r\n            // Add point graphics\r\n            if (this.updatePositions(position)) {\r\n                this.context.addToolEntity(new Cesium.Entity({\r\n                                                                 position,\r\n                                                                 //allowPicking: false,\r\n                                                                 point: {\r\n                                                                     show: true,\r\n                                                                     outlineColor: Cesium.Color.BLACK,\r\n                                                                     outlineWidth: 1,\r\n                                                                     color: pointColor,\r\n                                                                     pixelSize: 10,\r\n                                                                 }\r\n                                                             }));\r\n            }\r\n            this.hasRubberband = false;\r\n        }\r\n    }\r\n\r\n    private endInteraction() {\r\n        if (this.polygonEntity !== null) {\r\n            this.context.newEntity(new Cesium.Entity({\r\n                                                         polygon: {\r\n                                                             // check: why doesn't this work?\r\n                                                             // hierarchy: this.polygonEntity.hierarchy,\r\n                                                             hierarchy: new Cesium.PolygonHierarchy(this.polygonPositions),\r\n                                                             material: polygonColor,\r\n                                                         }\r\n                                                     }));\r\n        } else if (this.polylineEntity !== null) {\r\n            this.context.newEntity(new Cesium.Entity({\r\n                                                         polyline: {\r\n                                                             // check: why doesn't this work?\r\n                                                             // positions: this.polylinePositions.positions,\r\n                                                             positions: this.polylinePositions,\r\n                                                             material: polylineColor,\r\n                                                         }\r\n                                                     }));\r\n        }\r\n        this.reset();\r\n    }\r\n\r\n    private moveLastPoint(screenPosition: Cesium.Cartesian2) {\r\n        if (!this.polylinePositions) {\r\n            return;\r\n        }\r\n        const position = this.context.pickEllipsoid(screenPosition);\r\n        if (isDefined(position)) {\r\n            this.updatePositions(position);\r\n            this.hasRubberband = true;\r\n        }\r\n    }\r\n\r\n    private updatePositions(position: Cesium.Cartesian3): boolean {\r\n        const polylinePoint = this.context.cartesianWithHeightDelta(position, polylineHeight);\r\n        let newPointAdded = true;\r\n        if (this.polylinePositions === null) {\r\n            this.polylinePositions = [polylinePoint];\r\n        } else {\r\n            const numPoints = this.polylinePositions.length;\r\n            if (this.hasRubberband) {\r\n                this.polylinePositions[numPoints - 1] = polylinePoint;\r\n            } else {\r\n                if (polylinePoint.equals(this.polylinePositions[numPoints - 1])) {\r\n                    newPointAdded = false;\r\n                } else {\r\n                    this.polylinePositions.push(polylinePoint);\r\n                }\r\n            }\r\n        }\r\n        if (this.polylinePositions.length > 1) {\r\n            let positions = this.polylinePositions.slice();\r\n            if (!this.polylineEntity) {\r\n                this.polylineEntity = new Cesium.Entity({\r\n                                                            //allowPicking: false,\r\n                                                            polyline: {\r\n                                                                positions: positions,\r\n                                                                width: polylineWidth,\r\n                                                                //followSurface: true,\r\n                                                                material: polylineColor,\r\n                                                            }\r\n                                                        })\r\n                this.context.addToolEntity(this.polylineEntity);\r\n            } else if (newPointAdded) {\r\n                this.polylineEntity.polyline.positions = new Cesium.ConstantProperty(positions);\r\n            }\r\n        }\r\n\r\n        if (newPointAdded && this.genPolygon) {\r\n            const polygonPoint = this.context.cartesianWithHeightDelta(position, polygonHeight);\r\n            if (!this.polygonPositions) {\r\n                this.polygonPositions = [polygonPoint];\r\n            } else {\r\n                const numPoints = this.polygonPositions.length;\r\n                if (this.hasRubberband) {\r\n                    this.polygonPositions[numPoints - 1] = polygonPoint;\r\n                } else {\r\n                    this.polygonPositions.push(polygonPoint);\r\n                }\r\n            }\r\n            if (this.polygonPositions.length > 2) {\r\n                let positions = this.polygonPositions.slice();\r\n                if (!this.polygonEntity) {\r\n                    this.polygonEntity = new Cesium.Entity({\r\n                                                               //allowPicking: false,\r\n                                                               polygon: {\r\n                                                                   hierarchy: new Cesium.PolygonHierarchy(positions),\r\n                                                                   material: polygonColor,\r\n                                                               }\r\n                                                           });\r\n                    this.context.addToolEntity(this.polygonEntity);\r\n                } else {\r\n                    this.polygonEntity.polygon.hierarchy = new Cesium.ConstantProperty(new Cesium.PolygonHierarchy(positions));\r\n                }\r\n            }\r\n        }\r\n\r\n        return newPointAdded;\r\n    }\r\n\r\n    private reset() {\r\n        this.polylinePositions = null;\r\n        this.polygonPositions = null;\r\n        this.polylineEntity = null;\r\n        this.polygonEntity = null;\r\n        this.hasRubberband = false;\r\n        if (this.context !== null) {\r\n            this.context.removeAllToolEntities();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class PolylineTool extends PolyTool {\r\n\r\n    constructor() {\r\n        super('PolylineTool', false);\r\n    }\r\n}\r\n\r\nexport class PolygonTool extends PolyTool {\r\n\r\n    constructor() {\r\n        super('PolygonTool', true);\r\n    }\r\n}\r\n\r\nexport class BoxTool extends ToolBase {\r\n\r\n    private position1: Cesium.Cartesian3 | null = null;\r\n    private position2: Cesium.Cartesian3 | null = null;\r\n    private polygonEntity: Cesium.Entity | null = null;\r\n\r\n    constructor() {\r\n        super('BoxTool');\r\n    }\r\n\r\n    deactivate() {\r\n        this.reset();\r\n    }\r\n\r\n    handleLeftClick(leftClick: Click) {\r\n        this.setPosition(leftClick.position, true);\r\n    }\r\n\r\n    handleLeftDoubleClick(leftClick: Click) {\r\n        this.setPosition(leftClick.position, true);\r\n    }\r\n\r\n    handleMouseMove(movement: Movement) {\r\n        if (this.position1) {\r\n            this.setPosition(movement.endPosition, false);\r\n        }\r\n    }\r\n\r\n    private setPosition(screenPosition: Cesium.Cartesian2, doAdd: boolean) {\r\n        const position = this.context.pickEllipsoid(screenPosition);\r\n        if (isDefined(position)) {\r\n            if (this.position1 === null) {\r\n                this.position1 = position;\r\n            } else {\r\n                this.position2 = position;\r\n                const positions = this.getPositions();\r\n                if (doAdd) {\r\n                    this.context.newEntity(new Cesium.Entity({\r\n                                                                 polygon: {\r\n                                                                     hierarchy: new Cesium.PolygonHierarchy(positions),\r\n                                                                     material: polygonColor,\r\n                                                                 }\r\n                                                             }));\r\n                    this.reset();\r\n                    return;\r\n                }\r\n                if (this.polygonEntity === null) {\r\n                    this.polygonEntity = new Cesium.Entity({\r\n                                                               // allowPicking: false,\r\n                                                               polygon: {\r\n                                                                   hierarchy: new Cesium.PolygonHierarchy(positions),\r\n                                                                   material: polygonColor,\r\n                                                               }\r\n                                                           });\r\n                    this.context.addToolEntity(this.polygonEntity);\r\n                } else {\r\n                    this.polygonEntity.polygon.hierarchy = new Cesium.ConstantProperty(new Cesium.PolygonHierarchy(positions));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getPositions(): Cesium.Cartesian3[] {\r\n        const carto1 = this.context.cartesianToCartographic(this.position1);\r\n        const carto2 = this.context.cartesianToCartographic(this.position2);\r\n        const lon1 = carto1.longitude;\r\n        const lat1 = carto1.latitude;\r\n        const lon2 = carto2.longitude;\r\n        const lat2 = carto2.latitude;\r\n        const height = 0.5 * (carto1.height + carto2.height);\r\n        return [\r\n            this.context.cartographicToCartesian(new Cesium.Cartographic(lon1, lat1, height)),\r\n            this.context.cartographicToCartesian(new Cesium.Cartographic(lon2, lat1, height)),\r\n            this.context.cartographicToCartesian(new Cesium.Cartographic(lon2, lat2, height)),\r\n            this.context.cartographicToCartesian(new Cesium.Cartographic(lon1, lat2, height)),\r\n        ];\r\n    }\r\n\r\n    reset() {\r\n        this.position1 = null;\r\n        this.position2 = null;\r\n        this.polygonEntity = null;\r\n        if (this.context !== null) {\r\n            this.context.removeAllToolEntities();\r\n        }\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as Cesium from 'cesium';\r\nimport { diff } from 'deep-object-diff'\r\nimport { Feature, FeatureCollection, Point } from 'geojson';\r\nimport { ContextMenu } from '@blueprintjs/core';\r\n\r\nimport { ExternalObjectComponent, IExternalObjectComponentProps } from '../ExternalObjectComponent'\r\nimport { isBoolean, isNumber, isString } from '../../../common/types';\r\nimport { arrayDiff } from '../../../common/array-diff';\r\nimport { SimpleStyle } from '../../../common/geojson-simple-style';\r\nimport { SplitSlider } from './SplitSlider';\r\nimport {\r\n    applyStyleToEntity,\r\n    applyStyleToEntityCollection,\r\n    BaseMapOptions,\r\n    canvasToCartographic,\r\n    clientToCanvas,\r\n    getEntityByEntityId,\r\n    pickEntity, setViewerBaseMap,\r\n    simpleStyleToCesium\r\n} from './cesium-util';\r\nimport {\r\n    BoxTool,\r\n    CesiumToolContext,\r\n    GeometryToolType,\r\n    NO_TOOL,\r\n    PointTool,\r\n    PolygonTool,\r\n    PolylineTool\r\n} from './geometry-tool';\r\n\r\n\r\ninterface Placemark extends Feature<Point> {\r\n    id: string;\r\n}\r\n\r\ninterface PlacemarkCollection extends FeatureCollection<Point> {\r\n    features: Placemark[];\r\n}\r\n\r\n/**\r\n * Describes a layer to be displayed on the Cesium globe.\r\n */\r\nexport interface LayerDescriptor {\r\n    id: string;\r\n    name?: string | null;\r\n    visible: boolean;\r\n}\r\n\r\n/**\r\n * Describes an image layer (imagery provider) to be displayed on the Cesium globe.\r\n */\r\nexport interface ImageLayerDescriptor extends LayerDescriptor {\r\n    opacity?: number;\r\n    brightness?: number;\r\n    contrast?: number;\r\n    hue?: number;\r\n    saturation?: number;\r\n    gamma?: number;\r\n    splitMode: 'right' | 'left' | 'off';\r\n\r\n    imageryProvider: ((viewer: Cesium.Viewer, options: any) => Cesium.ImageryProvider) | Cesium.ImageryProvider;\r\n    imageryProviderOptions: any;\r\n}\r\n\r\n/**\r\n * Describes a vector data layer (entity data source) to be displayed on the Cesium globe.\r\n */\r\nexport interface VectorLayerDescriptor extends LayerDescriptor {\r\n    style?: SimpleStyle;\r\n    entityStyles?: { [entityId: string]: SimpleStyle };\r\n    dataSource: ((viewer: Cesium.Viewer, options: any) => Cesium.DataSource | Promise<Cesium.DataSource>) | Cesium.DataSource | Promise<Cesium.DataSource>;\r\n    dataSourceOptions?: any;\r\n}\r\n\r\nexport interface LayerDescriptors {\r\n    vectorLayerDescriptors?: VectorLayerDescriptor[];\r\n    imageLayerDescriptors?: ImageLayerDescriptor[];\r\n}\r\n\r\n// Bing Maps Key associated with Account Id 1441410 (= norman.fomferra@brockmann-consult.de)\r\n// * Application Name: CCI Toolbox\r\n// * Key / Application Type: Basic / Dev/Test\r\n// * Application URL: http://cci.esa.int/\r\n//\r\n\r\nCesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJhNzYzYzJjYS00YzY5LTQzN2ItOWQzNy03NWZmZTQyMjU1ZDgiLCJpZCI6MjAwNTAsInNjb3BlcyI6WyJhc3IiLCJnYyJdLCJpYXQiOjE1NzY2NjU5ODN9.f-uN5Ocljn77-O2aDNEGPSr8HRHym5RA0aqSWKMgYYk';\r\n\r\ninterface CesiumGlobeStateBase {\r\n    selectedPlacemarkId?: string;\r\n    baseMapOptions: BaseMapOptions | null;\r\n    imageLayerDescriptors?: ImageLayerDescriptor[];\r\n    vectorLayerDescriptors?: VectorLayerDescriptor[];\r\n    overlayHtml?: HTMLElement | null;\r\n    splitLayerPosition?: number;\r\n    geometryToolType?: GeometryToolType;\r\n}\r\n\r\ntype DataSourceMap = { [layerId: string]: Cesium.DataSource };\r\n\r\ninterface CesiumGlobeState extends CesiumGlobeStateBase {\r\n    dataSourceMap: DataSourceMap;\r\n}\r\n\r\nexport type GeographicPosition = { latitude: number, longitude: number, height?: number };\r\nexport type CanvasPosition = { x: number, y: number };\r\n\r\nexport interface ICesiumGlobeProps extends IExternalObjectComponentProps<Cesium.Viewer, CesiumGlobeState>, CesiumGlobeStateBase {\r\n    offlineMode?: boolean;\r\n    onLeftUp?: (geoPos: GeographicPosition, canvasPos: CanvasPosition, entity?: Cesium.Entity) => void;\r\n    onLeftClick?: (geoPos: GeographicPosition, canvasPos: CanvasPosition, entity?: Cesium.Entity) => void;\r\n    onRightClick?: (geoPos: GeographicPosition, canvasPos: CanvasPosition, entity?: Cesium.Entity) => void;\r\n    onMouseMove?: (geoPos: GeographicPosition, canvasPos: CanvasPosition) => void;\r\n    renderContextMenu?: (geoPos: GeographicPosition, canvasPos: CanvasPosition, entity?: Cesium.Entity) => JSX.Element | null;\r\n    onSelectedEntityChanged?: (selectedEntity: Cesium.Entity | null) => void;\r\n    onNewEntityAdded?: (newEntity: Cesium.Entity) => void;\r\n    onViewerMounted?: (id: string, viewer: Cesium.Viewer) => void;\r\n    onViewerUnmounted?: (id: string, viewer: Cesium.Viewer) => void;\r\n    onLayerSplitPosChange?: (splitLayerPos: number) => void;\r\n}\r\n\r\nconst CENTRAL_EUROPE_BOX = Cesium.Rectangle.fromDegrees(-30, 20, 40, 80);\r\nconst EMPTY_ARRAY = [];\r\nCesium.Camera.DEFAULT_VIEW_RECTANGLE = CENTRAL_EUROPE_BOX;\r\nCesium.Camera.DEFAULT_VIEW_FACTOR = 0;\r\n\r\ninterface ICesiumGlobeState {\r\n    isContextMenuOpen: boolean;\r\n}\r\n\r\n/**\r\n * A component that wraps a Cesium 3D Globe.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class CesiumGlobe extends ExternalObjectComponent<Cesium.Viewer, CesiumGlobeState, ICesiumGlobeProps, ICesiumGlobeState> {\r\n    private cesiumEventHandler: any;\r\n    private selectedEntityChangeHandler: any;\r\n    private toolContext: CesiumToolContext;\r\n\r\n    constructor(props: ICesiumGlobeProps) {\r\n        super(props);\r\n        this.handleRemoteBaseLayerError = this.handleRemoteBaseLayerError.bind(this);\r\n        this.state = {isContextMenuOpen: false};\r\n    }\r\n\r\n    get viewer(): Cesium.Viewer | null {\r\n        const externalObjectRef = this.getExternalObjectRef();\r\n        return !!externalObjectRef ? externalObjectRef.object : null;\r\n    }\r\n\r\n    protected renderChildren() {\r\n        if (isNumber(this.props.splitLayerPosition)) {\r\n            return (<SplitSlider splitPos={this.props.splitLayerPosition}\r\n                                 onChange={this.props.onLayerSplitPosChange}/>);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    newContainer(id: string): HTMLElement {\r\n        const div = document.createElement('div');\r\n        div.setAttribute('id', 'cesium-container-' + id);\r\n        div.setAttribute('style', 'width: 100%; height: 100%; overflow: hidden;');\r\n        return div;\r\n    }\r\n\r\n    newExternalObject(parentContainer: HTMLElement, container: HTMLElement): Cesium.Viewer {\r\n\r\n        let baseLayerImageryProvider;\r\n        if (this.props.offlineMode) {\r\n            baseLayerImageryProvider = CesiumGlobe.getStaticNaturalEarthImageryProvider();\r\n        }\r\n\r\n        const cesiumViewerOptions: Cesium.Viewer.ConstructorOptions = {\r\n            animation: false,\r\n            baseLayerPicker: false,\r\n            selectionIndicator: true,\r\n            fullscreenButton: false,\r\n            geocoder: false,\r\n            homeButton: false,\r\n            infoBox: false,\r\n            sceneModePicker: true,\r\n            timeline: false,\r\n            navigationHelpButton: false,\r\n            navigationInstructionsInitiallyVisible: false,\r\n            automaticallyTrackDataSourceClocks: false,\r\n            imageryProvider: baseLayerImageryProvider,\r\n            // Create a viewer that will not render frames based on changes in simulation time.\r\n            // https://cesium.com/blog/2018/01/24/cesium-scene-rendering-performance/\r\n            requestRenderMode: true,\r\n            maximumRenderTimeChange: Infinity,\r\n        };\r\n\r\n        // Create the CesiumCesium.Viewer\r\n        //noinspection UnnecessaryLocalVariableJS\r\n        const viewer = new Cesium.Viewer(container, cesiumViewerOptions);\r\n\r\n        // Register context mnenu\r\n        // Note, for some reason we cannot use BlueprintJS' @ContextMenuTarget interface here\r\n        container.oncontextmenu = (event: PointerEvent) => this.handleContextMenu(viewer, event);\r\n\r\n        if (this.props.debug) {\r\n            // Show a little overlay panel with FPS. Useful for optimisations.\r\n            viewer.scene.debugShowFramesPerSecond = true;\r\n        }\r\n\r\n        if (!this.props.offlineMode) {\r\n            setViewerBaseMap(viewer, this.props.baseMapOptions);\r\n        }\r\n\r\n        // knockout is used by Cesium to update the style attributes of the selectionIndicator\r\n        // when using multiple views this breaks, for unknown reason\r\n        // to get this working we update the 'style' attribute of the selectionIndicatorElement manually\r\n        // https://github.com/AnalyticalGraphicsInc/cesium/blob/master/Source/Widgets/SelectionIndicator/SelectionIndicatorViewModel.js\r\n\r\n        const viewModel = viewer.selectionIndicator.viewModel;\r\n\r\n        const originalUpdate = viewModel.update;\r\n        viewModel.update = function () {\r\n            // TODO (forman): Note viewModel.update() is called all over the time.\r\n            //  Check if this is cause for OOM-Error on Firefox.\r\n            // console.log(\"newExternalObject: viewModel.update()!\");\r\n            const vm = viewModel as any;\r\n            originalUpdate.apply(this);\r\n            const styleValue = `top : ${vm._screenPositionY}; left : ${vm._screenPositionX};`;\r\n            vm._selectionIndicatorElement.setAttribute('style', styleValue);\r\n        };\r\n\r\n        return viewer;\r\n    }\r\n\r\n    private handleRemoteBaseLayerError(event) {\r\n        console.error('CesiumGlobe: error: ', event.message, event.timesRetried, event.error);\r\n        let ref = this.getExternalObjectRef();\r\n        if (ref) {\r\n            const viewer: Cesium.Viewer = ref.object;\r\n            // On error, exchange the remote base layer with a static one.\r\n            let imageryLayer = viewer.imageryLayers.get(0);\r\n            viewer.imageryLayers.remove(imageryLayer, true);\r\n            let staticNaturalEarthImageryProvider = CesiumGlobe.getStaticNaturalEarthImageryProvider();\r\n            viewer.imageryLayers.addImageryProvider(staticNaturalEarthImageryProvider, 0);\r\n        }\r\n    }\r\n\r\n    private handleContextMenu(viewer: Cesium.Viewer, event: PointerEvent) {\r\n        const renderContextMenu = this.props.renderContextMenu;\r\n        if (renderContextMenu) {\r\n            const screenPos = new Cesium.Cartesian2(event.clientX, event.clientY);\r\n            const canvasPos = clientToCanvas(viewer, screenPos);\r\n            const cartographic = canvasToCartographic(viewer, canvasPos, true);\r\n            const entity = pickEntity(viewer, canvasPos);\r\n            const contextMenu = renderContextMenu(cartographic, canvasPos, entity);\r\n            if (contextMenu) {\r\n                event.preventDefault();\r\n                // invoke static API, getting coordinates from mouse event\r\n                ContextMenu.show(\r\n                    contextMenu,\r\n                    {left: event.clientX, top: event.clientY},\r\n                    () => this.setState({isContextMenuOpen: false}),\r\n                );\r\n                this.setState({isContextMenuOpen: true});\r\n            }\r\n        }\r\n    }\r\n\r\n    private static getStaticNaturalEarthImageryProvider() {\r\n        // Cesium.buildModuleUrl.setBaseUrl('./');\r\n        const baseUrl = Cesium.buildModuleUrl('');\r\n        const imageryProviderOptions = {\r\n            url: baseUrl + 'Assets/Textures/NaturalEarthII/{z}/{x}/{reverseY}.jpg',\r\n            tilingScheme: new Cesium.GeographicTilingScheme(),\r\n            minimumLevel: 0,\r\n            maximumLevel: 2,\r\n            credit: 'Natural Earth II: Tileset Copyright © 2012-2014 Analytical Graphics, Inc. (AGI). Original data courtesy Natural Earth and in the public domain.'\r\n        };\r\n        return new Cesium.UrlTemplateImageryProvider(imageryProviderOptions);\r\n    }\r\n\r\n    propsToExternalObjectState(props: ICesiumGlobeProps & CesiumGlobeState, prevState?: CesiumGlobeState): CesiumGlobeState {\r\n        const selectedPlacemarkId = props.selectedPlacemarkId;\r\n        const baseMapOptions = props.baseMapOptions;\r\n        const imageLayerDescriptors = props.imageLayerDescriptors || EMPTY_ARRAY;\r\n        const vectorLayerDescriptors = props.vectorLayerDescriptors || EMPTY_ARRAY;\r\n        const overlayHtml = props.overlayHtml || null;\r\n        const geometryToolType = props.geometryToolType;\r\n        const splitLayerPosition = props.splitLayerPosition;\r\n        const dataSourceMap = (prevState && prevState.dataSourceMap) || {};\r\n        return {\r\n            selectedPlacemarkId,\r\n            baseMapOptions,\r\n            imageLayerDescriptors,\r\n            vectorLayerDescriptors,\r\n            overlayHtml,\r\n            geometryToolType,\r\n            splitLayerPosition,\r\n            dataSourceMap,\r\n        };\r\n    }\r\n\r\n    updateExternalObject(viewer: Cesium.Viewer, prevState: CesiumGlobeState, nextState: CesiumGlobeState): void {\r\n\r\n        const prevBaseMapOptions = (prevState && prevState.baseMapOptions) || null;\r\n        const prevSelectedPlacemarkId = (prevState && prevState.selectedPlacemarkId) || null;\r\n        const prevImageLayerDescriptors = (prevState && prevState.imageLayerDescriptors) || EMPTY_ARRAY;\r\n        const prevVectorLayerDescriptors = (prevState && prevState.vectorLayerDescriptors) || EMPTY_ARRAY;\r\n        const prevOverlayHtml = (prevState && prevState.overlayHtml) || null;\r\n        const prevSplitLayerPosition = (prevState && prevState.splitLayerPosition);\r\n        const prevGeometryToolType = (prevState && prevState.geometryToolType) || 'NoTool';\r\n\r\n        const nextBaseMapOptions = nextState.baseMapOptions;\r\n        const nextSelectedPlacemarkId = nextState.selectedPlacemarkId || null;\r\n        const nextImageLayerDescriptors = nextState.imageLayerDescriptors || EMPTY_ARRAY;\r\n        const nextVectorLayerDescriptors = nextState.vectorLayerDescriptors || EMPTY_ARRAY;\r\n        const nextOverlayHtml = nextState.overlayHtml;\r\n        const nextSplitLayerPosition = nextState.splitLayerPosition;\r\n        const nextGeometryToolType = nextState.geometryToolType || 'NoTool';\r\n\r\n        let shouldRequestRender = false;\r\n\r\n        if (prevBaseMapOptions !== nextBaseMapOptions && !this.props.offlineMode) {\r\n            setViewerBaseMap(viewer, nextBaseMapOptions);\r\n        }\r\n\r\n        if (prevImageLayerDescriptors !== nextImageLayerDescriptors) {\r\n            this.updateImageLayers(viewer,\r\n                                   prevImageLayerDescriptors,\r\n                                   nextImageLayerDescriptors);\r\n            shouldRequestRender = true;\r\n        }\r\n        if (prevVectorLayerDescriptors !== nextVectorLayerDescriptors) {\r\n            this.updateVectorLayers(viewer,\r\n                                    prevVectorLayerDescriptors,\r\n                                    nextVectorLayerDescriptors,\r\n                                    nextState.dataSourceMap,\r\n                                    nextSelectedPlacemarkId);\r\n            shouldRequestRender = true;\r\n        }\r\n        if (prevSelectedPlacemarkId !== nextSelectedPlacemarkId) {\r\n            this.updatePlacemarkSelection(viewer, nextSelectedPlacemarkId);\r\n            shouldRequestRender = true;\r\n        }\r\n        if (prevOverlayHtml !== nextOverlayHtml) {\r\n            CesiumGlobe.updateOverlayHtml(viewer, prevOverlayHtml, nextOverlayHtml);\r\n            shouldRequestRender = true;\r\n        }\r\n        if (prevSplitLayerPosition !== nextSplitLayerPosition) {\r\n            if (isNumber(nextSplitLayerPosition)) {\r\n                viewer.scene.imagerySplitPosition = nextSplitLayerPosition;\r\n            }\r\n            shouldRequestRender = true;\r\n        }\r\n        if (prevGeometryToolType !== nextGeometryToolType) {\r\n            this.activateGeometryTool(viewer, nextGeometryToolType);\r\n        }\r\n        if (shouldRequestRender) {\r\n            // Explicitly render a new frame\r\n            viewer.scene.requestRender();\r\n        }\r\n    }\r\n\r\n    externalObjectMounted(viewer: Cesium.Viewer, props: Readonly<ICesiumGlobeProps>): void {\r\n\r\n        function handleInputAction(canvasPosition, shouldPickEntity: boolean, callback) {\r\n            if (callback) {\r\n                // Check: Maybe we should disable events while a tool is active\r\n                // if (this.props.geometryToolType !== \"NoTool\") {\r\n                //     return;\r\n                // }\r\n                const cartographic = canvasToCartographic(viewer, canvasPosition, true);\r\n                if (shouldPickEntity) {\r\n                    callback(cartographic, canvasPosition, pickEntity(viewer, canvasPosition));\r\n                } else {\r\n                    callback(cartographic, canvasPosition);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.cesiumEventHandler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\r\n        this.cesiumEventHandler.setInputAction(\r\n            (event) => handleInputAction(event.position, true, props.onLeftUp),\r\n            Cesium.ScreenSpaceEventType.LEFT_UP\r\n        );\r\n        this.cesiumEventHandler.setInputAction(\r\n            (event) => handleInputAction(event.position, true, props.onLeftClick),\r\n            Cesium.ScreenSpaceEventType.LEFT_CLICK\r\n        );\r\n        this.cesiumEventHandler.setInputAction(\r\n            (event) => handleInputAction(event.position, true, props.onRightClick),\r\n            Cesium.ScreenSpaceEventType.RIGHT_CLICK\r\n        );\r\n        this.cesiumEventHandler.setInputAction(\r\n            (event) => handleInputAction(event.endPosition, false, props.onMouseMove),\r\n            Cesium.ScreenSpaceEventType.MOUSE_MOVE\r\n        );\r\n\r\n        this.selectedEntityChangeHandler = (selectedEntity: Cesium.Entity | null) => {\r\n            if (props.onSelectedEntityChanged) {\r\n                props.onSelectedEntityChanged(selectedEntity);\r\n            }\r\n        };\r\n        viewer.selectedEntityChanged.addEventListener(this.selectedEntityChangeHandler);\r\n\r\n        this.toolContext = new CesiumToolContext(viewer, props.onNewEntityAdded);\r\n        this.activateGeometryTool(viewer, props.geometryToolType);\r\n\r\n        viewer.scene.requestRender();\r\n\r\n        if (props.onViewerMounted) {\r\n            props.onViewerMounted(props.id, viewer);\r\n        }\r\n    }\r\n\r\n    externalObjectUnmounted(viewer: Cesium.Viewer, props: Readonly<ICesiumGlobeProps>): void {\r\n        if (this.cesiumEventHandler) {\r\n            this.cesiumEventHandler.destroy();\r\n            this.cesiumEventHandler = null;\r\n        }\r\n\r\n        if (this.selectedEntityChangeHandler) {\r\n            viewer.selectedEntityChanged.removeEventListener(this.selectedEntityChangeHandler);\r\n            this.selectedEntityChangeHandler = null;\r\n        }\r\n\r\n        if (this.toolContext) {\r\n            this.toolContext.destroy();\r\n            this.toolContext = null;\r\n        }\r\n\r\n        if (props.onViewerUnmounted) {\r\n            props.onViewerUnmounted(props.id, viewer);\r\n        }\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    private updatePlacemarkSelection(viewer: Cesium.Viewer, selectedPlacemarkId: string | null) {\r\n        const selectedEntity = (selectedPlacemarkId && getEntityByEntityId(viewer, selectedPlacemarkId)) || null;\r\n        const selectedEntityInViewer = viewer.selectedEntity || null;\r\n        if (this.props.debug) {\r\n            console.log('CesiumGlobe: updating selected placemark: ', selectedEntityInViewer, selectedEntity);\r\n        }\r\n        if (selectedEntityInViewer !== selectedEntity) {\r\n            viewer.selectedEntity = selectedEntity;\r\n        }\r\n    }\r\n\r\n    private updatePlacemarks(entities: Cesium.EntityCollection,\r\n                             currentPlacemarks: PlacemarkCollection,\r\n                             nextPlacemarks: PlacemarkCollection,\r\n                             style: SimpleStyle): Promise<Cesium.GeoJsonDataSource[]> {\r\n        if (this.props.debug) {\r\n            console.log('CesiumGlobe: updating placemarks');\r\n        }\r\n        const actions = arrayDiff<Placemark>((currentPlacemarks && currentPlacemarks.features) || EMPTY_ARRAY,\r\n                                             (nextPlacemarks && nextPlacemarks.features) || EMPTY_ARRAY);\r\n        const promises: Promise<Cesium.GeoJsonDataSource>[] = [];\r\n        for (let action of actions) {\r\n            if (this.props.debug) {\r\n                console.log('CesiumGlobe: next placemark action', action);\r\n            }\r\n            switch (action.type) {\r\n                case 'ADD': {\r\n                    const placemark = action.newElement;\r\n                    const visible = placemark.properties['visible'];\r\n                    const dataSourcePromise = Cesium.GeoJsonDataSource.load(placemark, simpleStyleToCesium(style));\r\n                    promises.push(dataSourcePromise.then(dataSource => {\r\n                        CesiumGlobe.moveEntities(dataSource.entities, entities, isBoolean(visible) ? visible : true);\r\n                        return dataSource;\r\n                    }));\r\n                    break;\r\n                }\r\n                case 'REMOVE': {\r\n                    let placemark = action.oldElement;\r\n                    entities.removeById(placemark.id);\r\n                    break;\r\n                }\r\n                case 'UPDATE':\r\n                    const oldPlacemark = action.oldElement;\r\n                    const newPlacemark = action.newElement;\r\n                    const visible = newPlacemark.properties['visible'];\r\n                    const dataSourcePromise = Cesium.GeoJsonDataSource.load(newPlacemark, simpleStyleToCesium(style));\r\n                    promises.push(dataSourcePromise.then(dataSource => {\r\n                        entities.removeById(oldPlacemark.id);\r\n                        CesiumGlobe.moveEntities(dataSource.entities, entities, isBoolean(visible) ? visible : true);\r\n                        return dataSource;\r\n                    }));\r\n                    break;\r\n                default:\r\n                    console.error(`CesiumGlobe: unhandled placemark action type \"${action.type}\"`);\r\n            }\r\n        }\r\n        return Promise.all(promises);\r\n    }\r\n\r\n    private updateImageLayers(viewer: Cesium.Viewer,\r\n                              currentLayers: ImageLayerDescriptor[],\r\n                              nextLayers: ImageLayerDescriptor[]) {\r\n        if (this.props.debug) {\r\n            console.log('CesiumGlobe: updating image layers');\r\n        }\r\n        const actions = arrayDiff<ImageLayerDescriptor>(currentLayers, nextLayers);\r\n        let imageryLayer: Cesium.ImageryLayer;\r\n        let newLayer: ImageLayerDescriptor;\r\n        let oldLayer: ImageLayerDescriptor;\r\n        for (let action of actions) {\r\n            if (this.props.debug) {\r\n                console.log('CesiumGlobe: next image layer action', action);\r\n            }\r\n            // cesiumIndex is +1 because of its base layer at cesiumIndex=0\r\n            const cesiumIndex = action.index + 1;\r\n            switch (action.type) {\r\n                case 'ADD':\r\n                    imageryLayer = this.addLayer(viewer, action.newElement, cesiumIndex);\r\n                    if (!imageryLayer) {\r\n                        // TODO (forman): Check, if we still get here.\r\n                        //                Possible reason, new globe views may not have their\r\n                        //                'selectedVariable' layer correctly initialized.\r\n                        console.error('CesiumGlobe: no imageryLayer at index ' + cesiumIndex);\r\n                        break;\r\n                    }\r\n                    CesiumGlobe.setLayerProps(imageryLayer, action.newElement);\r\n                    break;\r\n                case 'REMOVE':\r\n                    imageryLayer = viewer.imageryLayers.get(cesiumIndex);\r\n                    //assert.ok(imageryLayer);\r\n                    if (!imageryLayer) {\r\n                        console.error('CesiumGlobe: no imageryLayer at index ' + cesiumIndex);\r\n                        break;\r\n                    }\r\n                    this.removeLayer(viewer, imageryLayer, cesiumIndex);\r\n                    break;\r\n                case 'UPDATE':\r\n                    imageryLayer = viewer.imageryLayers.get(cesiumIndex);\r\n                    //assert.ok(imageryLayer);\r\n                    if (!imageryLayer) {\r\n                        console.error('CesiumGlobe: no imageryLayer at index ' + cesiumIndex);\r\n                        break;\r\n                    }\r\n                    oldLayer = action.oldElement;\r\n                    newLayer = action.newElement;\r\n                    if (oldLayer.imageryProviderOptions.url !== newLayer.imageryProviderOptions.url) {\r\n                        // It is a pitty that Cesium API does not allow for changing the\r\n                        // URL in place. The current approach, namely remove/add, causes flickering.\r\n                        this.removeLayer(viewer, imageryLayer, cesiumIndex);\r\n                        imageryLayer = this.addLayer(viewer, newLayer, cesiumIndex);\r\n                        imageryLayer.minificationFilter = Cesium.TextureMinificationFilter.NEAREST;\r\n                        imageryLayer.magnificationFilter = Cesium.TextureMagnificationFilter.NEAREST;\r\n                    }\r\n                    // update imageryLayer\r\n                    CesiumGlobe.setLayerProps(imageryLayer, newLayer);\r\n                    break;\r\n                case 'MOVE':\r\n                    imageryLayer = viewer.imageryLayers.get(cesiumIndex);\r\n                    //assert.ok(imageryLayer);\r\n                    if (!imageryLayer) {\r\n                        console.error('CesiumGlobe: no imageryLayer at index ' + cesiumIndex);\r\n                        break;\r\n                    }\r\n                    if (action.numSteps < 0) {\r\n                        for (let i = 0; i < -action.numSteps; i++) {\r\n                            viewer.imageryLayers.lower(imageryLayer);\r\n                        }\r\n                    } else {\r\n                        for (let i = 0; i < action.numSteps; i++) {\r\n                            viewer.imageryLayers.raise(imageryLayer);\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error(`CesiumGlobe: unhandled layer action type \"${action.type}\"`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateVectorLayers(viewer: Cesium.Viewer,\r\n                               currentLayers: VectorLayerDescriptor[],\r\n                               nextLayers: VectorLayerDescriptor[],\r\n                               dataSourceMap: DataSourceMap,\r\n                               selectedPlacemarkId: string | null) {\r\n        if (this.props.debug) {\r\n            console.log('CesiumGlobe: updating vector layers');\r\n        }\r\n        const actions = arrayDiff<VectorLayerDescriptor>(currentLayers, nextLayers);\r\n        for (let action of actions) {\r\n            if (this.props.debug) {\r\n                console.log('CesiumGlobe: next vector layer action', action);\r\n            }\r\n            //const index = action.index;\r\n            switch (action.type) {\r\n                case 'ADD': {\r\n                    this.addDataSource(viewer, action.newElement, dataSourceMap);\r\n                    break;\r\n                }\r\n                case 'REMOVE': {\r\n                    this.removeDataSource(viewer, action.oldElement, dataSourceMap);\r\n                    break;\r\n                }\r\n                case 'UPDATE': {\r\n                    this.updateDataSource(viewer, action.oldElement, action.newElement, dataSourceMap, selectedPlacemarkId);\r\n                    break;\r\n                }\r\n                case 'MOVE': {\r\n                    // order of dataSources seems to have no effect in Cesium\r\n                    break;\r\n                }\r\n                default:\r\n                    console.error(`CesiumGlobe: unhandled layer action type \"${action.type}\"`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static updateOverlayHtml(viewer: Cesium.Viewer, prevOverlayHtml: HTMLElement, nextOverlayHtml: HTMLElement) {\r\n        // console.log('updateOverlayHtml', prevOverlayHtml, nextOverlayHtml);\r\n        if (nextOverlayHtml) {\r\n            if (prevOverlayHtml) {\r\n                if (!viewer.container.contains(prevOverlayHtml)) {\r\n                    // TODO (forman): Check, if we still get here.\r\n                    console.warn('CesiumGlobe: previous HTML element is not a child', prevOverlayHtml);\r\n                    return;\r\n                }\r\n                viewer.container.replaceChild(nextOverlayHtml, prevOverlayHtml);\r\n            } else {\r\n                viewer.container.appendChild(nextOverlayHtml);\r\n            }\r\n        } else if (prevOverlayHtml) {\r\n            if (!viewer.container.contains(prevOverlayHtml)) {\r\n                // TODO (forman): Check, if we still get here.\r\n                console.warn('CesiumGlobe: previous HTML element is not a child', prevOverlayHtml);\r\n                return;\r\n            }\r\n            viewer.container.removeChild(prevOverlayHtml);\r\n        }\r\n    }\r\n\r\n    private static getImageryProvider(viewer: Cesium.Viewer, layerDescriptor: ImageLayerDescriptor): Cesium.ImageryProvider {\r\n        if (layerDescriptor.imageryProvider) {\r\n            if (typeof layerDescriptor.imageryProvider === 'function') {\r\n                return layerDescriptor.imageryProvider(viewer, layerDescriptor.imageryProviderOptions);\r\n            } else {\r\n                return layerDescriptor.imageryProvider;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // https://cesiumjs.org/Cesium/Build/Documentation/GeoJsonDataSource.html\r\n    private static getDataSource(viewer: Cesium.Viewer, dataSourceDescriptor: VectorLayerDescriptor): Cesium.DataSource | Promise<Cesium.DataSource> {\r\n        if (typeof dataSourceDescriptor.dataSource === 'function') {\r\n            return dataSourceDescriptor.dataSource(viewer, dataSourceDescriptor.dataSourceOptions);\r\n        } else {\r\n            return dataSourceDescriptor.dataSource;\r\n        }\r\n    }\r\n\r\n    private addDataSource(viewer: Cesium.Viewer,\r\n                          layer: VectorLayerDescriptor,\r\n                          dataSourceMap: DataSourceMap): void {\r\n        const dataSource = CesiumGlobe.getDataSource(viewer, layer);\r\n        viewer.dataSources.add(dataSource).then((resolvedDataSource) => {\r\n            if (this.props.debug) {\r\n                console.log(`CesiumGlobe: added data source: ${layer.name}`);\r\n            }\r\n            dataSourceMap[layer.id] = resolvedDataSource;\r\n            this.setDataSourceProps(viewer, resolvedDataSource, layer);\r\n        });\r\n    }\r\n\r\n    private removeDataSource(viewer: Cesium.Viewer,\r\n                             layer: VectorLayerDescriptor,\r\n                             dataSourceMap: DataSourceMap) {\r\n        const dataSource = dataSourceMap[layer.id];\r\n        if (dataSource) {\r\n            delete dataSourceMap[layer.id];\r\n            viewer.dataSources.remove(dataSource, true);\r\n            if (this.props.debug) {\r\n                console.log(`CesiumGlobe: removed data source: ${layer.name}`);\r\n            }\r\n            viewer.scene.requestRender();\r\n        }\r\n    }\r\n\r\n    private updateDataSource(viewer: Cesium.Viewer,\r\n                             oldLayer: VectorLayerDescriptor,\r\n                             newLayer: VectorLayerDescriptor,\r\n                             dataSourceMap: DataSourceMap,\r\n                             selectedPlacemarkId: string | null) {\r\n        const layerId = newLayer.id;\r\n        const dataSource = dataSourceMap[layerId];\r\n        if (!dataSource) {\r\n            console.warn('CesiumGlobe: dataSource for vector layer not ready yet, layerId =', layerId);\r\n            return;\r\n        }\r\n        const oldData = oldLayer.dataSourceOptions.data;\r\n        const newData = newLayer.dataSourceOptions.data;\r\n        if (oldData !== newData) {\r\n            if (isString(newData)) {\r\n                // URL change: must load new dataSource\r\n                this.removeDataSource(viewer, oldLayer, dataSourceMap);\r\n                this.addDataSource(viewer, newLayer, dataSourceMap);\r\n            } else {\r\n                // Change of placemarks (a GeoJSON FeatureCollection)\r\n                this.updatePlacemarks(dataSource.entities, oldData, newData, newLayer.style).then(() => {\r\n                    if (selectedPlacemarkId) {\r\n                        const selectedEntity = dataSource.entities.getById(selectedPlacemarkId);\r\n                        if (selectedEntity && selectedEntity !== viewer.selectedEntity) {\r\n                            viewer.selectedEntity = selectedEntity;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        const oldStyle = oldLayer.style;\r\n        const newStyle = newLayer.style;\r\n        if (oldStyle !== newStyle) {\r\n            const styleDelta = diff(oldStyle, newStyle);\r\n            if (Object.getOwnPropertyNames(styleDelta).length > 0) {\r\n                const cStyle = simpleStyleToCesium(styleDelta, newStyle);\r\n                applyStyleToEntityCollection(cStyle, dataSource.entities.values);\r\n            }\r\n        }\r\n        const oldEntityStyles = oldLayer.entityStyles;\r\n        const newEntityStyles = newLayer.entityStyles;\r\n        if (oldEntityStyles !== newEntityStyles) {\r\n            const entityStylesDelta = diff(oldEntityStyles, newEntityStyles);\r\n            for (let entityId of Object.getOwnPropertyNames(entityStylesDelta)) {\r\n                const entity = dataSource.entities.getById(entityId);\r\n                if (entity) {\r\n                    const entityStyleDelta = entityStylesDelta[entityId];\r\n                    if (Object.getOwnPropertyNames(entityStyleDelta).length > 0) {\r\n                        const cStyle = simpleStyleToCesium(entityStyleDelta, newEntityStyles[entityId]);\r\n                        applyStyleToEntity(cStyle, entity)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setDataSourceProps(viewer, dataSource, newLayer);\r\n    }\r\n\r\n    private addLayer(viewer: Cesium.Viewer, layerDescriptor: ImageLayerDescriptor, layerIndex: number): Cesium.ImageryLayer {\r\n        const imageryProvider = CesiumGlobe.getImageryProvider(viewer, layerDescriptor);\r\n        const imageryLayer = viewer.imageryLayers.addImageryProvider(imageryProvider, layerIndex);\r\n        if (this.props.debug) {\r\n            console.log(`CesiumGlobe: added imagery layer #${layerIndex}: ${layerDescriptor.name}`);\r\n        }\r\n        return imageryLayer;\r\n    }\r\n\r\n    private removeLayer(viewer: Cesium.Viewer, imageryLayer: Cesium.ImageryLayer, layerIndex: number): void {\r\n        viewer.imageryLayers.remove(imageryLayer, true);\r\n        if (this.props.debug) {\r\n            console.log(`CesiumGlobe: removed imagery layer #${layerIndex}`);\r\n        }\r\n    }\r\n\r\n    private static setLayerProps(imageryLayer: Cesium.ImageryLayer,\r\n                                 layerDescriptor: ImageLayerDescriptor) {\r\n        //imageryLayer.name = layerDescriptor.name;\r\n        imageryLayer.show = layerDescriptor.visible;\r\n        imageryLayer.alpha = layerDescriptor.opacity;\r\n        imageryLayer.brightness = layerDescriptor.brightness;\r\n        imageryLayer.contrast = layerDescriptor.contrast;\r\n        imageryLayer.hue = layerDescriptor.hue;\r\n        imageryLayer.saturation = layerDescriptor.saturation;\r\n        imageryLayer.gamma = layerDescriptor.gamma;\r\n        imageryLayer.minificationFilter = Cesium.TextureMinificationFilter.NEAREST;\r\n        imageryLayer.magnificationFilter = Cesium.TextureMagnificationFilter.NEAREST;\r\n\r\n        if (layerDescriptor.splitMode === 'left') {\r\n            imageryLayer.splitDirection = Cesium.ImagerySplitDirection.LEFT;\r\n        } else if (layerDescriptor.splitMode === 'right') {\r\n            imageryLayer.splitDirection = Cesium.ImagerySplitDirection.RIGHT;\r\n        } else {\r\n            imageryLayer.splitDirection = Cesium.ImagerySplitDirection.NONE;\r\n        }\r\n    }\r\n\r\n    private setDataSourceProps(viewer: Cesium.Viewer,\r\n                               dataSource: Cesium.DataSource | Promise<Cesium.DataSource>,\r\n                               dataSourceDescriptor: VectorLayerDescriptor) {\r\n        Promise.resolve(dataSource).then((resolvedDataSource: Cesium.DataSource) => {\r\n            //resolvedDataSource.name = dataSourceDescriptor.name;\r\n            resolvedDataSource.show = dataSourceDescriptor.visible;\r\n            viewer.scene.requestRender();\r\n        });\r\n    }\r\n\r\n    private static moveEntities(from: Cesium.EntityCollection, to: Cesium.EntityCollection, show: boolean) {\r\n        for (let entity of from.values.slice()) {\r\n            entity.show = show;\r\n            to.add(entity);\r\n            from.remove(entity);\r\n        }\r\n    }\r\n\r\n    activateGeometryTool(viewer: Cesium.Viewer, geometryToolType: GeometryToolType) {\r\n        const tool = this.toolContext.tool;\r\n        if (geometryToolType !== tool.type) {\r\n            if (geometryToolType === 'NoTool') {\r\n                this.toolContext.tool = NO_TOOL;\r\n            } else if (geometryToolType === 'PointTool') {\r\n                this.toolContext.tool = new PointTool();\r\n            } else if (geometryToolType === 'PolylineTool') {\r\n                this.toolContext.tool = new PolylineTool();\r\n            } else if (geometryToolType === 'PolygonTool') {\r\n                this.toolContext.tool = new PolygonTool();\r\n            } else if (geometryToolType === 'BoxTool') {\r\n                this.toolContext.tool = new BoxTool();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { DirectGeometryObject, GeoJsonObject, Position } from 'geojson';\r\n\r\nexport type GeometryType =\r\n    'Point'\r\n    | 'LineString'\r\n    | 'Polygon'\r\n    | 'Geometry'\r\n    | 'MultiPoint'\r\n    | 'MultiLineString'\r\n    | 'MultiPolygon'\r\n    | 'Geometry'\r\n    | 'GeometryCollection';\r\n\r\nconst WKT_GEOMETRY_TYPES = new Set([\r\n                                       'POINT',\r\n                                       'LINESTRING',\r\n                                       'POLYGON',\r\n                                       'MULTIPOINT',\r\n                                       'MULTILINESTRING',\r\n                                       'MULTIPOLYGON',\r\n                                       'GEOMETRYCOLLECTION',\r\n                                   ]);\r\n\r\nconst WKT_GEOMETRIES_TEXT = new Array(WKT_GEOMETRY_TYPES.values()).map(s => `\"${s}\"`).join(', ');\r\n\r\nfunction isAlpha(c: string) {\r\n    return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z');\r\n}\r\n\r\nfunction parseFloatWithError(textValue: string, errorText?: string) {\r\n    const value = parseFloat(textValue);\r\n    if (isNaN(value) && textValue.toLowerCase() !== 'nan') {\r\n        throw new Error(errorText || 'Value must be a number.');\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function validateGeometryValue(value: string, geometryType: GeometryType) {\r\n    if (!value) {\r\n        return;\r\n    }\r\n    value = value.trim();\r\n    if (value === '') {\r\n        return;\r\n    }\r\n\r\n    let isWKT = false;\r\n    if (isAlpha(value)) {\r\n        isWKT = true;\r\n        // Quick and dirty WKT validation\r\n        let i = 1;\r\n        for (; i < value.length && isAlpha(value[i]); i++) {\r\n        }\r\n\r\n        const geometryName = value.substr(0, i).toUpperCase();\r\n        value = value.substr(i);\r\n\r\n        validateWKTGeometryType(geometryName, geometryType);\r\n        validateWKTBody(value, geometryName);\r\n    }\r\n\r\n    let coordParts = value.split(/[\\s,()]+/);\r\n    let i1;\r\n    let i2;\r\n    if (coordParts.length && coordParts[0] === '') {\r\n        i1 = 1;\r\n    }\r\n    if (coordParts.length && coordParts[coordParts.length - 1] === '') {\r\n        i2 = coordParts.length - 1;\r\n    }\r\n\r\n    if (i1 > 0 && i2 > 0) {\r\n        coordParts = coordParts.slice(i1, i2);\r\n    } else if (i1 > 0) {\r\n        coordParts = coordParts.slice(i1);\r\n    } else if (i2 > 0) {\r\n        coordParts = coordParts.slice(0, i2);\r\n    }\r\n    if (coordParts.length % 2 !== 0) {\r\n        throw new Error('Illegal number of coordinates.');\r\n    }\r\n    if (!isWKT) {\r\n        if (geometryType === 'Point') {\r\n            if (coordParts.length !== 2) {\r\n                throw new Error('Point must have \"<Longitude>, <Latitude>\" syntax.');\r\n            }\r\n        } else if (geometryType === 'Polygon') {\r\n            if (coordParts.length !== 4) {\r\n                throw new Error('Bounding box must have \"<E>, <S>, <W>, <N>\" syntax.');\r\n            }\r\n        } else {\r\n            throw new Error('Invalid WKT.');\r\n        }\r\n    }\r\n    for (let i = 0; i < coordParts.length; i += 2) {\r\n        const lon = parseFloatWithError(coordParts[i], 'Longitude value must be a number.');\r\n        const lat = parseFloatWithError(coordParts[i + 1], 'Latitude value must be a number.');\r\n        validateGeoCoordinate(lon, lat);\r\n    }\r\n}\r\n\r\nfunction validateWKTGeometryType(value: string, geometryType: GeometryType) {\r\n    const geometryTypeUC = geometryType.toUpperCase();\r\n\r\n    if (geometryType === 'Geometry') {\r\n        if (!WKT_GEOMETRY_TYPES.has(value)) {\r\n            throw new Error(`${geometryType} WKT must start with one of ${WKT_GEOMETRIES_TEXT}.`)\r\n        }\r\n    } else {\r\n        if (!value.startsWith(geometryTypeUC)) {\r\n            throw new Error(`${geometryType} WKT must start with \"${geometryTypeUC}\".`)\r\n        }\r\n    }\r\n}\r\n\r\nfunction validateWKTBody(value: string, geometryType: string) {\r\n    let expectedMinCommaCount;\r\n    let expectedMinDepthCount;\r\n    let expectedMaxDepthCount;\r\n    if (geometryType === 'POINT') {\r\n        expectedMinCommaCount = 0;\r\n        expectedMinDepthCount = 1;\r\n        expectedMaxDepthCount = 1;\r\n    } else if (geometryType === 'LINESTRING') {\r\n        expectedMinCommaCount = 1;\r\n        expectedMinDepthCount = 1;\r\n        expectedMaxDepthCount = 1;\r\n    } else if (geometryType === 'POLYGON') {\r\n        expectedMinCommaCount = 3;\r\n        expectedMinDepthCount = 2;\r\n        expectedMaxDepthCount = 2;\r\n    } else if (geometryType === 'MULTIPOINT') {\r\n        expectedMinCommaCount = 1;\r\n        expectedMinDepthCount = 1;\r\n        expectedMaxDepthCount = 2;\r\n    } else if (geometryType === 'MULTILINESTRING') {\r\n        expectedMinCommaCount = 1;\r\n        expectedMinDepthCount = 2;\r\n        expectedMaxDepthCount = 2;\r\n    } else if (geometryType === 'MULTIPOLYGON') {\r\n        expectedMinCommaCount = 3;\r\n        expectedMinDepthCount = 3;\r\n        expectedMaxDepthCount = 3;\r\n    } else if (geometryType === 'GEOMETRYCOLLECTION') {\r\n        expectedMinCommaCount = 0;\r\n        expectedMinDepthCount = 1;\r\n        expectedMaxDepthCount = 3;\r\n    }\r\n    let commaCount = 0;\r\n    let depthCount = 0;\r\n    let maxDepthCount = 0;\r\n    for (let i = 0; i < value.length; i++) {\r\n        let c = value[i];\r\n        if (c === '(') {\r\n            depthCount++;\r\n            if (depthCount > expectedMaxDepthCount) {\r\n                throw new Error('Invalid WKT, too many \"(\".');\r\n            }\r\n            maxDepthCount = Math.max(maxDepthCount, depthCount);\r\n        } else if (c === ')') {\r\n            depthCount--;\r\n            if (depthCount < 0) {\r\n                throw new Error('Invalid WKT, too many \")\".');\r\n            }\r\n            if (depthCount === 0) {\r\n                if (commaCount < expectedMinCommaCount) {\r\n                    throw new Error('Invalid WKT, too few coordinates.');\r\n                }\r\n                commaCount = 0;\r\n            }\r\n        } else if (c === ',') {\r\n            commaCount++;\r\n        }\r\n    }\r\n    if (depthCount !== 0) {\r\n        throw new Error('Invalid WKT, too many \"(\".');\r\n    }\r\n    if (maxDepthCount < expectedMinDepthCount) {\r\n        throw new Error('Invalid WKT, too few \"(\".');\r\n    }\r\n}\r\n\r\nexport function validateGeoCoordinate(lon: number, lat: number) {\r\n    if (lon < -180 || lon > 180) {\r\n        throw new Error('Longitude must be in the range -180 to +180 degrees.');\r\n    }\r\n    if (lat < -90 || lat > 90) {\r\n        throw new Error('Latitude must be in the range -90 to +90 degrees.');\r\n    }\r\n}\r\n\r\nexport function isBox(geometry: DirectGeometryObject) {\r\n    if (geometry.type === 'Polygon' && geometry.coordinates.length === 1) {\r\n        const positions = geometry.coordinates[0] as Position[];\r\n        if (positions.length === 5) {\r\n            const x0 = positions[0][0];\r\n            const y0 = positions[0][1];\r\n            const x1 = positions[1][0];\r\n            const y1 = positions[1][1];\r\n            const x2 = positions[2][0];\r\n            const y2 = positions[2][1];\r\n            const x3 = positions[3][0];\r\n            const y3 = positions[3][1];\r\n            const x4 = positions[4][0];\r\n            const y4 = positions[4][1];\r\n            const dx1 = x1 - x0;\r\n            const dy1 = y1 - y0;\r\n            const dx2 = x2 - x1;\r\n            const dy2 = y2 - y1;\r\n            const dx3 = x3 - x2;\r\n            const dy3 = y3 - y2;\r\n            const dx4 = x4 - x3;\r\n            const dy4 = y4 - y3;\r\n            return (dx1 === 0.0 && dy2 === 0 && dx3 === 0.0 && dy4 === 0)\r\n                   || (dy1 === 0 && dx2 === 0.0 && dy3 === 0 && dx4 === 0.0);\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function geometryGeoJsonToCsv(geometry: DirectGeometryObject, sep?: string) {\r\n    sep = sep || ',';\r\n    const header = `longitude${sep}latitude\\n`;\r\n    if (geometry.type === 'Point') {\r\n        const position = geometry.coordinates;\r\n        return `${header}${position[0]}${sep}${position[1]}\\n`;\r\n    } else if (geometry.type === 'LineString') {\r\n        const coordinates = geometry.coordinates;\r\n        let a = [];\r\n        for (let position of coordinates) {\r\n            a.push(`${position[0]}${sep}${position[1]}\\n`)\r\n        }\r\n        return `${header}${a.join('')}`;\r\n    } else if (geometry.type === 'Polygon') {\r\n        const coordinates = geometry.coordinates;\r\n        let a = [];\r\n        for (let ring of coordinates) {\r\n            if (a.length > 0) {\r\n                a.push(`# hole:\\n`)\r\n            }\r\n            for (let position of ring as any) {\r\n                a.push(`${position[0]}${sep}${position[1]}\\n`)\r\n            }\r\n        }\r\n        return `${header}${a.join('')}`;\r\n    }\r\n    return '';\r\n}\r\n\r\nexport function geometryGeoJsonToGeometryWkt(geometry: DirectGeometryObject): string {\r\n\r\n    if (geometry.type === 'Point') {\r\n        const position = geometry.coordinates;\r\n        return `POINT (${position[0]} ${position[1]})`\r\n    } else if (geometry.type === 'LineString') {\r\n        const coordinates = geometry.coordinates;\r\n        let a = [];\r\n        for (let position of coordinates) {\r\n            a.push(`${position[0]} ${position[1]}`)\r\n        }\r\n        return `LINESTRING (${a.join(', ')})`;\r\n    } else if (geometry.type === 'Polygon') {\r\n        const coordinates = geometry.coordinates;\r\n        let a1 = [];\r\n        for (let ring of coordinates) {\r\n            let a2 = [];\r\n            for (let position of ring as any) {\r\n                a2.push(`${position[0]} ${position[1]}`)\r\n            }\r\n            a1.push(`(${a2.join(', ')})`)\r\n        }\r\n        return `POLYGON (${a1.join(', ')})`;\r\n    }\r\n    return '';\r\n}\r\n\r\n\r\nexport function geoJsonToText(geoJson: GeoJsonObject) {\r\n    return JSON.stringify(geoJson, null, 2);\r\n}\r\n","import * as React from 'react';\nimport { CSSProperties } from 'react';\nimport { connect, DispatchProp } from 'react-redux';\nimport {\n    LayerState,\n    OperationState,\n    Placemark,\n    PlacemarkCollection,\n    ResourceState,\n    SPLIT_MODE_OFF,\n    State,\n    VariableImageLayerState,\n    WorkspaceState,\n    WorldViewDataState,\n} from '../state';\nimport * as selectors from '../selectors';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from '../selectors';\nimport * as actions from '../actions';\nimport { NO_WEB_GL } from '../messages';\nimport {\n    CanvasPosition,\n    CesiumGlobe,\n    GeographicPosition,\n    ImageLayerDescriptor,\n    LayerDescriptors\n} from '../components/cesium/CesiumGlobe';\nimport { findVariableIndexCoordinates, getWorkspaceId, PLACEMARK_ID_PREFIX } from '../state-util';\nimport { ViewState } from '../components/ViewState';\nimport { convertLayersToLayerDescriptors } from './globe-view-layers';\nimport * as Cesium from 'cesium';\nimport { GeometryToolType } from '../components/cesium/geometry-tool';\nimport { BaseMapOptions, entityToGeoJson, entityToGeometryWkt } from '../components/cesium/cesium-util';\nimport { featurePropertiesFromSimpleStyle, SimpleStyle } from '../../common/geojson-simple-style';\nimport { Menu, MenuDivider, MenuItem } from '@blueprintjs/core';\nimport { GEOMETRY_LIKE_TYPE, POINT_LIKE_TYPE, POLYGON_LIKE_TYPE } from '../../common/cate-types';\nimport { geometryGeoJsonToGeometryWkt } from '../../common/geometry-util';\n\ninterface IGlobeViewOwnProps {\n    view: ViewState<WorldViewDataState>;\n}\n\ninterface IGlobeViewProps extends IGlobeViewOwnProps {\n    baseUrl: string;\n    operations: OperationState[] | null;\n    workspace: WorkspaceState | null;\n    offlineMode: boolean;\n    placemarks: PlacemarkCollection;\n    selectedLayer: LayerState | null;\n    selectedLayerId: string | null;\n    selectedPlacemarkId: string | null;\n    baseMapOptions: BaseMapOptions | null,\n    isDialogOpen: boolean;\n    showLayerTextOverlay: boolean;\n    debugWorldView: boolean;\n    hasWebGL: boolean;\n    externalObjectStore: any;\n    newPlacemarkToolType: GeometryToolType;\n    defaultPlacemarkStyle: SimpleStyle;\n}\n\nfunction mapStateToProps(state: State, ownProps: IGlobeViewOwnProps): IGlobeViewProps {\n    return {\n        view: ownProps.view,\n        baseUrl: selectors.webAPIRestUrlSelector(state),\n        operations: selectors.operationsSelector(state),\n        workspace: selectors.workspaceSelector(state),\n        offlineMode: selectors.offlineModeSelector(state),\n        placemarks: selectors.placemarkCollectionSelector(state),\n        selectedLayer: selectors.selectedLayerSelector(state),\n        selectedLayerId: selectors.selectedLayerIdSelector(state),\n        selectedPlacemarkId: selectors.selectedPlacemarkIdSelector(state),\n        baseMapOptions: selectors.baseMapOptionsSelector(state),\n        isDialogOpen: selectors.isDialogOpenSelector(state),\n        showLayerTextOverlay: state.session.showLayerTextOverlay,\n        debugWorldView: state.session.debugWorldView,\n        hasWebGL: state.data.hasWebGL,\n        externalObjectStore: selectors.externalObjectStoreSelector(state),\n        newPlacemarkToolType: selectors.newPlacemarkToolTypeSelector(state),\n        defaultPlacemarkStyle: selectors.defaultPlacemarkStyleSelector(state),\n    };\n}\n\n/**\n * This component displays a 3D globe with a number of layers.\n */\nclass GlobeView extends React.Component<IGlobeViewProps & IGlobeViewOwnProps & DispatchProp<State>> {\n    static readonly CESIUM_GLOBE_STYLE: CSSProperties = {\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden'\n    };\n    static readonly POS_UPDATE_PERIOD: number = 500;\n\n    intervalHandle: number | null;\n    lastPosition: GeographicPosition | null;\n    positionChanged: boolean;\n\n    constructor(props: IGlobeViewProps & IGlobeViewOwnProps & DispatchProp<State>) {\n        super(props);\n        this.intervalHandle = null;\n        this.lastPosition = null;\n        this.positionChanged = false;\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleSelectedEntityChanged = this.handleSelectedEntityChanged.bind(this);\n        this.handleNewEntityAdded = this.handleNewEntityAdded.bind(this);\n        this.handleSplitLayerPosChange = this.handleSplitLayerPosChange.bind(this);\n        this.handlePosDataUpdate = this.handlePosDataUpdate.bind(this);\n        this.renderContextMenu = this.renderContextMenu.bind(this);\n    }\n\n    componentDidMount(): void {\n        this.intervalHandle = window.setInterval(this.handlePosDataUpdate, GlobeView.POS_UPDATE_PERIOD);\n    }\n\n    componentWillUnmount(): void {\n        window.clearInterval(this.intervalHandle);\n    }\n\n    handlePosDataUpdate() {\n        if (this.positionChanged) {\n            this.props.dispatch(actions.setGlobeViewPosition(this.lastPosition) as any);\n            this.positionChanged = false;\n        }\n    }\n\n    handleMouseMove(newPosition: GeographicPosition | undefined | null) {\n        const lastPosition = this.lastPosition;\n        if (newPosition !== lastPosition) {\n            if (!newPosition || !lastPosition\n                || newPosition.longitude !== lastPosition.longitude\n                || newPosition.latitude !== lastPosition.latitude) {\n                this.props.dispatch(actions.setGlobeMousePosition(newPosition));\n                this.lastPosition = newPosition;\n                this.positionChanged = true;\n            }\n        }\n    }\n\n    handleSelectedEntityChanged(selectedEntity: Cesium.Entity | null) {\n        this.props.dispatch(actions.notifySelectedEntityChange(this.props.view.id, this.props.selectedLayer, selectedEntity) as any);\n    }\n\n    handleNewEntityAdded(newEntity: Cesium.Entity) {\n        // Logic should actually go to actions.ts or reducers.ts, but newEntity:Cesium.Entity is not serializable.\n        const properties = this.newPlacemarkProperties();\n        const feature = entityToGeoJson(newEntity, `${PLACEMARK_ID_PREFIX}${newEntity.id}`, properties);\n        this.props.dispatch(actions.addPlacemark(feature as Placemark));\n    }\n\n    handleSplitLayerPosChange(layerSplitPosition: number) {\n        this.props.dispatch(actions.setLayerSplitPosition(this.props.view.id, layerSplitPosition));\n    }\n\n    renderContextMenu(geoPos: GeographicPosition, canvasPos: CanvasPosition, entity?: Cesium.Entity) {\n\n        if (!geoPos && !entity) {\n            return null;\n        }\n\n        const entityId = entity && entity.id;\n        let placemark;\n        if (entityId && entityId.startsWith(PLACEMARK_ID_PREFIX) && this.props.placemarks) {\n            placemark = this.props.placemarks.features.find(p => p.id === entityId);\n        }\n\n        let wkt;\n        if (placemark) {\n            wkt = geometryGeoJsonToGeometryWkt(placemark.geometry);\n        } else if (entity) {\n            wkt = entityToGeometryWkt(entity);\n        } else if (geoPos) {\n            wkt = `POINT (${geoPos.longitude} ${geoPos.latitude})`;\n        }\n\n        let key = 0;\n\n        const menuItems = [];\n        if (geoPos) {\n            const properties = this.newPlacemarkProperties();\n            const action = actions.addPointPlacemark(geoPos.longitude, geoPos.latitude, properties);\n            menuItems.push(<MenuItem key={key}\n                                     icon=\"map-marker\"\n                                     text=\"Place point marker here\"\n                                     onClick={() => this.props.dispatch(action)}/>);\n            key++;\n        }\n\n        if (wkt) {\n            menuItems.push(<MenuItem key={key} icon=\"clipboard\" text=\"Copy geometry WKT\"\n                                     onClick={() => actions.copyTextToClipboard(wkt)}/>);\n            key++;\n        }\n\n        const operations = this.props.operations;\n        if (entity && operations) {\n\n            let expectedInputType;\n            if (wkt.startsWith('POINT ')) {\n                expectedInputType = POINT_LIKE_TYPE;\n            } else if (wkt.startsWith('POLYGON ')) {\n                expectedInputType = POLYGON_LIKE_TYPE;\n            }\n\n            if (expectedInputType) {\n                let dividerAdded = false;\n                for (let operation of operations) {\n                    let geometryInput;\n                    for (let input of operation.inputs) {\n                        const dataType = input.dataType;\n                        if (dataType === expectedInputType || dataType === GEOMETRY_LIKE_TYPE) {\n                            geometryInput = input;\n                            break;\n                        }\n                    }\n                    if (geometryInput) {\n                        if (!dividerAdded) {\n                            menuItems.push(<MenuDivider key={key}/>);\n                            dividerAdded = true;\n                            key++;\n                        }\n                        const inputAssignments = {\n                            [geometryInput.name]: {\n                                isValueUsed: true,\n                                constantValue: wkt,\n                                resourceName: null\n                            }\n                        };\n                        const action = actions.invokeCtxOperation(operation, inputAssignments);\n                        const text = `${operation.name}()`;\n                        menuItems.push(<MenuItem key={key}\n                                                 icon=\"function\" text={text}\n                                                 onClick={() => this.props.dispatch(action as any)}/>);\n                        key++;\n                    }\n                }\n            }\n        }\n\n        return (<Menu>{menuItems}</Menu>);\n    }\n\n    private newPlacemarkProperties() {\n        return {visible: true, ...featurePropertiesFromSimpleStyle(this.props.defaultPlacemarkStyle)};\n    }\n\n    render() {\n        if (!this.props.hasWebGL) {\n            return NO_WEB_GL;\n        }\n\n        const view = this.props.view;\n        const viewId = this.props.view.id;\n        const layers = view.data.layers;\n        const placemarks = this.props.placemarks;\n        const showLayerTextOverlay = this.props.showLayerTextOverlay;\n        const workspace = this.props.workspace;\n        const resources = (workspace && workspace.resources) || EMPTY_ARRAY;\n\n        // TODO (nf): Note that following local vars descriptors, splitLayerIndex, overlayHtml...\n        // ...could be provided by selectors but there is a dependency on this.props.view which is\n        // an own component property.\n        // May be solved by\n        // - https://github.com/reactjs/reselect/blob/master/README.md#accessing-react-props-in-selectors\n        // - https://github.com/reactjs/reselect/blob/master/README.md#q-how-do-i-create-a-selector-that-takes-an-argument\n        //\n        let descriptors;\n        let selectedPlacemarkId = null;\n        if (workspace) {\n            const baseUrl = this.props.baseUrl;\n            const workspaceId = getWorkspaceId(workspace);\n            descriptors = convertLayersToLayerDescriptors(layers, resources, placemarks, baseUrl, workspaceId);\n            selectedPlacemarkId = this.props.selectedPlacemarkId;\n        } else {\n            descriptors = EMPTY_OBJECT as LayerDescriptors;\n        }\n        const imageLayerDescriptors = descriptors.imageLayerDescriptors || EMPTY_ARRAY;\n        const vectorLayerDescriptors = descriptors.vectorLayerDescriptors || EMPTY_ARRAY;\n        let splitLayerPosition;\n        if (hasSplitLayer(imageLayerDescriptors)) {\n            splitLayerPosition = view.data.layerSplitPosition;\n        }\n        const overlayHtml = getOverlayHtml(layers, showLayerTextOverlay, viewId, resources);\n\n        return (\n            <CesiumGlobe id={'CesiumGlobe-' + view.id}\n                         debug={this.props.debugWorldView}\n                         externalObjectStore={this.props.externalObjectStore}\n                         selectedPlacemarkId={selectedPlacemarkId}\n                         baseMapOptions={this.props.baseMapOptions}\n                         imageLayerDescriptors={imageLayerDescriptors}\n                         vectorLayerDescriptors={vectorLayerDescriptors}\n                         splitLayerPosition={splitLayerPosition}\n                         overlayHtml={overlayHtml}\n                         onLayerSplitPosChange={this.handleSplitLayerPosChange}\n                         offlineMode={this.props.offlineMode}\n                         style={GlobeView.CESIUM_GLOBE_STYLE}\n                         onMouseMove={this.props.isDialogOpen ? null : this.handleMouseMove}\n                         onSelectedEntityChanged={this.handleSelectedEntityChanged}\n                         onNewEntityAdded={this.handleNewEntityAdded}\n                         geometryToolType={this.props.newPlacemarkToolType}\n                         renderContextMenu={this.renderContextMenu}\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(GlobeView);\n\nfunction getOverlayHtml(layers: LayerState[],\n                        showLayerTextOverlay: boolean,\n                        viewId,\n                        resources: ResourceState[]): HTMLDivElement {\n    let overlayHtml: HTMLDivElement = null;\n    if (!showLayerTextOverlay) {\n        return overlayHtml;\n    }\n    // let layerInfoCount = 0;\n    for (let layerIndex = 0; layerIndex < layers.length; layerIndex++) {\n        let layer = layers[layerIndex] as any as VariableImageLayerState;\n        if (layer.type === 'VariableImage') {\n            if (layer.visible) {\n                const indexCoords = findVariableIndexCoordinates(resources, layer);\n                if (!overlayHtml) {\n                    overlayHtml = document.createElement('div');\n                    overlayHtml.id = 'CesiumGlobeOverlay-' + viewId;\n                    overlayHtml.style.position = 'absolute';\n                    overlayHtml.style['z-index'] = 10;\n                    overlayHtml.style['pointer-events'] = 'none';\n                    overlayHtml.style['padding'] = '1em';\n                    overlayHtml.style['background-color'] = 'rgba(0, 0, 0, 0.25)';\n                }\n                let varText;\n                if (indexCoords && indexCoords.length) {\n                    varText = layer.name + ' at ' + indexCoords.map(e => e.join(' = ')).join(', ');\n                } else {\n                    varText = layer.name;\n                }\n                const textDivElement = document.createElement('div');\n                textDivElement.style['font-size'] = '1.4em';\n                textDivElement.innerText = varText;\n                overlayHtml.appendChild(textDivElement);\n                overlayHtml.style.top = '0';\n                overlayHtml.style.width = '100%';\n                // layerInfoCount++;\n            }\n        }\n    }\n    return overlayHtml;\n}\n\nfunction hasSplitLayer(layerDescriptors: ImageLayerDescriptor[]) {\n    for (let ld of layerDescriptors) {\n        const splitMode = ld.splitMode || SPLIT_MODE_OFF;\n        if (splitMode !== SPLIT_MODE_OFF) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n","const _DEBUG_WEB_SOCKET_RPC = false;\r\n\r\nexport type MplFigureMessageCallback = (message: string) => any;\r\nexport type MplFigureCommandData = { name: string };\r\nexport type MplFigureCommandListener = (figureId: number, commandData: MplFigureCommandData) => void;\r\n\r\n/**\r\n * A source for figure commands.\r\n */\r\nexport interface MplFigureCommandSource {\r\n    addCommandListener(figureId: number, listener: MplFigureCommandListener): void;\r\n\r\n    removeCommandListener(figureId: number, listener: MplFigureCommandListener): void;\r\n\r\n    removeCommandListeners(figureId: number): void;\r\n}\r\n\r\n/**\r\n * Default impl. of MplFigureCommandSource interface\r\n */\r\nexport class MplFigureCommandSourceImpl implements MplFigureCommandSource {\r\n    private listenersMap: { [id: number]: Set<MplFigureCommandListener> };\r\n\r\n    constructor() {\r\n        this.listenersMap = {};\r\n        this.dispatchCommand = this.dispatchCommand.bind(this);\r\n    }\r\n\r\n    addCommandListener(figureId: number, listener: MplFigureCommandListener): void {\r\n        let listeners = this.listenersMap[figureId];\r\n        if (!listeners) {\r\n            listeners = new Set<MplFigureCommandListener>();\r\n            this.listenersMap[figureId] = listeners;\r\n        }\r\n        listeners.add(listener);\r\n        // console.log('MplFigureCommandSourceImpl.addCommandListener', figureId, listener);\r\n    }\r\n\r\n    removeCommandListener(figureId: number, listener: MplFigureCommandListener): void {\r\n        // console.log('MplFigureCommandSourceImpl.removeCommandListener', figureId, listener);\r\n        const listeners = this.listenersMap[figureId];\r\n        if (listeners) {\r\n            listeners.delete(listener);\r\n            if (listeners.size === 0) {\r\n                delete this.listenersMap[figureId];\r\n            }\r\n        }\r\n    }\r\n\r\n    removeCommandListeners(figureId: number): void {\r\n        // console.log('MplFigureCommandSourceImpl.removeCommandListeners', figureId);\r\n        delete this.listenersMap[figureId];\r\n    }\r\n\r\n    dispatchCommand(figureId: number, commandData: MplFigureCommandData) {\r\n        const listeners = this.listenersMap[figureId];\r\n        if (listeners) {\r\n            listeners.forEach((listener: MplFigureCommandListener) => {\r\n                listener(figureId, commandData);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Represents a figure in matplotlib's web backend.\r\n * This class is a port of \"mpl.js\" from matplotlib's web_agg.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class MplFigure {\r\n\r\n    readonly id: number;\r\n    private webSocket: WebSocket;\r\n    private commandSource?: MplFigureCommandSource;\r\n    private onMessage?: MplFigureMessageCallback;\r\n    private parentElement: HTMLDivElement;\r\n    private figureImageCanvas: HTMLCanvasElement;\r\n    private rubberBandCanvas: HTMLCanvasElement;\r\n    private imageObj: any;\r\n    private imageMode: string;\r\n    private waiting: boolean;\r\n    private lastKey: number | null;\r\n    private resizeTimer: number | null;\r\n    private lastSize: { width: number; height: number };\r\n\r\n    constructor(figureId: number,\r\n                webSocketUrl: string,\r\n                parentElement: HTMLDivElement,\r\n                commandSource?: MplFigureCommandSource,\r\n                onMessage?: MplFigureMessageCallback) {\r\n\r\n        this.id = figureId;\r\n        this.parentElement = parentElement;\r\n        this.commandSource = commandSource;\r\n        this.onMessage = onMessage;\r\n        this.imageMode = 'full';\r\n        this.imageObj = new Image();\r\n        this.lastSize = {width: 0, height: 0};\r\n\r\n        this.handleCommand = this.handleCommand.bind(this);\r\n        this.processMessage = this.processMessage.bind(this);\r\n\r\n        this.initCanvas();\r\n\r\n        this.waiting = false;\r\n\r\n        this.imageObj.onload = () => {\r\n            const canvasContext = this.figureImageCanvas.getContext('2d');\r\n            if (this.imageMode === 'full') {\r\n                // Full resources could contain transparency (where diff resources\r\n                // almost always do), so we need to clear the canvas so that\r\n                // there is no ghosting.\r\n                canvasContext.clearRect(0, 0, this.figureImageCanvas.width, this.figureImageCanvas.height);\r\n            }\r\n            canvasContext.drawImage(this.imageObj, 0, 0);\r\n        };\r\n\r\n        this.imageObj.onunload = function () {\r\n            this.webSocket.removeEventListener('message', this.processMessage);\r\n        };\r\n\r\n        this.webSocket = new WebSocket(webSocketUrl);\r\n        this.webSocket.onopen = () => {\r\n            if (this.commandSource) {\r\n                this.commandSource.addCommandListener(this.id, this.handleCommand);\r\n            }\r\n\r\n            this.webSocket.addEventListener('message', this.processMessage);\r\n            const supportsBinary = !!this.webSocket.binaryType;\r\n            if (!supportsBinary) {\r\n                console.warn('This browser does not support binary websocket messages. ' +\r\n                             'Figure update performance may be slow.');\r\n            }\r\n            this.sendMessage('supports_binary', {value: supportsBinary});\r\n            this.sendMessage('send_image_mode');\r\n            this.sendRefresh();\r\n            this.sendResize();\r\n\r\n            this.resizeTimer = window.setInterval(() => {\r\n                const width = this.parentElement.clientWidth;\r\n                const height = this.parentElement.clientHeight;\r\n                const validSize = width > 0 && height > 0;\r\n                const sizeChange = this.lastSize.width !== width || this.lastSize.height !== height;\r\n                if (validSize && sizeChange) {\r\n                    this.lastSize = {width, height};\r\n                    this.sendResize(width, height);\r\n                }\r\n            }, 500);\r\n        };\r\n\r\n        this.webSocket.onclose = () => {\r\n            if (this.commandSource) {\r\n                this.commandSource.removeCommandListener(this.id, this.handleCommand);\r\n            }\r\n            if (this.resizeTimer) {\r\n                window.clearInterval(this.resizeTimer);\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Calls a command on this figure.\r\n     *\r\n     * @param figureId An object that must have a property \"name\" of type string.\r\n     * @param commandData An object that must have a property \"name\" of type string.\r\n     */\r\n    private handleCommand(figureId: number, commandData: MplFigureCommandData): void {\r\n        if (figureId === this.id) {\r\n            this.sendMessage('toolbar_button', commandData);\r\n        } else {\r\n            console.warn(`received invalid figure ID: expected #${this.id}, got #${figureId} for data ${commandData}`);\r\n        }\r\n    }\r\n\r\n    private initCanvas() {\r\n        const handleKeyboardEvent = this.handleKeyboardEvent.bind(this);\r\n        this.parentElement.onkeydown = wrapEvent('key_press', handleKeyboardEvent);\r\n        this.parentElement.onkeyup = wrapEvent('key_release', handleKeyboardEvent);\r\n        this.parentElement.onwheel = (event: WheelEvent) => {\r\n            const name = 'scroll';\r\n            const step = (event.deltaY < 0) ? 1 : -1;\r\n            this.handleMouseEvent(event, {name, step});\r\n        };\r\n\r\n        const figureImageCanvas = document.createElement('canvas');\r\n        figureImageCanvas.id = 'mpl-figure-image-' + this.id;\r\n        figureImageCanvas.setAttribute('style', 'left: 0; top: 0; z-index: 0; outline: 0');\r\n        this.figureImageCanvas = figureImageCanvas;\r\n\r\n        const rubberBandCanvas = document.createElement('canvas');\r\n        rubberBandCanvas.id = 'mpl-rubber-band-' + this.id;\r\n        rubberBandCanvas.setAttribute('style', 'position: absolute; left: 0; top: 0; z-index: 1;');\r\n        const handleMouseEvent = this.handleMouseEvent.bind(this);\r\n        rubberBandCanvas.onmousedown = wrapEvent('button_press', handleMouseEvent);\r\n        rubberBandCanvas.onmouseup = wrapEvent('button_release', handleMouseEvent);\r\n        rubberBandCanvas.onmousemove = wrapEvent('motion_notify', handleMouseEvent);\r\n        rubberBandCanvas.onmouseenter = wrapEvent('figure_enter', handleMouseEvent);\r\n        rubberBandCanvas.onmouseleave = wrapEvent('figure_leave', handleMouseEvent);\r\n        const rubberBandContext = rubberBandCanvas.getContext('2d');\r\n        rubberBandContext.strokeStyle = '#000000';\r\n        this.rubberBandCanvas = rubberBandCanvas;\r\n\r\n        this.parentElement.appendChild(figureImageCanvas);\r\n        this.parentElement.appendChild(rubberBandCanvas);\r\n    }\r\n\r\n    private resizeCanvas(width, height) {\r\n        // Keep the size of the figure image canvas and rubber band canvas in sync.\r\n        this.figureImageCanvas.setAttribute('width', width);\r\n        this.figureImageCanvas.setAttribute('height', height);\r\n        this.rubberBandCanvas.setAttribute('width', width);\r\n        this.rubberBandCanvas.setAttribute('height', height);\r\n    };\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n    // Outgoing messages\r\n\r\n    sendResize(width?: number, height?: number) {\r\n        width = width || this.parentElement.clientWidth;\r\n        height = height || this.parentElement.clientHeight;\r\n        // Request matplotlib to resize the figure. Matplotlib will then trigger a resize in the client,\r\n        // which will in turn request a refresh of the image.\r\n        this.sendMessage('resize', {width, height});\r\n    }\r\n\r\n    sendDrawMessage() {\r\n        if (!this.waiting) {\r\n            this.waiting = true;\r\n            this.sendMessage('draw');\r\n        }\r\n    }\r\n\r\n    sendRefresh() {\r\n        this.sendMessage('refresh');\r\n    }\r\n\r\n    sendCanvasUpdated() {\r\n        // Called whenever the canvas gets updated.\r\n        this.sendMessage('ack');\r\n    }\r\n\r\n    sendMessage(type: string, properties?: any) {\r\n        const jsonText = JSON.stringify({...properties, type, figure_id: this.id});\r\n        if (_DEBUG_WEB_SOCKET_RPC) {\r\n            console.log(`MplFigure.sendMessage: ${jsonText}`);\r\n        }\r\n        this.webSocket.send(jsonText);\r\n    }\r\n\r\n    // Outgoing messages\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Process incoming WebSocket messages.\r\n     *\r\n     * @param evt The WebSocket message event\r\n     */\r\n    private processMessage(evt: MessageEvent) {\r\n        // console.log(`MplFigure.processMessage: ${evt.data}`);\r\n        if (evt.data instanceof Blob) {\r\n            const blobData = evt.data as any;\r\n\r\n            /* Free the memory for the previous frames */\r\n            if (this.imageObj.src) {\r\n                (window.URL || window['webkitURL']).revokeObjectURL(this.imageObj.src);\r\n            }\r\n\r\n            this.imageObj.src = (window.URL || window['webkitURL']).createObjectURL(blobData);\r\n            this.sendCanvasUpdated();\r\n            this.waiting = false;\r\n            return;\r\n        } else if (typeof evt.data === 'string' && evt.data.slice(0, 21) === 'data:image/png;base64') {\r\n            this.imageObj.src = evt.data;\r\n            this.sendCanvasUpdated();\r\n            this.waiting = false;\r\n            return;\r\n        }\r\n\r\n        const jsonText = evt.data;\r\n        const msg = JSON.parse(jsonText);\r\n        const msgType = msg['type'];\r\n\r\n        // Call the  \"handle_${msgType}\" callback, which takes\r\n        // the JSON message as its only argument.\r\n        try {\r\n            const callback = this['handle_' + msgType];\r\n            if (callback) {\r\n                try {\r\n                    // console.log(`Calling: handle_${msg_type}(${jsonText})`);\r\n                    callback.bind(this)(msg);\r\n                } catch (e) {\r\n                    console.error('Exception inside the \\'handler_' + msgType + '\\' callback:', e, e.stack, msg);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('No handler for the \\'' + msgType + '\\' message type: ', msg);\r\n        }\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n    // Handlers for incoming messages\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private handle_resize(msg) {\r\n        const size = msg['size'];\r\n        if (size[0] !== this.figureImageCanvas.width || size[1] !== this.figureImageCanvas.height) {\r\n            this.resizeCanvas(size[0], size[1]);\r\n            this.sendRefresh();\r\n        }\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private handle_rubberband(msg) {\r\n        let x0 = msg['x0'];\r\n        let y0 = this.figureImageCanvas.height - msg['y0'];\r\n        let x1 = msg['x1'];\r\n        let y1 = this.figureImageCanvas.height - msg['y1'];\r\n        x0 = Math.floor(x0) + 0.5;\r\n        //noinspection JSSuspiciousNameCombination\r\n        y0 = Math.floor(y0) + 0.5;\r\n        x1 = Math.floor(x1) + 0.5;\r\n        //noinspection JSSuspiciousNameCombination\r\n        y1 = Math.floor(y1) + 0.5;\r\n        const xMin = Math.min(x0, x1);\r\n        const yMin = Math.min(y0, y1);\r\n        const width = Math.abs(x1 - x0);\r\n        const height = Math.abs(y1 - y0);\r\n\r\n        const rubberBandCanvasContext = this.rubberBandCanvas.getContext('2d');\r\n        rubberBandCanvasContext.clearRect(0, 0, this.figureImageCanvas.width, this.figureImageCanvas.height);\r\n        rubberBandCanvasContext.strokeRect(xMin, yMin, width, height);\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private handle_figure_label(msg) {\r\n        // console.warn(`MplFigure.handle_figure_label() - unhandled, figure #${this.id}`, msg);\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private handle_message(msg) {\r\n        if (this.onMessage) {\r\n            this.onMessage(msg['message']);\r\n        }\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private handle_cursor(msg) {\r\n        const cursor = msg['cursor'];\r\n        this.rubberBandCanvas.style.cursor = {0: 'pointer', 1: 'default', 2: 'crosshair', 3: 'move'}[cursor];\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private handle_draw() {\r\n        // Request the server to send over a new figure.\r\n        this.sendDrawMessage();\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private handle_image_mode(msg) {\r\n        this.imageMode = msg['mode'];\r\n    }\r\n\r\n    // Handlers for incoming messages\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n\r\n    private handleMouseEvent(event: MouseEvent, extraData) {\r\n        const name = extraData.name;\r\n        const step = extraData.step;\r\n        const canvas_pos = findpos(event);\r\n\r\n        if (name === 'button_press') {\r\n            this.figureImageCanvas.focus();\r\n            this.parentElement.focus();\r\n        }\r\n\r\n        const x = canvas_pos.x;\r\n        const y = canvas_pos.y;\r\n\r\n        this.sendMessage(name, {\r\n            x, y,\r\n            button: event.button,\r\n            step,\r\n            guiEvent: simpleKeys(event)\r\n        });\r\n\r\n        /* This prevents the web browser from automatically changing to\r\n         * the text insertion cursor when the button is pressed.  We want\r\n         * to control all of the cursor setting manually through the\r\n         * 'cursor' event from matplotlib */\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    private handleKeyboardEvent(event: KeyboardEvent, extraData) {\r\n        const name = extraData.name;\r\n\r\n        // Prevent repeat events\r\n        if (name === 'key_press') {\r\n            if (event.which === this.lastKey)\r\n                return;\r\n            else\r\n                this.lastKey = event.which;\r\n        }\r\n        if (name === 'key_release')\r\n            this.lastKey = null;\r\n\r\n        let value = '';\r\n        if (event.ctrlKey && event.which !== 17)\r\n            value += 'ctrl+';\r\n        if (event.altKey && event.which !== 18)\r\n            value += 'alt+';\r\n        if (event.shiftKey && event.which !== 16)\r\n            value += 'shift+';\r\n\r\n        value += 'k';\r\n        value += event.which.toString();\r\n\r\n        this.sendMessage(name, {\r\n            key: value,\r\n            guiEvent: simpleKeys(event)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction wrapEvent<E extends Event>(name: string, callback: (event: E, userData: any) => void): (event: E) => void {\r\n    return (event: E) => {\r\n        callback(event, {name});\r\n    };\r\n}\r\n\r\n// from http://stackoverflow.com/questions/1114465/getting-mouse-location-in-canvas\r\nfunction findpos(e: MouseEvent) {\r\n    //this section is from http://www.quirksmode.org/js/events_properties.html\r\n    let targ;\r\n    if (e.target)\r\n        targ = e.target;\r\n    else if (e.srcElement)\r\n        targ = e.srcElement;\r\n    if (targ.nodeType === 3) // defeat Safari bug\r\n        targ = targ.parentNode;\r\n\r\n    const bodyRect = document.body.getBoundingClientRect();\r\n    const elemRect = targ.getBoundingClientRect();\r\n    const offsetX = elemRect.left - bodyRect.left;\r\n    const offsetY = elemRect.top - bodyRect.top;\r\n\r\n    const x = e.pageX - offsetX;\r\n    const y = e.pageY - offsetY;\r\n\r\n    return {'x': x, 'y': y};\r\n}\r\n\r\n/*\r\n * return a copy of an object with only non-object keys\r\n * we need this to avoid circular references\r\n * http://stackoverflow.com/a/24161582/3208463\r\n */\r\nfunction simpleKeys(original) {\r\n    return Object.keys(original).reduce(function (obj, key) {\r\n        if (typeof original[key] !== 'object')\r\n            obj[key] = original[key];\r\n        return obj;\r\n    }, {});\r\n}\r\n","import { ExternalObjectComponent, IExternalObjectComponentProps } from '../ExternalObjectComponent'\r\nimport { MplFigure, MplFigureCommandSource, MplFigureMessageCallback } from './MplFigure';\r\n\r\n\r\nexport interface FigureState {\r\n    figureUpdateCount: number;\r\n}\r\n\r\ninterface IFigureContainerProps extends IExternalObjectComponentProps<MplFigure, FigureState>, FigureState {\r\n    figureId: number;\r\n    figureUpdateCount: number;\r\n    figureHeight?: any;\r\n    webSocketUrl: string;\r\n    commandSource?: MplFigureCommandSource;\r\n    onMessage?: MplFigureMessageCallback;\r\n}\r\n\r\n/**\r\n * A component that wraps a div that holds a matplotlib figure.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class MplFigureContainer extends ExternalObjectComponent<MplFigure, FigureState, IFigureContainerProps, null> {\r\n\r\n    propsToExternalObjectState(props: IFigureContainerProps & FigureState, prevState?: FigureState): FigureState {\r\n        return {figureUpdateCount: props.figureUpdateCount};\r\n    }\r\n\r\n    newContainer(id: string): HTMLDivElement {\r\n        const figureDiv = document.createElement('div');\r\n        figureDiv.setAttribute('id', 'mpl-figure-container-' + id);\r\n        figureDiv.setAttribute('style', 'width: 100%; position: relative;');\r\n        if (this.props.figureHeight) {\r\n            figureDiv.style.height = this.props.figureHeight;\r\n        }\r\n        if (this.props.debug) {\r\n            console.log('MplFigureContainer.newContainer:', figureDiv);\r\n        }\r\n        return figureDiv;\r\n    }\r\n\r\n    newExternalObject(parentContainer: HTMLElement, figureDiv: HTMLDivElement): MplFigure {\r\n        return new MplFigure(this.props.figureId,\r\n                             this.props.webSocketUrl,\r\n                             figureDiv,\r\n                             this.props.commandSource,\r\n                             this.props.onMessage);\r\n    }\r\n\r\n    updateExternalObject(figure: MplFigure,\r\n                         prevState: FigureState,\r\n                         nextState: FigureState,\r\n                         parentContainer: HTMLElement,\r\n                         container: HTMLElement): void {\r\n        if (this.props.debug) {\r\n            console.log('MplFigureContainer.updateExternalObject: ', figure, prevState, nextState);\r\n        }\r\n        if (prevState && prevState.figureUpdateCount !== nextState.figureUpdateCount) {\r\n            figure.sendRefresh();\r\n            figure.sendResize();\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {CSSProperties} from 'react';\r\nimport {AnchorButton, IconName, Intent, PopoverPosition, Tooltip} from '@blueprintjs/core';\r\n\r\nexport interface IToolButtonProps {\r\n    onClick?: () => void;\r\n    className?: string;\r\n    disabled?: boolean;\r\n    icon?: IconName;\r\n    intent?: Intent;\r\n    tooltipContent?: JSX.Element | string;\r\n    tooltipPosition?: PopoverPosition;\r\n    style?: CSSProperties;\r\n    text?: string;\r\n    active?: boolean;\r\n    large?: boolean;\r\n}\r\n\r\nexport function ToolButton(props: IToolButtonProps) {\r\n    let className;\r\n    if (!props.large) {\r\n        className = 'bp3-small';\r\n    }\r\n    if (props.className && props.className !== '') {\r\n        className = `${className} ${props.className}`;\r\n    }\r\n    const button = (\r\n        <AnchorButton\r\n            className={className}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled}\r\n            icon={props.icon}\r\n            intent={props.intent}\r\n            style={props.style}\r\n            text={props.text}\r\n            active={props.active}\r\n        />\r\n    );\r\n    if (props.tooltipContent) {\r\n        return (\r\n            <Tooltip\r\n                content={props.tooltipContent}\r\n                position={props.tooltipPosition || PopoverPosition.AUTO}\r\n            >\r\n                {button}\r\n            </Tooltip>\r\n        );\r\n    } else {\r\n        return button;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { MplFigureCommandListener, MplFigureCommandSourceImpl } from './MplFigure';\r\nimport { MplFigureContainer } from './MplFigureContainer';\r\nimport { ButtonGroup, Tag } from '@blueprintjs/core';\r\nimport { ToolButton } from '../ToolButton';\r\n\r\n\r\ninterface IFigurePanelProps {\r\n    id: string;\r\n    figureId: number;\r\n    figureUpdateCount: number;\r\n    figureName: string;\r\n    figureHeight?: any;\r\n    webSocketUrl: string;\r\n    onDownload: MplFigureCommandListener;\r\n}\r\n\r\ninterface IFigurePanelState {\r\n    message?: string;\r\n}\r\n\r\nconst FIGURE_COMMAND_SOURCE = new MplFigureCommandSourceImpl();\r\n\r\n\r\n/**\r\n * A component that wraps a div that holds a matplotlib figure.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class MplFigurePanel extends React.Component<IFigurePanelProps, IFigurePanelState> {\r\n    static readonly DIV_STYLE: CSSProperties = {width: '100%', overflow: 'auto'};\r\n    static readonly CONTAINER_DIV_STYLE: CSSProperties = {\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        padding: '0.2em 0.2em 0 0.2em'\r\n    };\r\n\r\n    constructor(props: IFigurePanelProps) {\r\n        super(props);\r\n        this.state = {};\r\n        this.handleFigureMessage = this.handleFigureMessage.bind(this);\r\n    }\r\n\r\n    // TODO (forman): inform MplFigurePanel if view is closed!\r\n    static handleClose(figureId: number) {\r\n        FIGURE_COMMAND_SOURCE.removeCommandListeners(figureId);\r\n    }\r\n\r\n    handleFigureMessage(message: string) {\r\n        this.setState({message});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={MplFigurePanel.DIV_STYLE}>\r\n                <MplFigureContainer figureId={this.props.figureId}\r\n                                    figureUpdateCount={this.props.figureUpdateCount}\r\n                                    figureHeight={this.props.figureHeight || '30em'}\r\n                                    id={this.props.id}\r\n                                    debug={false}\r\n                                    webSocketUrl={this.props.webSocketUrl}\r\n                                    style={MplFigurePanel.CONTAINER_DIV_STYLE}\r\n                                    commandSource={FIGURE_COMMAND_SOURCE}\r\n                                    onMessage={this.handleFigureMessage}/>\r\n                <MplFigureToolbar figureId={this.props.figureId}\r\n                                  message={this.state.message}\r\n                                  onCommand={FIGURE_COMMAND_SOURCE.dispatchCommand}\r\n                                  onDownload={this.props.onDownload}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface IMplFigureToolbarProps {\r\n    figureId: number;\r\n    message: string;\r\n    onCommand: MplFigureCommandListener;\r\n    onDownload: MplFigureCommandListener;\r\n}\r\n\r\nclass MplFigureToolbar extends React.PureComponent<IMplFigureToolbarProps, null> {\r\n\r\n    static readonly DIV_STYLE: CSSProperties = {display: 'flex', alignItems: 'center', padding: '0.2em'};\r\n\r\n    commands: any[];\r\n\r\n    constructor(props: IMplFigureToolbarProps) {\r\n        super(props);\r\n\r\n        this.commands = [\r\n            {\r\n                label: 'Home',\r\n                tooltip: 'Reset original view',\r\n                icon: 'home',\r\n                name: 'home',\r\n            },\r\n            {\r\n                label: 'Back',\r\n                tooltip: 'Back to  previous view',\r\n                icon: 'chevron-left',\r\n                name: 'back',\r\n            },\r\n            {\r\n                label: 'Forward',\r\n                tooltip: 'Forward to next view',\r\n                icon: 'chevron-right',\r\n                name: 'forward',\r\n            },\r\n            {\r\n                label: 'Pan',\r\n                tooltip: 'Pan axes with left mouse, zoom with right',\r\n                icon: 'move',\r\n                name: 'pan',\r\n            },\r\n            {\r\n                label: 'Zoom',\r\n                tooltip: 'Zoom to rectangle',\r\n                icon: 'zoom-in',\r\n                name: 'zoom',\r\n            },\r\n            {\r\n                label: 'Save As',\r\n                tooltip: 'Save as image',\r\n                icon: 'download',\r\n                name: 'download',\r\n            }\r\n        ];\r\n\r\n        for (let command of this.commands) {\r\n            const name = command['name'];\r\n            let callback;\r\n            if (name === 'download') {\r\n                callback = () => {\r\n                    // console.log(`MplFigureToolbar: \"${name}\" clicked for figure #${this.props.figureId}!`);\r\n                    this.props.onDownload(this.props.figureId, {name});\r\n                };\r\n            } else {\r\n                callback = () => {\r\n                    // console.log(`MplFigureToolbar: \"${name}\" clicked for figure #${this.props.figureId}!`);\r\n                    this.props.onCommand(this.props.figureId, {name});\r\n                };\r\n            }\r\n            command['callback'] = callback;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttons = [];\r\n        for (let i in this.commands) {\r\n            const command = this.commands[i];\r\n            const name = command['name'];\r\n            if (name) {\r\n                const tooltipText = command['tooltip'];\r\n                const icon = command['icon'];\r\n                const onClick = command['callback'];\r\n                buttons.push(\r\n                    <ToolButton key={i}\r\n                                tooltipContent={tooltipText}\r\n                                icon={icon}\r\n                                onClick={onClick}/>\r\n                );\r\n            }\r\n        }\r\n\r\n        let messageTag;\r\n        if (this.props.message) {\r\n            messageTag = (<Tag className=\"bp3-minimal\">{this.props.message}</Tag>);\r\n        }\r\n\r\n        return (\r\n            <div style={MplFigureToolbar.DIV_STYLE}>\r\n                {messageTag}\r\n                <span style={{flex: 'auto'}}/>\r\n                <ButtonGroup>{buttons}</ButtonGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\nimport { FigureViewDataState, ResourceState, State } from '../state';\nimport { connect, DispatchProp } from 'react-redux';\nimport { ViewState } from '../components/ViewState';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\nimport { MplFigurePanel } from '../components/matplotlib/MplFigurePanel';\nimport { getMPLDownloadUrl, getMPLWebSocketUrl } from '../state-util';\nimport { Card } from '@blueprintjs/core';\n\n\ninterface IFigureViewOwnProps {\n    view: ViewState<FigureViewDataState>;\n}\n\ninterface IFigureViewProps extends IFigureViewOwnProps {\n    baseUrl: string;\n    workspaceId: string | null;\n    figureResources: ResourceState[];\n    mplWebSocketUrl: string;\n}\n\nfunction mapStateToProps(state: State, ownProps: IFigureViewOwnProps): IFigureViewProps {\n    return {\n        view: ownProps.view,\n        baseUrl: selectors.webAPIRestUrlSelector(state),\n        workspaceId: selectors.workspaceIdSelector(state),\n        figureResources: selectors.figureResourcesSelector(state),\n        mplWebSocketUrl: selectors.mplWebSocketUrlSelector(state),\n    };\n}\n\n/**\n * This component displays a 2D map with a number of layers.\n */\nclass FigureView extends React.Component<IFigureViewProps & DispatchProp<State>, null> {\n    static readonly DIV_STYLE = {width: '100%', height: '100%', overflowX: 'hidden', overflowY: 'auto'};\n\n    constructor(props: IFigureViewProps & DispatchProp<State>) {\n        super(props);\n        this.onDownload = this.onDownload.bind(this);\n    }\n\n    onDownload(figureId: number) {\n        const imageBaseUrl = getMPLDownloadUrl(this.props.baseUrl, this.props.workspaceId, figureId);\n        this.props.dispatch(actions.saveFigureImageAs(imageBaseUrl, figureId) as any);\n    }\n\n    render() {\n        const view = this.props.view;\n        const workspaceId =  this.props.workspaceId;\n        const figureResource = this.getFigureResource();\n        if (workspaceId === null || !figureResource) {\n            return (<Card>Figure not found.</Card>);\n        }\n        const compId = `MplFigurePanel-${figureResource.id}-${view.id}`;\n        return (\n            <MplFigurePanel\n                key={compId}\n                id={compId}\n                figureId={figureResource.id}\n                figureUpdateCount={figureResource.updateCount}\n                figureName={figureResource.name}\n                webSocketUrl={getMPLWebSocketUrl(\n                  this.props.mplWebSocketUrl,\n                  workspaceId,\n                  figureResource.id\n                )}\n                onDownload={this.onDownload}\n            />\n        );\n    }\n\n    getFigureResource(): ResourceState | null {\n        const figureViewData = this.props.view.data;\n        return this.props.figureResources.find(r => r.id === figureViewData.resourceId);\n    }\n}\n\nexport default connect(mapStateToProps)(FigureView);\n\n\n","import * as React from 'react';\nimport { State, WebAPIServiceInfo } from '../state';\nimport { ModalDialog } from '../components/ModalDialog';\nimport { connect, DispatchProp } from 'react-redux';\nimport * as selectors from '../selectors';\nimport { ServiceInfoAPI } from '../webapi/apis/ServiceInfoAPI';\n\n// Duration in seconds the ServiceAutoCloseDialog is\n// shown before server auto-shutdown.\n//\nconst DIALOG_DURATION_MIN = (process.env.NODE_ENV === 'development' ? 1 : 15) * 60;\n\ninterface IServiceAutoShutdownDialogProps {\n    webAPIServiceInfo: WebAPIServiceInfo | null;\n    webAPIServiceURL: string;\n}\n\nfunction mapStateToProps(state: State): IServiceAutoShutdownDialogProps {\n    return {\n        webAPIServiceInfo: selectors.webAPIServiceInfoSelector(state),\n        webAPIServiceURL: selectors.webAPIServiceURLSelector(state),\n    };\n}\n\nconst ServiceAutoShutdownDialog: React.FC<IServiceAutoShutdownDialogProps & DispatchProp<State>> = (\n    {\n        webAPIServiceInfo,\n        webAPIServiceURL,\n    }\n) => {\n    if (!webAPIServiceInfo) {\n        return null;\n    }\n\n    const autoStopInfo = webAPIServiceInfo.autoStopInfo;\n    if (!autoStopInfo) {\n        return null;\n    }\n\n    const {availableTime, remainingTime, inactivityTime} = autoStopInfo;\n    if (!availableTime || !remainingTime || !inactivityTime) {\n        return null;\n    }\n\n    const remainingTimeMin = 1;  // = dialog disappears 1s before shutdown\n    const remainingTimeMax = Math.max(DIALOG_DURATION_MIN, 0.75 * availableTime);\n    const shouldShow = remainingTime > remainingTimeMin\n                       && remainingTime < remainingTimeMax;\n    if (!shouldShow) {\n        return null;\n    }\n\n    const canConfirm = () => {\n        return true;\n    }\n\n    const handleClose = () => {\n        // Make any harmless REST call so the\n        // server's inactivity timer is reset:\n        try {\n            // noinspection JSIgnoredPromiseFromCall\n            new ServiceInfoAPI().getServiceInfo(webAPIServiceURL);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const renderBody = () => {\n        return (\n            <div>\n                <p>\n                    The Cate service will shut down soon due to inactivity\n                    since {formatSeconds(inactivityTime)}. After the shutdown\n                    you will need to reconnect/login first. Unsaved changes will be lost.\n                </p>\n                <p>\n                    The remaining time is <strong>{formatSeconds(remainingTime)}</strong>.\n                </p>\n                <p>\n                    Press \"Keep Alive\" to prevent the shutdown.\n                </p>\n            </div>\n        );\n    }\n\n    return (\n        <ModalDialog\n            isOpen={true}\n            title=\"Service Shutdown Ahead\"\n            icon=\"offline\"\n            noCancelButton={true}\n            confirmTitle=\"Keep Alive\"\n            confirmIconName=\"link\"\n            confirmTooltip=\"Requests keeping the service available.\"\n            onCancel={handleClose}\n            onConfirm={handleClose}\n            canConfirm={canConfirm}\n            renderBody={renderBody}\n        />\n    );\n}\n\nexport default connect(mapStateToProps)(ServiceAutoShutdownDialog);\n\n\nfunction formatSeconds(value: number): string {\n    const hours = Math.floor(value / 3600);\n    const remainder = value - hours * 3600;\n    const minutes = Math.floor(remainder / 60);\n    const seconds = Math.round(remainder - minutes * 60);\n    const parts = [];\n    if (hours > 0) {\n        parts.push(`${hours} hour${hours !== 1 ? 's': ''}`);\n    }\n    if (minutes > 0) {\n        parts.push(`${minutes} minute${minutes !== 1 ? 's': ''}`);\n    }\n    parts.push(`${seconds} second${seconds !== 1 ? 's': ''}`);\n    return parts.join(', ');\n}","import * as React from 'react';\nimport { hideShutdownDialog } from '../actions';\nimport { State } from '../state';\nimport { ModalDialog } from '../components/ModalDialog';\nimport { connect, DispatchProp } from 'react-redux';\nimport * as selectors from '../selectors';\nimport { ServiceShutdownAPI } from '../webapi';\n\n\nconst DIALOG_ID = \"shutdownDialog\";\n\ninterface IServiceShutdownDialogProps {\n    isOpen: boolean;\n    webAPIServiceURL: string;\n}\n\nfunction mapStateToProps(state: State): IServiceShutdownDialogProps {\n    const dialogState = selectors.dialogStateSelector(DIALOG_ID)(state);\n\n    return {\n        isOpen: dialogState.isOpen,\n        webAPIServiceURL: selectors.webAPIServiceURLSelector(state),\n    };\n}\n\nconst ServiceShutdownDialog: React.FC<IServiceShutdownDialogProps & DispatchProp<State>> = (\n    {\n        isOpen,\n        webAPIServiceURL,\n        dispatch\n    }\n) => {\n    let [waiting, setWaiting] = React.useState(false);\n\n    if (!isOpen) {\n        return null;\n    }\n\n    const handleShutdown = () => {\n        // Make any harmless REST call so the\n        // server's inactivity timer is reset:\n        try {\n            setWaiting(true);\n            // noinspection JSIgnoredPromiseFromCall\n            new ServiceShutdownAPI().shutdown(webAPIServiceURL).then(() => {\n                dispatch(hideShutdownDialog());\n            });\n        } catch (error) {\n            setWaiting(false);\n        }\n    }\n\n    const handleClose = () => {\n        dispatch(hideShutdownDialog());\n    }\n\n    const renderBody = () => {\n        return (\n            <p>\n                This will shut down the Cate service.\n                Unsaved changes will be lost.\n            </p>\n        );\n    }\n\n    return (\n        <ModalDialog\n            isOpen={true}\n            title=\"Service Shutdown\"\n            icon=\"offline\"\n            noCancelButton={false}\n            confirmTitle=\"Shutdown\"\n            confirmIconName=\"offline\"\n            canConfirm={() => !waiting}\n            onConfirm={handleShutdown}\n            onCancel={handleClose}\n            renderBody={renderBody}\n        />\n    );\n}\n\nexport default connect(mapStateToProps)(ServiceShutdownDialog);\n\n","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { ResourceState, State, TableViewDataState } from '../state';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { ViewState } from '../components/ViewState';\r\nimport { Spinner } from '@blueprintjs/core';\r\nimport { Cell, Column, Table } from '@blueprintjs/table';\r\nimport * as assert from '../../common/assert';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { LOADING_TABLE_DATA_FAILED, NO_TABLE_DATA } from '../messages';\r\n\r\ninterface ITableViewOwnProps {\r\n    view: ViewState<TableViewDataState>;\r\n}\r\n\r\ninterface ITableViewProps {\r\n    viewId: string;\r\n    viewData: TableViewDataState,\r\n    resources: ResourceState[];\r\n    resNames: string[];\r\n}\r\n\r\nfunction mapStateToProps(state: State, ownProps: ITableViewOwnProps): ITableViewProps {\r\n    return {\r\n        viewId: ownProps.view.id,\r\n        viewData: ownProps.view.data,\r\n        resources: selectors.resourcesSelector(state),\r\n        resNames: selectors.resourceNamesSelector(state),\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * This component displays a 2D map with a number of layers.\r\n */\r\nclass TableView extends React.PureComponent<ITableViewProps & ITableViewOwnProps & DispatchProp<State>, null> {\r\n    static readonly TABLE_CONTAINER_STYLE: CSSProperties = {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    };\r\n    static readonly LOADING_CONTAINER_STYLE: CSSProperties = {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center' as any\r\n    };\r\n\r\n    componentWillMount(): void {\r\n        const viewData = this.props.viewData;\r\n        if (!viewData.dataRows && !viewData.isLoading && !viewData.error) {\r\n            this.props.dispatch(actions.loadTableViewData(this.props.viewId, viewData.resName, viewData.varName) as any);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={TableView.TABLE_CONTAINER_STYLE}>\r\n                {this.renderDataTable()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderDataTable() {\r\n        const viewData = this.props.viewData;\r\n        assert.ok(viewData);\r\n\r\n        if (viewData.isLoading) {\r\n            return (\r\n                <div style={TableView.LOADING_CONTAINER_STYLE}>\r\n                    <Spinner className=\"bp3-large\"/>\r\n                    <p>Loading table data...</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (viewData.error) {\r\n            return LOADING_TABLE_DATA_FAILED(viewData.error);\r\n        }\r\n\r\n        const dataRows = viewData.dataRows;\r\n        if (!dataRows || !dataRows.length) {\r\n            return NO_TABLE_DATA;\r\n        }\r\n\r\n        const firstRow = dataRows[0];\r\n        const columnNames = Object.getOwnPropertyNames(firstRow).filter(name => name !== '');\r\n\r\n        const getData = (row: number, col: number) => {\r\n            return dataRows[row][columnNames[col]];\r\n        };\r\n\r\n        const children = [];\r\n        for (let i in columnNames) {\r\n            const renderCell = (row: number, col: number) => {\r\n                return (<Cell>{getData(row, col)}</Cell>);\r\n            };\r\n            children.push(<Column key={i} name={columnNames[i]} cellRenderer={renderCell}/>);\r\n        }\r\n\r\n        return (<Table numRows={dataRows.length}\r\n                       enableRowHeader={true}\r\n                       getCellClipboardData={getData}\r\n                       children={children as any}/>);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TableView);\r\n\r\n","import * as React from 'react'\r\n\r\nexport type SplitDir = 'hor' | 'ver';\r\n\r\n// TODO (forman): add splitter width, color, handleIcon, etc. style props\r\ninterface ISplitterProps {\r\n    dir?: SplitDir;\r\n    onChange: (delta: number) => any;\r\n}\r\n\r\ninterface IButtonEvent {\r\n    button: number;\r\n    buttons: number;\r\n}\r\n\r\ninterface IScreenEvent {\r\n    screenX: number;\r\n    screenY: number;\r\n}\r\n\r\ntype EventListenerItem = [string, (any) => any];\r\n\r\n\r\n/**\r\n * A splitter component.\r\n * In order to work properly, clients must provide the onChange which is a callback that receives the delta position\r\n * either in x-direction if direction is \"hor\" or y-direction if direction is \"ver\". The callback must then\r\n * adjust either a container's width if direction is \"hor\" or its height if direction is \"ver\".\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class Splitter extends React.PureComponent<ISplitterProps, any> {\r\n    private lastPosition: null | number = null;\r\n    private bodyEventListeners: Array<EventListenerItem>;\r\n\r\n    constructor(props: ISplitterProps) {\r\n        super(props);\r\n        if (!props.onChange) {\r\n            throw Error('onChange property must be provided');\r\n        }\r\n        this.bodyEventListeners = [\r\n            ['mousemove', this.onBodyMouseMove.bind(this)],\r\n            ['mouseup', this.onBodyMouseUp.bind(this)],\r\n            ['onmouseenter', this.onBodyMouseEnter.bind(this)],\r\n            ['onmouseleave', this.onBodyMouseLeave.bind(this)],\r\n        ];\r\n    }\r\n\r\n    private onMouseDown(event: React.MouseEvent<HTMLDivElement>) {\r\n        if (this.isButton1Pressed(event)) {\r\n            this.lastPosition = this.getCurrentPosition(event);\r\n            this.removeBodyMouseListeners();\r\n            this.addBodyMouseListeners();\r\n        } else {\r\n            this.lastPosition = null;\r\n        }\r\n    }\r\n\r\n    private onBodyMouseMove(event: MouseEvent) {\r\n        if (this.lastPosition === null || !this.isButton1Pressed(event)) {\r\n            return;\r\n        }\r\n        const currentPosition = this.getCurrentPosition(event);\r\n        const positionDelta = currentPosition - this.lastPosition;\r\n        this.lastPosition = currentPosition;\r\n        if (positionDelta !== 0) {\r\n            this.props.onChange(positionDelta);\r\n        }\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private onBodyMouseUp(event: MouseEvent) {\r\n        // console.log(\"onBodyMouseUp: \", event, this);\r\n        this.endDragging();\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private onBodyMouseEnter(event: MouseEvent) {\r\n        // console.log(\"onBodyMouseEnter: \", event, this);\r\n        this.endDragging();\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private onBodyMouseLeave(event: MouseEvent) {\r\n        // console.log(\"onBodyMouseLeave: \", event, this);\r\n        this.endDragging();\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    private isButton1Pressed(event: IButtonEvent) {\r\n        return event.button === 0 && event.buttons === 1;\r\n    }\r\n\r\n    private getCurrentPosition(event: IScreenEvent) {\r\n        return this.props.dir === 'hor' ? event.screenX : event.screenY;\r\n    }\r\n\r\n    private endDragging() {\r\n        this.removeBodyMouseListeners();\r\n        this.lastPosition = null;\r\n    }\r\n\r\n    private addBodyMouseListeners() {\r\n        this.bodyEventListeners.forEach((pair: EventListenerItem) =>\r\n                                            document.body.addEventListener(pair[0], pair[1]));\r\n    }\r\n\r\n    private removeBodyMouseListeners() {\r\n        this.bodyEventListeners.forEach((pair: EventListenerItem) =>\r\n                                            document.body.removeEventListener(pair[0], pair[1]));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeBodyMouseListeners();\r\n    }\r\n\r\n    render() {\r\n        const className = this.props.dir === 'hor' ? 'cate-splitter-hor' : 'cate-splitter-ver';\r\n        return (\r\n            <div\r\n                className={className}\r\n                onMouseDown={this.onMouseDown.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import * as React from 'react'\r\nimport { SplitDir, Splitter } from './Splitter';\r\n\r\n\r\nexport interface ISplitPaneProps {\r\n    dir: SplitDir;\r\n    initialSize?: number;\r\n    onChange?: (newSize: number, oldSize: number) => void;\r\n}\r\n\r\nexport interface ISplitPaneState {\r\n    size: number;\r\n}\r\n\r\n/**\r\n * A simple SplitPane component which must have exactly two child elements.\r\n *\r\n * Properties:\r\n * - dir: the split direction, either \"hor\" or \"ver\"\r\n * - initialSize: the initial width (\"hor\") or height (\"ver\") of the first child's container\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class SplitPane extends React.PureComponent<ISplitPaneProps, ISplitPaneState> {\r\n\r\n    constructor(props: ISplitPaneProps) {\r\n        super(props);\r\n        this.handleSplitDelta = this.handleSplitDelta.bind(this);\r\n        this.state = {size: props.initialSize};\r\n    }\r\n\r\n    private handleSplitDelta(delta: number) {\r\n        this.setState((state: ISplitPaneState) => {\r\n            const oldSize = state.size;\r\n            const newSize = oldSize + delta;\r\n            if (this.props.onChange) {\r\n                this.props.onChange(newSize, oldSize);\r\n            }\r\n            return {size: newSize};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let containerClass;\r\n        let childContainer1Style;\r\n        let childContainer2Style;\r\n        const splitterSize = 4; // px\r\n        if (this.props.dir === 'hor') {\r\n            const width1 = this.state.size;\r\n            const width2 = `calc(100% - ${width1 + splitterSize}px)`;\r\n            containerClass = 'cate-split-pane-hor';\r\n            childContainer1Style = {flex: 'none', width: width1, height: '100%'};\r\n            childContainer2Style = {flex: 'auto', width: width2, height: '100%'};\r\n        } else {\r\n            const height1 = this.state.size;\r\n            const height2 = `calc(100% - ${height1 + splitterSize}px)`;\r\n            containerClass = 'cate-split-pane-ver';\r\n            childContainer1Style = {flex: 'none', width: '100%', height: height1};\r\n            childContainer2Style = {flex: 'auto', width: '100%', height: height2};\r\n        }\r\n        return (\r\n            <div className={containerClass}>\r\n                <div style={childContainer1Style}>\r\n                    {this.props.children[0]}\r\n                </div>\r\n                <Splitter dir={this.props.dir} onChange={this.handleSplitDelta}/>\r\n                <div style={childContainer2Style}>\r\n                    {this.props.children[1]}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { SplitPane } from './SplitPane';\r\nimport { Switch } from '@blueprintjs/core';\r\n\r\n\r\nexport interface IContentWithDetailsPanelProps {\r\n    showDetails: boolean;\r\n    onShowDetailsChange: (value: boolean) => void;\r\n    contentHeight?: number;\r\n    onContentHeightChange?: (value: number) => void;\r\n    actionComponent?: JSX.Element | null;\r\n    isSplitPanel?: boolean;\r\n}\r\n\r\n\r\nexport class ContentWithDetailsPanel extends React.PureComponent<IContentWithDetailsPanelProps, any> {\r\n\r\n    constructor(props: IContentWithDetailsPanelProps) {\r\n        super(props);\r\n        this.handleSwitchChange = this.handleSwitchChange.bind(this);\r\n        this.handleContentHeightChange = this.handleContentHeightChange.bind(this);\r\n    }\r\n\r\n    private handleSwitchChange(event) {\r\n        this.props.onShowDetailsChange(event.target.checked);\r\n    }\r\n\r\n    private handleContentHeightChange(newSize: number, oldSize: number) {\r\n        if (this.props.onContentHeightChange) {\r\n            this.props.onContentHeightChange(newSize);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const contentChild = this.props.children[0];\r\n        const detailsChild = this.props.children[1];\r\n\r\n        const detailsSwitch = (<Switch checked={this.props.showDetails}\r\n                                       style={{alignSelf: 'flex-end', marginBottom: 0}}\r\n                                       label=\"Details\"\r\n                                       disabled={!detailsChild}\r\n                                       onChange={this.handleSwitchChange}/>);\r\n\r\n        const detailsContentPanel = this.props.showDetails ? detailsChild : null;\r\n\r\n        let detailsControlPanel;\r\n        if (this.props.actionComponent) {\r\n            detailsControlPanel = (\r\n                <div style={{display: 'flex', alignItems: 'flex-end'}}>\r\n                    {detailsSwitch}\r\n                    <span style={{flex: 'auto'}}/>\r\n                    {this.props.actionComponent}\r\n                </div>\r\n            );\r\n        } else {\r\n            detailsControlPanel = detailsSwitch;\r\n        }\r\n\r\n        const detailsPanel = (\r\n            <div>\r\n                {detailsControlPanel}\r\n                {detailsContentPanel}\r\n            </div>\r\n        );\r\n\r\n        let contentWithDetailsPanel;\r\n        if (this.props.isSplitPanel) {\r\n            contentWithDetailsPanel = (\r\n                <SplitPane dir=\"ver\"\r\n                           initialSize={this.props.contentHeight || 300}\r\n                           onChange={this.handleContentHeightChange}>\r\n                    {contentChild}\r\n                    {detailsPanel}\r\n                </SplitPane>);\r\n        } else {\r\n            contentWithDetailsPanel = (\r\n                <div>\r\n                    {contentChild}\r\n                    {detailsPanel}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return contentWithDetailsPanel;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { AnchorButton } from '@blueprintjs/core';\r\n\r\nimport { DataSourceState } from '../state';\r\nimport { getDataSourceUrls } from '../state-util';\r\n\r\n\r\ninterface DataSourceLinksProps {\r\n    dataSource: DataSourceState;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nconst DataSourceLinks: React.FC<DataSourceLinksProps> = (\r\n    {\r\n        dataSource,\r\n        style,\r\n    }) => {\r\n\r\n    const {catalogUrl, infoUrl} = getDataSourceUrls(dataSource);\r\n    if (!catalogUrl && !infoUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div style={{display: \"flex\", justifyContent: \"flex-end\", ...style}}>\r\n            {catalogUrl &&\r\n             <AnchorButton\r\n                 href={catalogUrl}\r\n                 target={\"_blank\"}\r\n                 style={{float: 'right', margin: 4}}>\r\n                 Catalogue\r\n             </AnchorButton>}\r\n            {infoUrl &&\r\n             <AnchorButton\r\n                 href={infoUrl}\r\n                 target={\"_blank\"}\r\n                 style={{float: 'right', margin: 4}}>\r\n                 More Info\r\n             </AnchorButton>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataSourceLinks;\r\n","import * as React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGFM from 'remark-gfm';\r\nimport { Colors } from '@blueprintjs/core';\r\n\r\nconst CODE_STYLE = {\r\n    fontFamily: 'Source Code Pro, Consolas, monospace',\r\n    color: Colors.LIGHT_GRAY1,\r\n};\r\n\r\nconst MARKDOWN_COMPONENTS = {\r\n    em: ({node, ...props}) => <em className=\"user-selectable\" {...props}/>,\r\n    li: ({node, ...props}) => <li className=\"user-selectable\" {...props}/>,\r\n    p: ({node, ...props}) => <p className=\"user-selectable\" {...props}/>,\r\n    span: ({node, ...props}) => <span className=\"user-selectable\" {...props}/>,\r\n    div: ({node, ...props}) => <div className=\"user-selectable\" {...props}/>,\r\n    code: ({node, ...props}) => <code className=\"user-selectable\" style={CODE_STYLE} {...props}/>,\r\n    pre: ({node, ...props}) => <pre className=\"user-selectable\" style={CODE_STYLE} {...props}/>,\r\n};\r\n\r\ninterface IMarkdownProps {\r\n    source: string;\r\n}\r\n\r\nconst Markdown: React.FC<IMarkdownProps> = ({source}) => {\r\n    return (\r\n        <ReactMarkdown\r\n            remarkPlugins={[remarkGFM]}\r\n            components={MARKDOWN_COMPONENTS}\r\n            linkTarget='_blank'\r\n        >\r\n            {source}\r\n        </ReactMarkdown>\r\n    );\r\n}\r\n\r\n\r\nexport default Markdown;\r\n","import * as React from 'react'\r\nimport { CSSProperties, ReactNode } from 'react'\r\n\r\ninterface IScrollablePanelContentProps {\r\n    children?: ReactNode;\r\n}\r\n\r\nconst STYLE: CSSProperties = {width: '100%', height: '100%', overflow: 'auto'};\r\n\r\nexport function ScrollablePanelContent(props: IScrollablePanelContentProps) {\r\n    return (<div style={STYLE}>{props.children}</div>);\r\n}\r\n","import * as React from 'react';\r\nimport { Card, Tab, Tabs } from '@blueprintjs/core';\r\nimport { Cell, Column, Table, TruncatedFormat } from '@blueprintjs/table';\r\n\r\nimport { DataSourceState } from '../state';\r\nimport DataSourceLinks from './DataSourceLinks';\r\nimport Markdown from './Markdown';\r\nimport { ScrollablePanelContent } from './ScrollableContent';\r\n\r\n\r\nconst COVERAGE_PANEL_STYLE: React.CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around'\r\n};\r\n\r\ninterface DetailPart {\r\n    title: string;\r\n    id: string;\r\n    element: JSX.Element;\r\n}\r\n\r\ninterface IDataSourceDetailsProps {\r\n    dataSource: DataSourceState\r\n}\r\n\r\nconst DataSourceDetails: React.FC<IDataSourceDetailsProps> = ({dataSource}) => {\r\n\r\n    if (!dataSource) {\r\n        return null;\r\n    }\r\n\r\n    let metaInfoKeys;\r\n    let variables;\r\n\r\n    const metaInfo = dataSource.metaInfo;\r\n\r\n    if (metaInfo) {\r\n        metaInfoKeys = Object.keys(metaInfo).filter(key => key !== 'data_vars'\r\n                                                           && key !== 'coords');\r\n        if (metaInfo.data_vars) {\r\n            variables = metaInfo.data_vars;\r\n        }\r\n    }\r\n\r\n    const details: DetailPart[] = [\r\n        renderAbstract(dataSource),\r\n        renderVariablesTable(variables),\r\n        renderMetaInfoTable(metaInfo, metaInfoKeys),\r\n        renderMetaInfoLicences(metaInfo),\r\n    ];\r\n\r\n    return (\r\n        <Tabs id=\"dsDetails\" renderActiveTabPanelOnly={true}>\r\n            {details.map(d => <Tab key={d.id} id={d.id} title={d.title} panel={d.element}/>)}\r\n        </Tabs>\r\n    );\r\n}\r\n\r\nexport default DataSourceDetails;\r\n\r\n\r\nfunction renderAbstract(dataSource: DataSourceState): DetailPart {\r\n\r\n    const metaInfo = dataSource.metaInfo;\r\n\r\n    let spatialCoverage;\r\n    let temporalCoverage;\r\n    let summary;\r\n    if (metaInfo) {\r\n        if (Array.isArray(metaInfo.bbox)) {\r\n            const [x_min, y_min, x_max, y_max] = metaInfo.bbox;\r\n            spatialCoverage = (\r\n                <div>\r\n                    <h5>Spatial coverage</h5>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td/>\r\n                            <td className=\"user-selectable\">{y_max}&#176;</td>\r\n                            <td/>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"user-selectable\">{x_min}&#176;</td>\r\n                            <td/>\r\n                            <td className=\"user-selectable\">{x_max}&#176;</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td/>\r\n                            <td className=\"user-selectable\">{y_min}&#176;</td>\r\n                            <td/>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <br/>\r\n                </div>\r\n            );\r\n        }\r\n        if (dataSource.metaInfo && dataSource.metaInfo.time_range) {\r\n            let [start, end] = dataSource.metaInfo.time_range;\r\n            if (!start && !end) {\r\n                start = end = 'unknown';\r\n            } else if (!start) {\r\n                start = 'unknown';\r\n            } else if (!end) {\r\n                end = 'today';\r\n            }\r\n            temporalCoverage = (\r\n                <div><h5>Temporal coverage</h5>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>Start</td>\r\n                            <td className=\"user-selectable\">{start}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>End</td>\r\n                            <td className=\"user-selectable\">{end}</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <br/>\r\n                </div>\r\n            );\r\n        }\r\n        if (metaInfo.abstract) {\r\n            summary = (\r\n                <div><h5>Summary</h5>\r\n                    <Markdown source={metaInfo.abstract}/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    let element;\r\n    if (spatialCoverage || temporalCoverage || summary) {\r\n        element = (\r\n            <ScrollablePanelContent>\r\n                <Card>\r\n                    <DataSourceLinks dataSource={dataSource}/>\r\n                    <div style={COVERAGE_PANEL_STYLE}>\r\n                        {spatialCoverage}\r\n                        {temporalCoverage}\r\n                    </div>\r\n                    {summary}\r\n                </Card>\r\n            </ScrollablePanelContent>\r\n        );\r\n    } else {\r\n        element = (\r\n            <Card>\r\n                <DataSourceLinks dataSource={dataSource}/>\r\n                <p>No abstract available.</p>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    return {title: 'Abstract', id: 'abstract', element};\r\n}\r\n\r\nfunction renderVariablesTable(variables?: any[]): DetailPart {\r\n    let element;\r\n    if (variables && variables.length > 0) {\r\n        const renderName = (rowIndex: number) => {\r\n            const variable = variables[rowIndex];\r\n            return (\r\n                <Cell tooltip={variable.long_name}>\r\n                    <TruncatedFormat className=\"user-selectable\">{variable.name}</TruncatedFormat>\r\n                </Cell>\r\n            );\r\n        };\r\n\r\n        const renderUnit = (rowIndex: number) => {\r\n            const variable = variables[rowIndex];\r\n            return (\r\n                <Cell>\r\n                    <TruncatedFormat className=\"user-selectable\">{variable.units || '-'}</TruncatedFormat>\r\n                </Cell>\r\n            );\r\n        };\r\n\r\n        const getCellClipboardData = (row: number, col: number) => {\r\n            // TODO: implement me\r\n            console.error('not implemented: getCellClipboardData: ', row, col);\r\n        };\r\n\r\n        element = (\r\n            <Table numRows={variables.length}\r\n                   enableRowHeader={false}\r\n                   getCellClipboardData={getCellClipboardData}>\r\n                <Column name=\"Name\" cellRenderer={renderName}/>\r\n                <Column name=\"Units\" cellRenderer={renderUnit}/>\r\n            </Table>\r\n        );\r\n    } else {\r\n        element = <Card>No information about variables available.</Card>;\r\n    }\r\n    return {title: 'Variables', id: 'var', element};\r\n}\r\n\r\nfunction renderMetaInfoTable(metaInfo?: any, metaInfoKeys?: string[]): DetailPart {\r\n    let element;\r\n    if (metaInfo && metaInfoKeys) {\r\n\r\n        const renderKey = (rowIndex: number) => {\r\n            const key = metaInfoKeys[rowIndex];\r\n            return <Cell><TruncatedFormat>{key}</TruncatedFormat></Cell>;\r\n        };\r\n\r\n        const renderValue = (rowIndex: number) => {\r\n            const key = metaInfoKeys[rowIndex];\r\n            return <Cell><TruncatedFormat>{metaInfo[key]}</TruncatedFormat></Cell>;\r\n        };\r\n\r\n        const getCellClipboardData = (row: number, col: number) => {\r\n            // TODO: implement me\r\n            console.error('not implemented: getCellClipboardData: ', row, col);\r\n        };\r\n\r\n        element = (\r\n            <Table numRows={metaInfoKeys.length}\r\n                   enableRowHeader={false}\r\n                   getCellClipboardData={getCellClipboardData}>\r\n                <Column name=\"Key\" cellRenderer={renderKey}/>\r\n                <Column name=\"Value\" cellRenderer={renderValue}/>\r\n            </Table>\r\n        );\r\n    } else {\r\n        element = <Card>No global meta-information available.</Card>;\r\n    }\r\n\r\n    return {title: 'Meta-Info', id: 'meta', element};\r\n}\r\n\r\nfunction renderMetaInfoLicences(metaInfo: any): DetailPart {\r\n    let element;\r\n    if (metaInfo && metaInfo.licences) {\r\n        element = (\r\n            <div>\r\n                <Markdown source={metaInfo.licences}/>\r\n            </div>\r\n        );\r\n    } else {\r\n        element = <Card>No license information available.</Card>;\r\n    }\r\n    return {title: 'Licences', id: 'licences', element};\r\n}\r\n","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { Colors, Icon, Intent } from '@blueprintjs/core';\r\n\r\nimport { DataSourceState } from '../state';\r\n\r\nimport { EcvMeta } from '../ecv-meta';\r\nimport _ecvMeta from '../resources/ecv-meta.json';\r\nimport { canOpenDataSource } from '../state-util';\r\n\r\nconst ECV_META: EcvMeta = _ecvMeta;\r\n\r\n\r\nconst ITEM_STYLE: CSSProperties = {display: 'flex', alignItems: 'flex-start'};\r\nconst ID_STYLE: CSSProperties = {color: Colors.BLUE5, fontSize: '0.8em'};\r\nconst WARN_ICON_STYLE: CSSProperties = {marginRight: 4};\r\nconst DATA_TYPE_STYLE: CSSProperties = {color: Colors.GREEN4, fontSize: '0.8em', marginLeft: 4};\r\nconst TEXT_ICON_STYLE: CSSProperties = {\r\n    width: 32,\r\n    height: 32,\r\n    flex: 'none',\r\n    marginRight: 6,\r\n    borderRadius: 16,\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n};\r\n\r\ninterface DataSourceItemProps {\r\n    dataSource: DataSourceState;\r\n    showDataSourceIDs: boolean;\r\n}\r\n\r\nconst DataSourceItem: React.FC<DataSourceItemProps> = ({dataSource, showDataSourceIDs}) => {\r\n    const metaInfo = dataSource.metaInfo;\r\n\r\n    const {backgroundColor, label} = dataSourceToTextIconProps(dataSource);\r\n    const icon = <div style={{...TEXT_ICON_STYLE, backgroundColor}}>{label}</div>;\r\n\r\n    let title = dataSource.title || (metaInfo && metaInfo.title);\r\n    if (!title || title === dataSource.id) {\r\n        title = dataSourceToTitle(dataSource);\r\n    }\r\n\r\n    const isNotVerified = !canOpenDataSource(dataSource);\r\n    let warnIcon;\r\n    if (isNotVerified) {\r\n        warnIcon = <Icon icon={\"warning-sign\"} intent={Intent.WARNING} iconSize={16} style={WARN_ICON_STYLE}/>\r\n    }\r\n\r\n    let typeSpec;\r\n    if (dataSource.dataType) {\r\n        typeSpec = <span style={DATA_TYPE_STYLE}>{dataSource.dataType}</span>;\r\n    }\r\n\r\n    return (\r\n        <div style={ITEM_STYLE}>\r\n            {icon}\r\n            {showDataSourceIDs ? (\r\n                <div>\r\n                    <div className=\"user-selectable\">{warnIcon}{title}{typeSpec}</div>\r\n                    <div className=\"user-selectable\" style={ID_STYLE}>{dataSource.id}</div>\r\n                </div>\r\n            ) : (\r\n                 <span className=\"user-selectable\">{warnIcon}{title}{typeSpec}</span>\r\n             )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DataSourceItem;\r\n\r\n\r\nfunction dataSourceToTitle(dataSource: DataSourceState) {\r\n    const title = dataSource.id\r\n                            .replace(/\\./g, ' ')\r\n                            .replace(/-/g, ' ')\r\n                            .replace(/_/g, '-');\r\n    if (title.startsWith('esacci ')) {\r\n        return title.substr('esacci '.length);\r\n    }  else if (title.startsWith('ESACCI ')) {\r\n        return title.substr('ESACCI '.length);\r\n    }\r\n    return title;\r\n}\r\n\r\nfunction dataSourceToTextIconProps(dataSource: DataSourceState) {\r\n    let ecvId;\r\n    let label;\r\n    const id = dataSource.id.toLowerCase();\r\n\r\n    // The following are CCI specific hacks\r\n    if (id.startsWith('esacci.')) {\r\n        const idParts = id.split('.', 2);\r\n        if (idParts.length > 1) {\r\n            ecvId = idParts[1];\r\n        }\r\n    }\r\n    if (!ecvId && id.startsWith('esacci-')) {\r\n        const idParts = id.split('-', 2);\r\n        if (idParts.length > 1) {\r\n            ecvId = idParts[1];\r\n        }\r\n    }\r\n    if (!ecvId) {\r\n        ecvId = id;\r\n    }\r\n    let actualEcvId = ECV_META.mappings[ecvId];\r\n    if (actualEcvId) {\r\n        ecvId = actualEcvId;\r\n    }\r\n    const ecvMetaItem = ecvId && ECV_META.ecvs[ecvId];\r\n    let backgroundColor;\r\n    if (ecvMetaItem) {\r\n        backgroundColor = ECV_META.colors[ecvMetaItem.color] || ecvMetaItem.color;\r\n        label = ecvMetaItem.label || label;\r\n    }\r\n    if (!backgroundColor) {\r\n        backgroundColor = ECV_META.colors[\"default\"] || \"#0BB7A0\";\r\n    }\r\n    if (!label) {\r\n        label = (ecvId && ecvId.substr(0, 3).toUpperCase()) || '?';\r\n    }\r\n    return {backgroundColor, label};\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\nimport { DataSourceState } from '../state';\r\nimport DataSourceItem from './DataSourceItem';\r\nimport { ListBox, ListBoxSelectionMode } from './ListBox';\r\nimport { ScrollablePanelContent } from './ScrollableContent';\r\n\r\n\r\ninterface IDataSourcesListProps {\r\n    dataSources: DataSourceState[];\r\n    selectedDataSourceId: string | null;\r\n    setSelectedDataSourceId: (selectedDataSourceId: string) => void;\r\n    showDataSourceIDs: boolean;\r\n    doubleClickAction: (dataSource: DataSourceState) => any;\r\n}\r\n\r\nconst DataSourcesList: React.FC<IDataSourcesListProps> = (\r\n    {\r\n        dataSources,\r\n        selectedDataSourceId,\r\n        setSelectedDataSourceId,\r\n        showDataSourceIDs,\r\n        doubleClickAction,\r\n    }\r\n) => {\r\n    const getItemKey = (dataSource: DataSourceState) => {\r\n        return dataSource.id;\r\n    };\r\n\r\n    const renderDataSourceItem = (dataSource: DataSourceState) => {\r\n        return <DataSourceItem dataSource={dataSource} showDataSourceIDs={showDataSourceIDs}/>;\r\n    }\r\n\r\n    const handleDataSourceSelected = (newSelection: Array<React.Key>) => {\r\n        if (newSelection.length > 0) {\r\n            setSelectedDataSourceId(newSelection[0] as string);\r\n        } else {\r\n            setSelectedDataSourceId(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ScrollablePanelContent>\r\n            <ListBox\r\n                // key is here to force re-render on change of showDataSourceIDs\r\n                key={'DataSourcesList-' + showDataSourceIDs}\r\n                items={dataSources}\r\n                getItemKey={getItemKey}\r\n                renderItem={renderDataSourceItem}\r\n                selectionMode={ListBoxSelectionMode.SINGLE}\r\n                selection={selectedDataSourceId}\r\n                onItemDoubleClick={doubleClickAction}\r\n                onSelection={handleDataSourceSelected}\r\n            />\r\n        </ScrollablePanelContent>\r\n    );\r\n}\r\n\r\nexport default DataSourcesList;\r\n\r\n","import * as React from 'react';\r\nimport { H5 } from '@blueprintjs/core';\r\nimport { DataSourceState } from '../state';\r\nimport DataSourceLinks from '../components/DataSourceLinks';\r\n\r\ninterface DataSourceOpenHintProps {\r\n    dataSource: DataSourceState;\r\n    isSandboxedMode: boolean;\r\n}\r\n\r\nconst DataSourceOpenHint: React.FC<DataSourceOpenHintProps> = (\r\n    {\r\n        dataSource,\r\n        isSandboxedMode,\r\n    }\r\n) => {\r\n\r\n    let manualInterventionNotice;\r\n    if (isSandboxedMode) {\r\n        manualInterventionNotice = (\r\n            <p>This data source cannot be opened directly from its data store.\r\n                You may\r\n                <ol>\r\n                    <li>Download it manually to your computer;</li>\r\n                    <li>Upload it using <strong>Files / Upload Files</strong>;</li>\r\n                    <li>Use one of the available <code>read_xxx()</code> operations\r\n                        to open the uploaded data. \"xxx\" is determined by the type\r\n                        and format of the data.\r\n                    </li>\r\n                </ol>\r\n            </p>\r\n        );\r\n    } else {\r\n        manualInterventionNotice = (\r\n            <p>This data source cannot be opened directly from its data store.\r\n                You may\r\n                <ol>\r\n                    <li>Download it manually to your computer;</li>\r\n                    <li>Use one of the available <code>read_xxx()</code> operations\r\n                        to open the downloaded data. \"xxx\" is determined by the type\r\n                        and format of the data.\r\n                    </li>\r\n                </ol>\r\n            </p>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <H5>Manual intervention required</H5>\r\n            {manualInterventionNotice}\r\n            <DataSourceLinks dataSource={dataSource} style={{marginTop: 8}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataSourceOpenHint;\r\n","import * as React from 'react';\r\nimport { AnchorButton, ControlGroup, InputGroup, Intent } from '@blueprintjs/core';\r\nimport { DialogState, State } from '../state';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { OpenDialogOptions } from \"../components/desktop/types\";\r\nimport { getParentPath } from \"../../common/paths\";\r\n\r\ninterface IAddDatasetDialogProps {\r\n    isOpen: boolean;\r\n}\r\n\r\ninterface IAddDatasetDialogState extends DialogState {\r\n    dataSourceName: string;\r\n    filePathPattern: string;\r\n}\r\n\r\nfunction mapStateToProps(state: State): IAddDatasetDialogProps {\r\n    const dialogState = selectors.dialogStateSelector(AddDatasetDialog.DIALOG_ID)(state);\r\n    return {\r\n        isOpen: dialogState.isOpen,\r\n    };\r\n}\r\n\r\nclass AddDatasetDialog extends React.Component<IAddDatasetDialogProps & DispatchProp<State>, IAddDatasetDialogState> {\r\n    static readonly DIALOG_ID = 'addDatasetDialog';\r\n\r\n    constructor(props: IAddDatasetDialogProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.state = {dataSourceName: '', filePathPattern: ''};\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.onDataSourceNameChange = this.onDataSourceNameChange.bind(this);\r\n        this.onFilePathPatternChange = this.onFilePathPatternChange.bind(this);\r\n        this.showSelectDirectoryDialog = this.showSelectDirectoryDialog.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IAddDatasetDialogProps) {\r\n        this.setState({dataSourceName: '', filePathPattern: ''});\r\n    }\r\n\r\n    private onCancel() {\r\n        this.props.dispatch(actions.hideDialog(AddDatasetDialog.DIALOG_ID));\r\n    }\r\n\r\n    private canConfirm(): boolean {\r\n        return !!this.state.dataSourceName && !!this.state.filePathPattern;\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.dispatch(actions.hideDialog(AddDatasetDialog.DIALOG_ID, this.state));\r\n        this.props.dispatch(actions.addLocalDataset(this.state.dataSourceName, this.state.filePathPattern) as any);\r\n    }\r\n\r\n    private onDataSourceNameChange(ev: any) {\r\n        this.setState({dataSourceName: ev.target.value} as IAddDatasetDialogState);\r\n    }\r\n\r\n    private onFilePathPatternChange(ev: any) {\r\n        this.setState({filePathPattern: ev.target.value} as IAddDatasetDialogState);\r\n    }\r\n\r\n    private showSelectDirectoryDialog() {\r\n        const openDialogOptions: OpenDialogOptions = {\r\n            title: 'Select Directory',\r\n            buttonLabel: 'Select',\r\n            defaultPath: this.state.filePathPattern !== '' ? getParentPath(this.state.filePathPattern) : undefined,\r\n        };\r\n        this.props.dispatch(actions.showDirectorySelectDialog(openDialogOptions, (dirPath: string | null) => {\r\n            if (dirPath) {\r\n                this.setState({filePathPattern: dirPath + '/*.nc'} as IAddDatasetDialogState);\r\n            }\r\n        }) as any);\r\n    }\r\n\r\n    render() {\r\n        let isOpen = this.props.isOpen;\r\n        if (!isOpen) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ModalDialog\r\n                isOpen={isOpen}\r\n                title=\"Add file data source\"\r\n                icon=\"add\"\r\n                confirmTitle=\"Add\"\r\n                confirmIconName=\"add\"\r\n                confirmTooltip=\"Add file data source.\"\r\n                onCancel={this.onCancel}\r\n                canConfirm={this.canConfirm}\r\n                onConfirm={this.onConfirm}\r\n                renderBody={this.renderBody}\r\n            />);\r\n    }\r\n\r\n    private renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <p>Define a new file data source using a file path pattern.</p>\r\n\r\n                <p style={{marginTop: '1em'}}>Name:</p>\r\n                <InputGroup\r\n                    type=\"text\"\r\n                    style={{width: '100%'}}\r\n                    value={this.state.dataSourceName}\r\n                    onChange={this.onDataSourceNameChange}\r\n                />\r\n                <p style={{marginTop: '1em'}}>Path pattern<span className=\"bp3-text-muted\"> (can contain wildcards like \"*\" or \"?\")</span>:\r\n                </p>\r\n                <ControlGroup style={{flexGrow: 1, width: '100%'}}>\r\n                    <InputGroup\r\n                        type=\"text\"\r\n                        fill={true}\r\n                        value={this.state.filePathPattern}\r\n                        onChange={this.onFilePathPatternChange}\r\n                    />\r\n                    <AnchorButton intent={Intent.PRIMARY} style={{flex: 'none'}}\r\n                                  onClick={this.showSelectDirectoryDialog}>...</AnchorButton>\r\n                </ControlGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddDatasetDialog);\r\n","/**\r\n * Converts a milliseconds time value to an ISO date string.\r\n * @param millis Time in milliseconds\r\n * @returns {string} ISO date string\r\n */\r\nexport function formatMillisAsISODateString(millis: number) {\r\n    return new Date(millis).toISOString().slice(0, 10);\r\n}\r\n\r\n/**\r\n * Converts a time value to an ISO date string.\r\n * @param date Time as date\r\n * @returns {string} ISO date string\r\n */\r\nexport function formatDateAsISODateString(date: Date) {\r\n    const isoDate = new Date(date.getTime() - (date.getTimezoneOffset() * 60000));\r\n    return isoDate.toISOString().slice(0, 10);\r\n}\r\n\r\n/**\r\n * Format a data type name for human readers.\r\n *\r\n * @param name fully qualified data type name\r\n * @param fullyQualified if the type name should be (kept) fully qualified\r\n * @returns {any}\r\n */\r\nexport function formatDataTypeName(name: string | null, fullyQualified: boolean): string {\r\n    if (name && !fullyQualified) {\r\n        const indexColon = name.lastIndexOf(':');\r\n        if (indexColon >= 1) {\r\n            name = name.substr(0, indexColon);\r\n        }\r\n        const indexDot = name.lastIndexOf('.');\r\n        if (indexDot >= 0) {\r\n            name = name.substr(indexDot + 1);\r\n        }\r\n    }\r\n    return name;\r\n}\r\n","import { DateRange } from '@blueprintjs/datetime';\r\nimport { Field, FieldType, IFieldProps } from './Field';\r\nimport { formatDateAsISODateString } from '../../../common/format';\r\nimport { isUndefinedOrNull } from '../../../common/types';\r\n\r\nexport type DateFieldType = FieldType<Date>;\r\n\r\nexport interface IDateFieldProps extends IFieldProps {\r\n    nullable?: boolean;\r\n    min?: Date;\r\n    max?: Date;\r\n}\r\n\r\nexport const DEFAULT_MIN_DATE = new Date('1980-01-01');\r\nexport const DEFAULT_MAX_DATE = new Date(Date.now());\r\nexport const DEFAULT_DATE_RANGE: DateRange = [DEFAULT_MIN_DATE, DEFAULT_MAX_DATE];\r\n\r\nexport class DateField extends Field<IDateFieldProps> {\r\n\r\n    public static defaultProps: Partial<IFieldProps> = {\r\n        uncontrolled: true,\r\n        placeholder: 'YYYY-MM-DD'\r\n    };\r\n\r\n    parseValue(textValue: string): DateFieldType {\r\n        return parseDate(textValue, this.props.nullable);\r\n    }\r\n\r\n    formatValue(value: DateFieldType): string {\r\n        return formatDate(value);\r\n    }\r\n\r\n    validateValue(value: DateFieldType) {\r\n        super.validateValue(value);\r\n        validateDate(value, this.props.nullable, this.props.min, this.props.max);\r\n    }\r\n}\r\n\r\nexport function parseDate(textValue: string, nullable: boolean, name?: string): Date | null {\r\n    if (!textValue || textValue.trim() === '') {\r\n        if (nullable) {\r\n            return null;\r\n        }\r\n        throw new Error('Date must be given.');\r\n    }\r\n    const dateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\r\n    if (!dateRegex.test(textValue.trim())) {\r\n        throw new Error('Date not valid: >' + textValue + '<');\r\n    }\r\n    let millis;\r\n    try {\r\n        millis = Date.parse(textValue.trim());\r\n    } catch (e) {\r\n        throw new Error(`Invalid ${name || 'date'}.`);\r\n    }\r\n    return new Date(millis);\r\n}\r\n\r\nexport function formatDate(value: Date | null): string {\r\n    if (isUndefinedOrNull(value)) {\r\n        return '';\r\n    }\r\n    return formatDateAsISODateString(value);\r\n}\r\n\r\nexport function validateDate(date: Date | null, nullable: boolean | null, min: Date | null, max: Date | null, name?: string) {\r\n    if (!date) {\r\n        if (!nullable) {\r\n            throw Error('Date value expected.');\r\n        }\r\n        return;\r\n    }\r\n    if (min && date.valueOf() < min.valueOf()) {\r\n        throw new Error(`${name || 'Date'} must not be before ${formatDate(min)}.`);\r\n    }\r\n    if (max && date.valueOf() > max.valueOf()) {\r\n        throw new Error(`${name || 'Date'} must not be after ${formatDate(max)}.`);\r\n    }\r\n}\r\n\r\n","import { DateRange } from '@blueprintjs/datetime';\r\nimport { Field, FieldType, FieldValue, IFieldProps } from './Field';\r\nimport { isUndefinedOrNull } from '../../../common/types';\r\nimport { formatDate, parseDate, validateDate } from './DateField';\r\n\r\nexport type DateRangeFieldType = FieldType<DateRange>;\r\nexport type DateRangeFieldValue = FieldValue<DateRange>;\r\n\r\ninterface IDateRangeFieldProps extends IFieldProps {\r\n    nullable?: boolean;\r\n    min?: Date;\r\n    max?: Date;\r\n}\r\n\r\nexport class DateRangeField extends Field<IDateRangeFieldProps> {\r\n\r\n    public static defaultProps: Partial<IFieldProps> = {\r\n        uncontrolled: true,\r\n        placeholder: 'YYYY-MM-DD, YYYY-MM-DD',\r\n        size: 24\r\n    };\r\n\r\n    parseValue(textValue: string): DateRangeFieldType {\r\n        return parseDateRange(textValue, this.props.nullable);\r\n    }\r\n\r\n    formatValue(value: DateRangeFieldType): string {\r\n        return formatDateRange(value);\r\n    }\r\n\r\n    validateValue(value: DateRangeFieldType) {\r\n        super.validateValue(value);\r\n        validateDateRange(value, this.props.nullable, this.props.min, this.props.max);\r\n    }\r\n}\r\n\r\n\r\nexport function parseDateRange(textValue: string, nullable: boolean): DateRange | null {\r\n    if (!textValue || textValue.trim() === '') {\r\n        if (nullable) {\r\n            return null;\r\n        }\r\n        throw new Error('Date range must be given.');\r\n    }\r\n    const dateStrings = textValue.split(',');\r\n    if (dateStrings.length !== 2 || dateStrings[0].trim() === '' || dateStrings[1].trim() === '') {\r\n        throw new Error('Invalid date range.');\r\n    }\r\n    const date1 = parseDate(dateStrings[0], true, 'first date');\r\n    const date2 = parseDate(dateStrings[1], true, 'second date');\r\n    if (!date1 && !date2) {\r\n        return null;\r\n    }\r\n    return [date1, date2];\r\n}\r\n\r\nexport function formatDateRange(value: DateRange | null): string {\r\n    if (isUndefinedOrNull(value)) {\r\n        return '';\r\n    }\r\n    const date1 = value[0];\r\n    const date2 = value[1];\r\n    if (!date1 && !date2) {\r\n        return '';\r\n    }\r\n    return formatDate(date1) + ',' + formatDate(date2);\r\n}\r\n\r\nexport function validateDateRange(value: DateRange | null, nullable: boolean | null, min: Date | null, max: Date | null) {\r\n    if (!value) {\r\n        if (!nullable) {\r\n            throw Error('Date range value expected.');\r\n        }\r\n        return;\r\n    }\r\n    const date1 = value[0];\r\n    const date2 = value[1];\r\n    validateDate(date1, nullable, min, max, 'First date');\r\n    validateDate(date2, nullable, min, max, 'Second date');\r\n    if (date1 && date2 && date1.valueOf() > date2.valueOf()) {\r\n        throw new Error('First date must not be after second date.');\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\n\r\nconst LONG_ID_STYLE: React.CSSProperties = {wordWrap: 'break-word'};\r\n\r\nexport interface ILongIdLabelProps {\r\n    label: string;\r\n    longId: string;\r\n}\r\n\r\nconst LongIdLabel = ({label, longId}: ILongIdLabelProps) => {\r\n    return (\r\n        <React.Fragment>\r\n            <p>{label}</p>\r\n            <div style={LONG_ID_STYLE}><strong>{longId}</strong></div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LongIdLabel;","import * as React from 'react'\r\n\r\nimport { Field, FieldType, FieldValue, IFieldProps } from './Field';\r\nimport { Intent, NumericInput } from '@blueprintjs/core';\r\nimport { isNumber, isUndefinedOrNull } from '../../../common/types';\r\n\r\n\r\nexport type NumericFieldType = FieldType<number>;\r\nexport type NumericFieldValue = FieldValue<number>;\r\n\r\n\r\nexport interface INumericFieldProps extends IFieldProps {\r\n    nullable?: boolean;\r\n    min?: number;\r\n    max?: number;\r\n    cols?: number;\r\n    isInt?: boolean;\r\n}\r\n\r\n\r\n/**\r\n * A NumberField is an input field that provides a floating point number.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class NumericField extends Field<INumericFieldProps> {\r\n\r\n    constructor(props: INumericFieldProps) {\r\n        super(props);\r\n        this.handleNumericInputChange = this.handleNumericInputChange.bind(this);\r\n    }\r\n\r\n    parseValue(textValue: string): NumericFieldType {\r\n        if (!textValue || textValue.trim() === '') {\r\n            return null;\r\n        }\r\n        const value = parseFloat(textValue);\r\n        if (isNaN(value) && textValue.toLowerCase() !== 'nan') {\r\n            throw new Error('Please enter a valid number.');\r\n        }\r\n        return value;\r\n    }\r\n\r\n    formatValue(value: NumericFieldType): string {\r\n        if (isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n        return value.toString();\r\n    }\r\n\r\n    validateValue(value: NumericFieldType): void {\r\n        super.validateValue(value);\r\n        validateNumber(value, this.props.nullable, this.props.min, this.props.max, this.props.isInt);\r\n    }\r\n\r\n    private handleNumericInputChange(value: number, textValue: string) {\r\n        this.setValueAndTextValue(value, textValue);\r\n    }\r\n\r\n    render() {\r\n        return (<NumericInput value={this.getTextValue()}\r\n                              onValueChange={this.handleNumericInputChange}\r\n                              onBlur={this.handleBlur}\r\n                              onKeyPress={this.handleKeyPress}\r\n                              style={this.props.style}\r\n                              intent={this.getError() ? Intent.DANGER : Intent.NONE}\r\n                              min={this.props.min}\r\n                              max={this.props.max}\r\n            // cols={this.props.cols}\r\n                              size={this.props.size}\r\n                              minorStepSize={this.props.isInt ? 1 : 0.1}\r\n                              selectAllOnFocus={true}\r\n        />);\r\n    }\r\n}\r\n\r\nexport function validateNumber(value: number | null, nullable?: boolean, min?: number | null, max?: number | null, isInt?: boolean): void {\r\n    if (isUndefinedOrNull(value)) {\r\n        if (!nullable) {\r\n            throw Error('Numeric value expected');\r\n        }\r\n        return;\r\n    }\r\n    if (!isNumber(value)) {\r\n        throw new Error(`Value must be a number.`);\r\n    }\r\n    if (isInt && value !== Math.floor(value)) {\r\n        throw new Error('Value must be an integer.');\r\n    }\r\n    if (isNumber(min) && value < min) {\r\n        throw new Error(`Value must be >= ${this.props.min}.`);\r\n    }\r\n    if (isNumber(max) && value > max) {\r\n        throw new Error(`Value must be <= ${this.props.max}.`);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumericField, NumericFieldValue } from './field/NumericField';\r\n\r\n// TODO (forman): rename west, south, east, north to lonMin, latMin, lonMax, latMax because we use negative values\r\n\r\nexport interface RegionValue {\r\n    west: NumericFieldValue;\r\n    south: NumericFieldValue;\r\n    east: NumericFieldValue;\r\n    north: NumericFieldValue;\r\n}\r\n\r\ninterface IRegionProps {\r\n    value: RegionValue;\r\n    onChange: (region: RegionValue) => void;\r\n    disabled?: boolean;\r\n    uncontrolled?: boolean;\r\n}\r\n\r\nexport const GLOBAL: RegionValue = {\r\n    west: {value: -180},\r\n    south: {value: -90},\r\n    east: {value: 180},\r\n    north: {value: 90},\r\n};\r\n\r\n/**\r\n * An editor for objects which have the properties west, east, south, north of type number.\r\n */\r\nexport class Region extends React.PureComponent<IRegionProps, null> {\r\n    private static readonly NUMBER_FIELD_STYLE = {textAlign: 'right'};\r\n\r\n    constructor(props: IRegionProps) {\r\n        super(props);\r\n        this.onEastChange = this.onEastChange.bind(this);\r\n        this.onSouthChange = this.onSouthChange.bind(this);\r\n        this.onWestChange = this.onWestChange.bind(this);\r\n        this.onNorthChange = this.onNorthChange.bind(this);\r\n    }\r\n\r\n    onWestChange(value: NumericFieldValue) {\r\n        this.props.onChange({...this.props.value, west: value});\r\n    }\r\n\r\n    onEastChange(value: NumericFieldValue) {\r\n        this.props.onChange({...this.props.value, east: value});\r\n    }\r\n\r\n    onNorthChange(value: NumericFieldValue) {\r\n        this.props.onChange({...this.props.value, north: value});\r\n    }\r\n\r\n    onSouthChange(value: NumericFieldValue) {\r\n        this.props.onChange({...this.props.value, south: value});\r\n    }\r\n\r\n    render() {\r\n        let value = this.props.value;\r\n        return (\r\n            <div>\r\n                <div style={{display: 'flex', alignItems: 'baseline', justifyContent: 'flex-start', padding: 2}}>\r\n                    <div style={{flexGrow: 0, width: '14em'}}>Lon. from</div>\r\n                    <div\r\n                        style={{\r\n                            flexGrow: 1,\r\n                            width: '100%'\r\n                        }}>{this.renderField((value && value.west) || null, -180, 180, this.onWestChange)}</div>\r\n                    <div style={{flexGrow: 0, width: '4em'}}> to</div>\r\n                    <div\r\n                        style={{\r\n                            flexGrow: 1,\r\n                            width: '100%'\r\n                        }}>{this.renderField((value && value.east) || null, -180, 180, this.onEastChange)}</div>\r\n                </div>\r\n                <div style={{display: 'flex', alignItems: 'baseline', justifyContent: 'flex-start', padding: 2}}>\r\n                    <div style={{flexGrow: 0, width: '14em'}}>Lat. from</div>\r\n                    <div\r\n                        style={{\r\n                            flexGrow: 1,\r\n                            width: '100%'\r\n                        }}>{this.renderField((value && value.south) || null, -90, 90, this.onSouthChange)}</div>\r\n                    <div style={{flexGrow: 0, width: '4em'}}>to</div>\r\n                    <div\r\n                        style={{\r\n                            flexGrow: 1,\r\n                            width: '100%'\r\n                        }}>{this.renderField((value && value.north) || null, -90, 90, this.onNorthChange)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderField(value: NumericFieldValue, min: number, max: number, onChange: (number) => void) {\r\n        return (<NumericField value={value}\r\n                              style={Region.NUMBER_FIELD_STYLE}\r\n                              min={min}\r\n                              max={max}\r\n                              size={10}\r\n                              onChange={onChange}\r\n                              disabled={this.props.disabled}\r\n                              nullable={true}\r\n                              uncontrolled={this.props.uncontrolled}\r\n        />);\r\n    }\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport { Tooltip } from '@blueprintjs/core';\r\nimport { formatDataTypeName } from '../../common/format';\r\n\r\nconst DATA_TYPE_STYLE: React.CSSProperties = {color: 'rgba(0,255,0,0.8)', fontSize: '0.8em'};\r\nconst TOOLTIP_STYLE: React.CSSProperties = {width: \"15em\"};\r\n\r\nexport interface ILabelWithTypeProps {\r\n    label: string;\r\n    dataType: string | null;\r\n    fullyQualified?: boolean;\r\n    units?: string;\r\n    tooltipText?: string;\r\n    em?: boolean;\r\n    style?: { [cssProperty: string]: any; }\r\n}\r\n\r\n/**\r\n * A label with a data type and optional units and tooltip text.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport const LabelWithType: React.FC<ILabelWithTypeProps> = (\r\n    {\r\n        label,\r\n        units,\r\n        dataType,\r\n        fullyQualified,\r\n        tooltipText,\r\n        em,\r\n        style,\r\n    }) => {\r\n\r\n    const labelText = label;\r\n    const dataTypeText = formatDataTypeName(dataType, fullyQualified);\r\n    const unitsText = units && units !== '' ? ` (${units})` : '';\r\n\r\n    let content = (\r\n        <span>{em ? <em>{labelText}</em> : labelText} {unitsText} <span\r\n            style={DATA_TYPE_STYLE}>{dataTypeText} </span></span>\r\n    );\r\n\r\n    if (tooltipText && tooltipText !== '') {\r\n        content = (\r\n            <Tooltip\r\n                content={<div style={TOOLTIP_STYLE}>{tooltipText}</div>}\r\n                position={'top'}\r\n            >\r\n                {content}\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    return <span style={style}>{content}</span>;\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport { ResourceState, VariableState } from '../state';\r\nimport { ListBox, ListBoxSelectionMode } from '../components/ListBox';\r\nimport { LabelWithType } from '../components/LabelWithType';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport { ScrollablePanelContent } from '../components/ScrollableContent';\r\n\r\ninterface IVariablesDialogProps {\r\n    isOpen: boolean;\r\n    value: string[];\r\n    resource: ResourceState;\r\n    onConfirm: (value: string[]) => void;\r\n    onCancel: () => void;\r\n    multiSelect?: boolean;\r\n}\r\n\r\ninterface IVariablesDialogState {\r\n    value: string[] | null;\r\n}\r\n\r\nexport class VariablesDialog extends React.Component<IVariablesDialogProps, IVariablesDialogState> {\r\n\r\n    constructor(props: IVariablesDialogProps) {\r\n        super(props);\r\n        this.onSelection = this.onSelection.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.state = {value: this.props.value};\r\n    }\r\n\r\n    private onSelection(value: string[]) {\r\n        this.setState({value});\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.onConfirm(this.state.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalDialog\r\n                isOpen={this.props.isOpen}\r\n                title={this.props.multiSelect ? 'Select Variables' : 'Select Variable'}\r\n                icon=\"variable\"\r\n                onConfirm={this.onConfirm}\r\n                onCancel={this.props.onCancel}\r\n                renderBody={this.renderBody}\r\n            />\r\n        );\r\n    }\r\n\r\n    private renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        const variables = this.props.resource.variables;\r\n        if (!variables) {\r\n            return (<p>{`Resource \"${this.props.resource.name}\" does not seem to have any variables.`}</p>);\r\n        }\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <p>{this.props.multiSelect ? 'Select one or more the variables:' : 'Select variable:'}</p>\r\n                <ListBox items={variables}\r\n                         getItemKey={VariablesDialog.getVariableItemKey}\r\n                         renderItem={VariablesDialog.renderVariableItem}\r\n                         selectionMode={this.props.multiSelect ? ListBoxSelectionMode.MULTIPLE : ListBoxSelectionMode.SINGLE}\r\n                         selection={this.state.value}\r\n                         style={{height: '20em'}}\r\n                         onSelection={this.onSelection}\r\n                         onItemDoubleClick={this.state.value ? this.onConfirm : null}/>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private static getVariableItemKey(variable: VariableState) {\r\n        return variable.name;\r\n    }\r\n\r\n    private static renderVariableItem(variable: VariableState) {\r\n        const dataType = variable.dimNames ? `${variable.dataType}[${variable.dimNames}]` : `${variable.dataType}`;\r\n        return (\r\n            <div>\r\n                <LabelWithType label={variable.name}\r\n                               dataType={dataType}\r\n                               units={variable.units}\r\n                               tooltipText={variable.attributes && variable.attributes.long_name}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport { AnchorButton, ControlGroup, Intent } from '@blueprintjs/core';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { FieldValue, toTextValue } from '../../components/field/Field';\r\nimport { TextField } from '../../components/field/TextField';\r\nimport { VariablesDialog } from '../VariablesDialog';\r\nimport { ResourceState } from '../../state';\r\n\r\ninterface IVariableNamesValueEditorProps extends IValueEditorProps<string> {\r\n    resource: ResourceState;\r\n    multi?: boolean;\r\n}\r\n\r\ninterface IVariableNamesValueEditorState {\r\n    isDetailsEditorOpen: boolean;\r\n}\r\n\r\nexport class VarNameValueEditor extends React.Component<IVariableNamesValueEditorProps, IVariableNamesValueEditorState> {\r\n\r\n    private static DIV_STYLE = {display: 'flex', justifySelf: 'stretch'};\r\n    private static TEXT_FIELD_STYLE = {flexGrow: 1};\r\n    private static BUTTON_STYLE = {flexGrow: 0};\r\n\r\n    constructor(props: IVariableNamesValueEditorProps) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n        this.state = {isDetailsEditorOpen: false};\r\n    }\r\n\r\n    onChange(value: FieldValue<string>) {\r\n        this.props.onChange(this.props.input, value);\r\n    }\r\n\r\n    validate(value: string) {\r\n        validateVarNamesText(value, this.props.input.nullable, this.props.multi, this.props.resource);\r\n    }\r\n\r\n    render() {\r\n        const textValue = toTextValue(this.props.value);\r\n        const varNames = textValue !== '' ? textValue.split(',').map(name => name.trim()) : [];\r\n        const hasSelectableVariables = this.props.resource && this.props.resource.variables && this.props.resource.variables.length;\r\n\r\n        return (\r\n            <ControlGroup fill={true} style={VarNameValueEditor.DIV_STYLE}>\r\n                <TextField\r\n                    value={this.props.value}\r\n                    validator={this.validate}\r\n                    placeholder={this.props.multi ? 'Enter variable names, separated by comma' : 'Enter variable name'}\r\n                    onChange={this.onChange}\r\n                    nullable={this.props.input.nullable}\r\n                    style={VarNameValueEditor.TEXT_FIELD_STYLE}\r\n                />\r\n\r\n                <AnchorButton intent={Intent.PRIMARY}\r\n                              onClick={() => this.setState({isDetailsEditorOpen: true})}\r\n                              disabled={!hasSelectableVariables}\r\n                              style={VarNameValueEditor.BUTTON_STYLE}>...</AnchorButton>\r\n\r\n                <VariablesDialog isOpen={this.state.isDetailsEditorOpen}\r\n                                 resource={this.props.resource}\r\n                                 multiSelect={this.props.multi}\r\n                                 value={varNames}\r\n                                 onConfirm={(value: string[]) => {\r\n                                     const textValue = value ? value.join(', ') : null;\r\n                                     this.setState({isDetailsEditorOpen: false});\r\n                                     this.onChange({textValue, value: textValue});\r\n                                 }}\r\n                                 onCancel={() => {\r\n                                     this.setState({isDetailsEditorOpen: false} as any);\r\n                                 }}/>\r\n            </ControlGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport function validateVarNamesText(value: string | null, nullable: boolean, multi: boolean, resource: ResourceState) {\r\n    if (!value || value.trim() === '') {\r\n        if (!nullable) {\r\n            throw new Error(multi ? 'One or more variable names expected.' : 'Variable name expected.');\r\n        }\r\n        return;\r\n    }\r\n    const varNames = value.split(',');\r\n    if (multi) {\r\n        for (let varName of varNames) {\r\n            if (varName.trim() === '') {\r\n                throw new Error('Value must be a comma-separated list of variable names.');\r\n            }\r\n        }\r\n    } else {\r\n        if (varNames.length !== 1) {\r\n            throw new Error('Value must be a single variable name.');\r\n        }\r\n        if (varNames[0].trim() === '') {\r\n            throw new Error('Value must be a variable name.');\r\n        }\r\n    }\r\n    if (resource && resource.variables) {\r\n        const validNames = new Set(resource.variables.map(v => v.name));\r\n        for (let varName of varNames) {\r\n            if (!validNames.has(varName)) {\r\n                throw new Error(`\"${varName}\" is not a name of any variable in resource ${resource.name}.`);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Card,\r\n    Checkbox,\r\n    Collapse,\r\n    InputGroup,\r\n    Intent,\r\n    Label,\r\n    Tooltip,\r\n    Icon,\r\n} from '@blueprintjs/core';\r\nimport { IconNames } from '@blueprintjs/icons';\r\nimport * as React from 'react';\r\n\r\nimport * as types from '../../common/cate-types';\r\nimport { formatDateAsISODateString } from '../../common/format';\r\nimport { DateRangeField, DateRangeFieldValue, validateDateRange } from '../components/field/DateRangeField';\r\nimport { TextFieldValue } from '../components/field/TextField';\r\nimport LongIdLabel from '../components/LongIdLabel';\r\nimport { GLOBAL, Region, RegionValue } from '../components/Region';\r\nimport { DataSourceState, ResourceState, VariableState } from '../state';\r\nimport { VarNameValueEditor } from './editor/VarNameValueEditor';\r\n\r\ntype TimeRangeValue = [string, string];\r\n\r\nexport interface IDataAccessComponentOptions {\r\n\r\n    hasTimeConstraint: boolean;\r\n    dateRange: DateRangeFieldValue | null;\r\n\r\n    hasRegionConstraint: boolean;\r\n    region: RegionValue | null;\r\n\r\n    hasVariablesConstraint: boolean;\r\n    variableNames: TextFieldValue | null;\r\n\r\n    isCacheDataSourceSelected?: boolean;\r\n    cachedDataSourceId?: string;\r\n    cachedDataSourceTitle?: string;\r\n\r\n    openDatasetResourceName: string;\r\n}\r\n\r\nexport interface IDataAccessComponentProps {\r\n    options: IDataAccessComponentOptions;\r\n    onChange: (options: IDataAccessComponentOptions) => any;\r\n    dataSource: DataSourceState | null;\r\n    isLocalDataSource: boolean;\r\n    temporalCoverage: TimeRangeValue | null;\r\n    canConstrainRegion: boolean;\r\n    canConstrainTime: boolean;\r\n    canConstrainVariables: boolean;\r\n    canCache: boolean;\r\n}\r\n\r\n\r\nconst WARNINGS_PANEL_STYLE: React.CSSProperties = {\r\n    marginTop: 8,\r\n    marginBottom: 8,\r\n};\r\n\r\n\r\nconst WARNING_ICON = (<Icon icon={IconNames.WARNING_SIGN} intent={Intent.WARNING}/>);\r\nconst ERROR_ICON = (<Icon icon={IconNames.ERROR} intent={Intent.DANGER}/>);\r\nconst ISSUE_ICON = (<Icon icon={IconNames.ISSUE} intent={Intent.PRIMARY}/>);\r\n\r\nconst TIME_RANGE_STYLE: React.CSSProperties = {\r\n    marginTop: 4,\r\n    marginBottom: 4,\r\n};\r\n\r\n/**\r\n * A components that yields IDataAccessComponentOptions as value.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class DataAccessComponent extends React.Component<IDataAccessComponentProps, null> {\r\n    static readonly VAR_NAMES_INPUT = {name: 'varNames', dataType: 'string', description: null, nullable: true};\r\n    static readonly SUB_PANEL_STYLE = {marginTop: '1em'};\r\n    static readonly OPTION_CHECK_STYLE = {marginTop: '1em'};\r\n    static readonly OPTION_DIV_STYLE = {marginLeft: '2em'};\r\n\r\n    constructor(props: IDataAccessComponentProps) {\r\n        super(props);\r\n        this.onHasTimeConstraintChange = this.onHasTimeConstraintChange.bind(this);\r\n        this.onDateRangeChange = this.onDateRangeChange.bind(this);\r\n        this.onHasRegionConstraintChange = this.onHasRegionConstraintChange.bind(this);\r\n        this.onRegionChange = this.onRegionChange.bind(this);\r\n        this.onHasVariablesConstraintChange = this.onHasVariablesConstraintChange.bind(this);\r\n        this.onVariableNamesChange = this.onVariableNamesChange.bind(this);\r\n        this.onMakeLocalSelectedChange = this.onMakeLocalSelectedChange.bind(this);\r\n        this.onMakeLocalDataSourceIdChange = this.onMakeLocalDataSourceIdChange.bind(this);\r\n        this.onOpenDatasetResourceNameChange = this.onOpenDatasetResourceNameChange.bind(this);\r\n    }\r\n\r\n    private onDateRangeChange(dateRange: DateRangeFieldValue) {\r\n        this.props.onChange({...this.props.options, dateRange});\r\n    }\r\n\r\n    private onRegionChange(region: RegionValue) {\r\n        this.props.onChange({...this.props.options, region});\r\n    }\r\n\r\n    private onHasTimeConstraintChange(ev: any) {\r\n        this.props.onChange({...this.props.options, hasTimeConstraint: ev.target.checked});\r\n    }\r\n\r\n    private onHasRegionConstraintChange(ev: any) {\r\n        this.props.onChange({...this.props.options, hasRegionConstraint: ev.target.checked});\r\n    }\r\n\r\n    private onHasVariablesConstraintChange(ev: any) {\r\n        this.props.onChange({...this.props.options, hasVariablesConstraint: ev.target.checked});\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private onVariableNamesChange(unused: any, variableNames: TextFieldValue) {\r\n        this.props.onChange({...this.props.options, variableNames});\r\n    }\r\n\r\n    private onMakeLocalSelectedChange(ev: any) {\r\n        this.props.onChange({...this.props.options, isCacheDataSourceSelected: ev.target.checked});\r\n    }\r\n\r\n    private onMakeLocalDataSourceIdChange(ev: any) {\r\n        this.props.onChange({...this.props.options, cachedDataSourceId: ev.target.value});\r\n    }\r\n\r\n    private onOpenDatasetResourceNameChange(ev: any) {\r\n        this.props.onChange({...this.props.options, openDatasetResourceName: ev.target.value});\r\n    }\r\n\r\n    private static dataSourceVarToVariable(dsVar: any): VariableState {\r\n        return {name: dsVar.name, units: dsVar.units || '-', dataType: types.DATA_ARRAY_TYPE};\r\n    }\r\n\r\n    private static dataSourceToResource(dataSource: DataSourceState): ResourceState {\r\n        if (dataSource) {\r\n            const metaInfo = dataSource.metaInfo;\r\n            if (metaInfo && metaInfo.data_vars && metaInfo.data_vars.length) {\r\n                return {\r\n                    name: dataSource.id,\r\n                    dataType: types.DATASET_TYPE,\r\n                    variables: metaInfo.data_vars.map(v => DataAccessComponent.dataSourceVarToVariable(v)),\r\n                } as ResourceState;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.dataSource) {\r\n            return null;\r\n        }\r\n        const options = this.props.options;\r\n\r\n        // TODO (forman): turn timeConstraintsPanel,\r\n        //      regionConstraintsPanel,\r\n        //      variablesConstraintPanel into components\r\n\r\n        let minDate = new Date('1970-01-01');\r\n        let maxDate = new Date(Date.now());\r\n        const temporalCoverage = this.props.temporalCoverage;\r\n        if (temporalCoverage) {\r\n            if (temporalCoverage[0]) {\r\n                minDate = new Date(temporalCoverage[0]);\r\n            }\r\n            if (temporalCoverage[1]) {\r\n                maxDate = new Date(temporalCoverage[1]);\r\n            }\r\n        }\r\n\r\n        const temporalCoverageText = temporalCoverage && (\r\n            <div style={TIME_RANGE_STYLE}>{`Available time range: ${temporalCoverage.join(', ')}`}</div>\r\n        );\r\n\r\n        const hasTimeConstraint = options.hasTimeConstraint;\r\n        const dateRange = hasTimeConstraint ? options.dateRange : null;\r\n        const timeConstraintsPanel = (<div style={DataAccessComponent.SUB_PANEL_STYLE}>\r\n            <Checkbox\r\n                disabled={!temporalCoverage || !this.props.canConstrainTime}\r\n                checked={hasTimeConstraint}\r\n                label=\"Time constraint\"\r\n                onChange={this.onHasTimeConstraintChange}\r\n            />\r\n            <Collapse isOpen={hasTimeConstraint}>\r\n                <div style={DataAccessComponent.OPTION_DIV_STYLE}>\r\n                    <DateRangeField\r\n                        nullable={true}\r\n                        min={minDate}\r\n                        max={maxDate}\r\n                        value={dateRange}\r\n                        onChange={this.onDateRangeChange}\r\n                    />\r\n                    {temporalCoverageText}\r\n                </div>\r\n            </Collapse>\r\n        </div>);\r\n\r\n        const hasRegionConstraint = options.hasRegionConstraint;\r\n        const region = hasRegionConstraint ? options.region || GLOBAL : options.region;\r\n        const regionConstraintsPanel = (\r\n            <div style={DataAccessComponent.SUB_PANEL_STYLE}>\r\n                <Checkbox\r\n                    disabled={!this.props.canConstrainRegion}\r\n                    checked={hasRegionConstraint}\r\n                    label=\"Region constraint\"\r\n                    onChange={this.onHasRegionConstraintChange}\r\n                />\r\n                <Collapse isOpen={this.props.canConstrainRegion && hasRegionConstraint}>\r\n                    <div style={DataAccessComponent.OPTION_DIV_STYLE}>\r\n                        <Region\r\n                            value={region}\r\n                            disabled={!hasRegionConstraint}\r\n                            onChange={this.onRegionChange}\r\n                        />\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        );\r\n\r\n        const hasVariablesConstraint = options.hasVariablesConstraint;\r\n        const res = DataAccessComponent.dataSourceToResource(this.props.dataSource);\r\n        const variablesConstraintPanel = (\r\n            <div style={DataAccessComponent.SUB_PANEL_STYLE}>\r\n                <Checkbox\r\n                    disabled={!this.props.canConstrainVariables}\r\n                    checked={hasVariablesConstraint}\r\n                    label=\"Variables constraint\"\r\n                    onChange={this.onHasVariablesConstraintChange}\r\n                />\r\n                <Collapse isOpen={hasVariablesConstraint}>\r\n                    <div style={DataAccessComponent.OPTION_DIV_STYLE}>\r\n                        <VarNameValueEditor input={DataAccessComponent.VAR_NAMES_INPUT}\r\n                                            value={options.variableNames}\r\n                                            onChange={this.onVariableNamesChange}\r\n                                            resource={res}\r\n                                            multi={true}/>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        );\r\n\r\n        let cacheConfigPanel;\r\n        if (this.props.canCache && !this.props.isLocalDataSource) {\r\n            const isMakeLocalSelected = options.isCacheDataSourceSelected;\r\n            cacheConfigPanel = (<div style={DataAccessComponent.SUB_PANEL_STYLE}>\r\n                    <Tooltip content={\"If unchecked, remote data will be accessed \" +\r\n                                      \"using an available protocol, e.g. OPeNDAP.\"}>\r\n                        <Checkbox\r\n                            checked={isMakeLocalSelected}\r\n                            label=\"Cache data source (allocates space on disk)\"\r\n                            onChange={this.onMakeLocalSelectedChange}\r\n                        />\r\n                    </Tooltip>\r\n                    <Collapse isOpen={isMakeLocalSelected}>\r\n                        <div style={DataAccessComponent.OPTION_DIV_STYLE}>\r\n                            <Label>\r\n                                Unique identifier for the new local data source\r\n                                <span className=\"bp3-text-muted\"> (optional)</span>\r\n                                <InputGroup\r\n                                    style={{width: '100%'}}\r\n                                    type=\"text\"\r\n                                    value={options.cachedDataSourceId}\r\n                                    onChange={this.onMakeLocalDataSourceIdChange}\r\n                                />\r\n                            </Label>\r\n                        </div>\r\n                    </Collapse>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const messages: Array<[React.ReactNode, React.ReactNode]> = [];\r\n        if (this.props.dataSource.metaInfoStatus === 'ok') {\r\n            if (!this.props.canConstrainTime) {\r\n                messages.push([WARNING_ICON, \"This dataset has no (recognised) temporal coverage.\"]);\r\n            }\r\n            if (!this.props.canConstrainRegion) {\r\n                messages.push([WARNING_ICON,\r\n                               <span>This dataset has no (recognised) spatial coverage\r\n                                   and hence it will not show up\r\n                                   in the <strong>World View</strong>.</span>]);\r\n            }\r\n            if (!this.props.canConstrainVariables) {\r\n                messages.push([WARNING_ICON, \"This datasets has no (recognised) variables.\"]);\r\n            }\r\n        } else if (this.props.dataSource.metaInfoStatus === 'loading') {\r\n            messages.push([ISSUE_ICON, \"Please wait while dataset metadata is loaded...\"]);\r\n        } else if (this.props.dataSource.metaInfoStatus === 'error') {\r\n            messages.push([ERROR_ICON, \"Failed to load dataset metadata.\"]);\r\n        }\r\n\r\n        let messagesPanel;\r\n        if (messages.length > 0) {\r\n            messagesPanel = (\r\n                <Card style={WARNINGS_PANEL_STYLE}>\r\n                    {\r\n                        messages.map(([i, t]) =>\r\n                                         <div>{i}&nbsp;&nbsp;{t}</div>)\r\n                    }\r\n                </Card>);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <LongIdLabel\r\n                    label={this.props.isLocalDataSource\r\n                           ? 'Data source (local):'\r\n                           : 'Data source:'}\r\n                    longId={this.props.dataSource.title}\r\n                />\r\n                {timeConstraintsPanel}\r\n                {regionConstraintsPanel}\r\n                {variablesConstraintPanel}\r\n                {cacheConfigPanel}\r\n                {/*{resourceNamePanel}*/}\r\n                {messagesPanel}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    static validateOptions(isLocalDataSource: boolean, options: IDataAccessComponentOptions): boolean {\r\n        if (!options) {\r\n            return false;\r\n        }\r\n\r\n        let validTimeConstraint = true;\r\n        if (options.hasTimeConstraint && options.dateRange) {\r\n            validTimeConstraint = !options.dateRange.error;\r\n        }\r\n\r\n        let validRegion = true;\r\n        if (options.hasRegionConstraint && options.region) {\r\n            const west = options.region.west.value;\r\n            const east = options.region.east.value;\r\n            const south = options.region.south.value;\r\n            const north = options.region.north.value;\r\n            const eps = 360. / 40000.; // 1km\r\n            const validWest = west >= -180 && west <= 180;\r\n            const validEast = east >= -180 && east <= 180;\r\n            const validNorth = north >= -90 && north <= 90;\r\n            const validSouth = south >= -90 && south <= 90;\r\n            const validEastWest = validWest && validEast && Math.abs(west - east) >= eps;\r\n            const validSouthNorth = validSouth && validNorth && (north - south) >= eps;\r\n            validRegion = validEastWest && validSouthNorth;\r\n        }\r\n\r\n        let validVariableNames = true;\r\n        if (options.hasVariablesConstraint && options.variableNames) {\r\n            validVariableNames = !options.variableNames.error;\r\n        }\r\n\r\n        let validDataSourceId = true;\r\n        if (!isLocalDataSource && options.isCacheDataSourceSelected) {\r\n            const makeLocalDataSourceId = options.cachedDataSourceId;\r\n            if (makeLocalDataSourceId && !/[^\\\\/:*?\"<>|\\r\\n]+$/im.test(makeLocalDataSourceId)) {\r\n                validDataSourceId = false;\r\n            }\r\n        }\r\n\r\n        return validTimeConstraint && validRegion && validVariableNames && validDataSourceId;\r\n    }\r\n\r\n    static optionsToErrors(options: IDataAccessComponentOptions) {\r\n        const inputErrors = {};\r\n        if (options.hasTimeConstraint && options.dateRange && options.dateRange.error) {\r\n            inputErrors['Time constraint'] = options.dateRange.error\r\n        }\r\n        if (options.hasVariablesConstraint && options.variableNames && options.variableNames.error) {\r\n            inputErrors['Variables constraint'] = options.variableNames.error\r\n        }\r\n        return inputErrors;\r\n    }\r\n\r\n\r\n    static optionsToOperationArguments(options: IDataAccessComponentOptions) {\r\n        let args = {};\r\n        if (options.hasTimeConstraint && options.dateRange && options.dateRange.value) {\r\n            const t0 = formatDateAsISODateString(options.dateRange.value[0]);\r\n            const t1 = formatDateAsISODateString(options.dateRange.value[1]);\r\n            args = {\r\n                time_range: `${t0},${t1}`,\r\n            };\r\n        }\r\n        if (options.hasRegionConstraint && options.region) {\r\n            const region = options.region;\r\n            args = {\r\n                ...args,\r\n                region: `${region.west.value},${region.south.value},${region.east.value},${region.north.value}`\r\n            };\r\n        }\r\n        if (options.hasVariablesConstraint && options.variableNames) {\r\n            const variableNames = options.variableNames.value;\r\n            args = {\r\n                ...args,\r\n                var_names: variableNames\r\n            };\r\n        }\r\n        if (options.isCacheDataSourceSelected) {\r\n            args = {\r\n                ...args,\r\n                force_local: true\r\n            };\r\n            if (options.cachedDataSourceId) {\r\n                args = {\r\n                    ...args,\r\n                    local_ds_id: options.cachedDataSourceId\r\n                };\r\n            }\r\n        }\r\n        return args;\r\n    }\r\n\r\n    static defaultOptions(isLocalDataSource: boolean, temporalCoverage: TimeRangeValue): IDataAccessComponentOptions {\r\n        let minDate = null;\r\n        let maxDate = null;\r\n        if (temporalCoverage && temporalCoverage[0]) {\r\n            try {\r\n                minDate = new Date(temporalCoverage[0]);\r\n            } catch (e) {\r\n                // ok\r\n            }\r\n        }\r\n        if (temporalCoverage && temporalCoverage[1]) {\r\n            try {\r\n                maxDate = new Date(temporalCoverage[1]);\r\n            } catch (e) {\r\n                // ok\r\n            }\r\n        }\r\n\r\n        return {\r\n            hasTimeConstraint: false,\r\n            dateRange: {value: [minDate, maxDate]},\r\n\r\n            hasRegionConstraint: false,\r\n            region: null,\r\n\r\n            hasVariablesConstraint: false,\r\n            variableNames: null,\r\n\r\n            isCacheDataSourceSelected: !isLocalDataSource,\r\n            cachedDataSourceId: '',\r\n\r\n            openDatasetResourceName: '',\r\n        };\r\n    }\r\n\r\n    // static adjustLocalDataSourceName(options: IDataAccessComponentOptions, dataSource: DataSourceState): IDataAccessComponentOptions {\r\n    //     if (!options.cachedDataSourceId || options.cachedDataSourceId === '') {\r\n    //         let dataSourceId = dataSource && dataSource.id;\r\n    //         if (!dataSourceId) {\r\n    //             dataSourceId = 'unnamed';\r\n    //         }\r\n    //         return {...options, cachedDataSourceId: 'local.' + dataSourceId};\r\n    //     }\r\n    //     return options;\r\n    // }\r\n\r\n    static ensureDateRangeIsValidated(options: IDataAccessComponentOptions, temporalCoverage: TimeRangeValue): IDataAccessComponentOptions {\r\n        if (options.hasTimeConstraint && options.dateRange && temporalCoverage) {\r\n            try {\r\n                const minDate = temporalCoverage[0] ? new Date(temporalCoverage[0]) : new Date('1980-01-01');\r\n                const maxDate = temporalCoverage[1] ? new Date(temporalCoverage[1]) : new Date(Date.now());\r\n\r\n                // re-validate, because min, max may have changed\r\n                validateDateRange(options.dateRange.value, true, minDate, maxDate);\r\n                return {...options, dateRange: {...options.dateRange, error: null}};\r\n            } catch (e) {\r\n                return {...options, dateRange: {...options.dateRange, error: e}};\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport { ReactChild } from 'react';\r\nimport { HTMLSelect, Popover, PopoverInteractionKind, PopoverPosition, Switch, Tooltip, Alignment } from '@blueprintjs/core';\r\nimport { LabelWithType } from '../../components/LabelWithType';\r\nimport { ResourceState } from '../../state';\r\nimport * as cateTypes from '../../../common/cate-types';\r\nimport { isAssignableFrom } from '../../../common/cate-types';\r\nimport { formatDataTypeName } from '../../../common/format';\r\n\r\nexport interface IInputEditorProps {\r\n    name: string;\r\n    dataType: string;\r\n    valueEditor?: JSX.Element;\r\n    tooltipText?: string;\r\n    units?: string;\r\n    resources: Array<ResourceState>;\r\n    resourceName?: string | null;\r\n    isValueEditorShown?: boolean;\r\n    /**\r\n     * Notified if a resource is selected or deselected.\r\n     * @param resourceName The resource name or null\r\n     * @param isValueEditorShown whether the value editor is shown and active\r\n     */\r\n    onChange?: (resourceName: string | null, isValueEditorShown: boolean) => void;\r\n}\r\n\r\n/**\r\n * A component that is used as editor for an input of some workflow step, e.g. operation.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class InputEditor extends React.PureComponent<IInputEditorProps, null> {\r\n\r\n    private static readonly LABEL_STYLE = \r\n            {justifySelf: 'end', justifyContent: 'end'};\r\n    private static readonly EDITOR_SWITCH_STYLE = {margin: 0}\r\n    private static readonly RESOURCE_NAME_STYLE = {justifySelf: 'stretch'};\r\n\r\n    render() {\r\n\r\n        let editor;\r\n        if (this.isValueEditorShown()) {\r\n            editor = this.props.valueEditor;\r\n        } else {\r\n            editor = this.renderResourceNameEditor();\r\n        }\r\n\r\n        const editorSwitch = this.renderEditorSwitch();\r\n        return (\r\n           <React.Fragment key={this.props.name}>\r\n                <LabelWithType style={InputEditor.LABEL_STYLE}\r\n                               label={this.props.name}\r\n                               units={this.props.units}\r\n                               dataType={this.props.dataType}\r\n                               tooltipText={this.props.tooltipText}/>\r\n                {editor}\r\n                {editorSwitch}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    private handleChange(resourceName: string, isValueEditorShown: boolean) {\r\n        // console.log('InputEditor: handleChange', resourceName, isValueEditorShown);\r\n        if (this.props.onChange) {\r\n            this.props.onChange(resourceName, isValueEditorShown);\r\n        }\r\n    }\r\n\r\n    private renderResourceNameEditor() {\r\n        const NULL_VALUE = '__null__';\r\n        const firstResourceOption = (<option key='__first__' value={NULL_VALUE}>Select resource</option>);\r\n        const otherResourceOptions = (this.props.resources || [])\r\n            .filter(resource => this.isDataTypeCompatible(resource))\r\n            .map(resource => <option key={resource.name} value={resource.name}>{resource.name}</option>);\r\n        const resourceOptions = [firstResourceOption].concat(otherResourceOptions);\r\n\r\n        let editor = (\r\n            <div className=\"bp3-intent-primary\" style={InputEditor.RESOURCE_NAME_STYLE}>\r\n                <HTMLSelect\r\n                    fill={true}\r\n                    style={InputEditor.RESOURCE_NAME_STYLE}\r\n                    value={this.props.resourceName || NULL_VALUE}\r\n                    disabled={otherResourceOptions.length === 0}\r\n                    onChange={(event: any) => this.handleChange(event.target.value === NULL_VALUE ? null : event.target.value, false)}\r\n                >\r\n                    {resourceOptions}\r\n                </HTMLSelect>\r\n            </div>\r\n        );\r\n\r\n        if (otherResourceOptions.length === 0) {\r\n            editor = (\r\n                <Popover interactionKind={PopoverInteractionKind.HOVER} hoverOpenDelay={0} hoverCloseDelay={0}\r\n                         position={PopoverPosition.TOP}\r\n                         fill={true}\r\n                         >\r\n                    {editor}\r\n                    <div style={{padding: 8}}>\r\n                        This parameter requires a resource of type <span\r\n                        style={{color: 'rgba(0,255,0,0.8)'}}>{formatDataTypeName(this.props.dataType, false)}</span>.\r\n                        <br/>\r\n                        Currently, no resources of this type are available.<br/>\r\n                        {renderTypeInstanceHintText(this.props.dataType)}\r\n                    </div>\r\n                </Popover>\r\n            );\r\n        }\r\n\r\n        return editor;\r\n    }\r\n\r\n    private renderEditorSwitch() {\r\n        const valueEditorShown = this.isValueEditorShown();\r\n        const valueEditorDisabled = this.isValueEditorDisabled();\r\n        const resourceSelectorDisabled = !this.hasCompatibleResources();\r\n        const switchDisabled = valueEditorDisabled || resourceSelectorDisabled;\r\n        return (\r\n            <span>\r\n                <Tooltip\r\n                    content={(valueEditorShown ? 'Switch to resource selection' : 'Switch to value entry')\r\n                             + (switchDisabled ? ' (disabled)' : '')}>\r\n                    <Switch checked={valueEditorShown}\r\n                            disabled={switchDisabled}\r\n                            alignIndicator={Alignment.LEFT}\r\n                            style={InputEditor.EDITOR_SWITCH_STYLE}\r\n                            onChange={(event: any) =>\r\n                                      this.handleChange(this.props.resourceName, event.target.checked)}/>\r\n                </Tooltip>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    private isDataTypeCompatible(resource) {\r\n        return isAssignableFrom(this.props.dataType, resource.dataType);\r\n    }\r\n\r\n    private hasCompatibleResources() {\r\n        return (this.props.resources || []).some(resource => this.isDataTypeCompatible(resource));\r\n    }\r\n\r\n    private isValueEditorDisabled() {\r\n        return !this.props.valueEditor;\r\n    }\r\n\r\n    private isValueEditorShown() {\r\n        return !!(this.props.isValueEditorShown && this.props.valueEditor);\r\n    }\r\n}\r\n\r\n/**\r\n * Render a hint text how to produce an instance of the desired target type.\r\n *\r\n * @param targetDataType The name of the target data type used in Cate's Python API\r\n * @returns {string} the hint text.\r\n */\r\nfunction renderTypeInstanceHintText(targetDataType: string): ReactChild {\r\n    switch (targetDataType) {\r\n        case cateTypes.DATASET_TYPE:\r\n            return <span>Datasets can be opened from the <b>DATA SOURCES</b> panel.<br/>\r\n                You can also use operations like <code>open_dataset</code> or <br/>\r\n                <code>read_netcdf</code> to produce resources of this type.</span>;\r\n        case cateTypes.DATASET_LIKE_TYPE:\r\n            return <span>Datasets can be opened from the <b>DATA SOURCES</b> panel.<br/>\r\n                You can also use operations like <code>open_dataset</code>, <br/>\r\n                or <code>read_netcdf</code> to produce resources of this type.</span>;\r\n        case cateTypes.DATA_FRAME_TYPE:\r\n            return <span>You can use operations like <code>read_csv</code>, <code>read_geo_data</code><br/>\r\n                to produce resources of this type.</span>;\r\n        case cateTypes.DATA_FRAME_LIKE_TYPE:\r\n            return <span>You can use operations like <code>read_csv</code>, <code>read_geo_data</code>,<br/>\r\n                or <code>open_dataset</code> to produce resources of this type.</span>;\r\n        case cateTypes.ND_ARRAY_TYPE:\r\n            return '';\r\n        case cateTypes.SERIES_TYPE:\r\n            return '';\r\n    }\r\n    return '';\r\n}\r\n","import * as React from 'react';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { Checkbox } from '@blueprintjs/core';\r\n\r\nexport function BooleanValueEditor(props: IValueEditorProps<boolean>) {\r\n    return (\r\n        <Checkbox className=\"bp3-large\"\r\n                  checked={(props.value as any) || false}\r\n                  indeterminate={props.value === null}\r\n                  style={{marginTop: '0', marginBottom: '0'}}\r\n                  onChange={(event: any) => props.onChange(props.input, event.target.checked)}/>\r\n    );\r\n}\r\n","import { HTMLSelect } from '@blueprintjs/core';\r\nimport * as React from 'react';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { OperationInputState } from '../../state';\r\n\r\n\r\nexport class ValueSetValueEditor extends React.PureComponent<IValueEditorProps<any>, null> {\r\n    static readonly NULL_VALUE = '__null__';\r\n    private static readonly VALUE_SELECTOR_STYLE = {justifySelf: 'stretch'};\r\n\r\n    private onChange(value: any) {\r\n        this.props.onChange(this.props.input, value === ValueSetValueEditor.NULL_VALUE ? null : value);\r\n    }\r\n\r\n    static isValueSetGiven(input: OperationInputState) {\r\n        return input.valueSet && input.valueSet.length;\r\n    }\r\n\r\n    render() {\r\n        const valueSet = this.props.input.valueSet;\r\n        const hasValueSet = valueSet && valueSet.length;\r\n        if (!hasValueSet) {\r\n            return null;\r\n        }\r\n        let options = valueSet.map((v, i) => (<option key={i} value={v}>{v}</option>));\r\n        if (this.props.input.nullable) {\r\n            options = [<option key={-1} value={ValueSetValueEditor.NULL_VALUE}/>].concat(...options);\r\n        }\r\n        const value = this.props.value || ValueSetValueEditor.NULL_VALUE;\r\n        return (\r\n            <div className=\"bp3-select\">\r\n                <HTMLSelect\r\n                    fill={true}\r\n                    style={ValueSetValueEditor.VALUE_SELECTOR_STYLE}\r\n                    value={value}\r\n                    onChange={(event: any) => this.onChange(event.target.value)}\r\n                >\r\n                    {options}\r\n                </HTMLSelect>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { ValueSetValueEditor } from './ValueSetValueEditor';\r\nimport { NumericField } from '../../components/field/NumericField';\r\n\r\n// TODO (forman): complete me, i.e. use input.valueRange!\r\n\r\nexport function IntegerValueEditor(props: IValueEditorProps<number>) {\r\n    if (ValueSetValueEditor.isValueSetGiven(props.input)) {\r\n        return (\r\n            <ValueSetValueEditor input={props.input}\r\n                                 value={props.value}\r\n                                 onChange={props.onChange}/>);\r\n    } else {\r\n        return (\r\n            <NumericField isInt={true}\r\n                          size={10}\r\n                          value={props.value}\r\n                          nullable={props.input.nullable}\r\n                          onChange={value => props.onChange(props.input, value)}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { ValueSetValueEditor } from './ValueSetValueEditor';\r\nimport { NumericField } from '../../components/field/NumericField';\r\n\r\n// TODO (forman): complete me, i.e. use input.valueRange!\r\n\r\nexport function FloatValueEditor(props: IValueEditorProps<number>) {\r\n    if (ValueSetValueEditor.isValueSetGiven(props.input)) {\r\n        return (\r\n            <ValueSetValueEditor input={props.input}\r\n                                 value={props.value}\r\n                                 onChange={props.onChange}/>);\r\n    } else {\r\n        return (\r\n            <NumericField isInt={false}\r\n                          size={10}\r\n                          value={props.value}\r\n                          nullable={props.input.nullable}\r\n                          onChange={value => props.onChange(props.input, value)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { ValueSetValueEditor } from './ValueSetValueEditor';\r\nimport { TextField } from '../../components/field/TextField';\r\n\r\n\r\nexport function TextValueEditor(props: IValueEditorProps<string>) {\r\n    if (ValueSetValueEditor.isValueSetGiven(props.input)) {\r\n        return (\r\n            <ValueSetValueEditor input={props.input}\r\n                                 value={props.value}\r\n                                 onChange={props.onChange}/>);\r\n    } else {\r\n        const type = props.input.password ? \"password\" : \"text\";\r\n        return (\r\n            <TextField size={24}\r\n                       value={props.value}\r\n                       nullable={props.input.nullable}\r\n                       onChange={value => props.onChange(props.input, value)}\r\n                       type={type}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { Button, Intent, ControlGroup } from '@blueprintjs/core';\r\n\r\nimport { HostOS, makeAbsolutePath, makeRelativePath } from '../../../common/paths';\r\nimport { toTextValue } from '../../components/field/Field';\r\nimport { IValueEditorProps, ValueEditorCallback, ValueEditorValue } from './ValueEditor';\r\nimport * as actions from '../../actions';\r\nimport { OperationInputState, State } from '../../state';\r\nimport { TextField } from '../../components/field/TextField';\r\nimport { OpenDialogResult, SaveDialogResult } from \"../../components/desktop/types\";\r\n\r\n\r\nconst DIV_STYLE = {display: 'flex', justifySelf: 'stretch'};\r\nconst TEXT_FIELD_STYLE = {flexGrow: 1};\r\nconst BUTTON_STYLE = {flexGrow: 0};\r\n\r\ninterface IFileValueEditorOwnProps extends IValueEditorProps<string> {\r\n}\r\n\r\ninterface IFileValueEditorProps extends IFileValueEditorOwnProps {\r\n    hostOS?: HostOS;\r\n    workspaceDir: string | null;\r\n}\r\n\r\nfunction mapStateToProps(state: State, ownProps: IFileValueEditorOwnProps): IFileValueEditorProps  {\r\n    return {\r\n        ...ownProps,\r\n        hostOS: state.communication.webAPIServiceInfo.hostOS,\r\n        workspaceDir: state.data.workspace ? state.data.workspace.baseDir : null\r\n    };\r\n}\r\n\r\n// TODO (forman): complete me, i.e. validate file name\r\n\r\nconst _FileValueEditor: React.FC<IFileValueEditorProps & DispatchProp<State>> = (\r\n    {\r\n        input,\r\n        value,\r\n        onChange,\r\n        hostOS,\r\n        workspaceDir,\r\n        dispatch\r\n    }) => {\r\n\r\n    value = (value as any) || '';\r\n\r\n    const toRelativePath = (path: string) => {\r\n        if (workspaceDir !== null) {\r\n            return makeRelativePath(path, workspaceDir, hostOS);\r\n        }\r\n        return path\r\n    };\r\n\r\n    const toAbsolutePath = (path: string) => {\r\n        if (workspaceDir !== null) {\r\n            return makeAbsolutePath(workspaceDir, path, hostOS);\r\n        }\r\n        return path\r\n    };\r\n\r\n    let showFileDialogCallback;\r\n    if (input.fileOpenMode === 'w') {\r\n        showFileDialogCallback = (input: OperationInputState,\r\n                                  value: ValueEditorValue<string>,\r\n                                  onChange: ValueEditorCallback<string>) => {\r\n            const saveDialogOptions = {\r\n                defaultPath: toAbsolutePath(toTextValue(value, undefined)),\r\n                filters: input.fileFilters,\r\n            };\r\n            dispatch(actions.showFileSaveDialog(saveDialogOptions, (result: SaveDialogResult) => {\r\n                let filePath = result.filePath;\r\n                if (!result.canceled && filePath) {\r\n                    filePath = toRelativePath(filePath);\r\n                    onChange(input, filePath);\r\n                }\r\n            }) as any);\r\n        }\r\n    } else {\r\n        showFileDialogCallback = (input: OperationInputState,\r\n                                  value: ValueEditorValue<string>,\r\n                                  onChange: ValueEditorCallback<string>) => {\r\n            let properties = input.fileProps as string[];\r\n            const propsSet = new Set(properties);\r\n            if (!propsSet.has('openFile') && !propsSet.has('openDirectory')) {\r\n                propsSet.add('openFile');\r\n                properties = Array.from(propsSet);\r\n            }\r\n            const openDialogOptions = {\r\n                defaultPath: toAbsolutePath(toTextValue(value, undefined)),\r\n                filters: input.fileFilters,\r\n                properties: properties as any,\r\n            };\r\n            dispatch(actions.showFileOpenDialog(openDialogOptions, (result: OpenDialogResult) => {\r\n                let filePaths = result.filePaths;\r\n                if (!result.canceled && filePaths.length > 0) {\r\n                    filePaths = filePaths.map(toRelativePath);\r\n                    // TODO (forman): file choosers: handle properties=[\"multiSelection\", ...]\r\n                    //   with result.filePaths.length > 0. In this case concatenate paths in a OS-compliant way,\r\n                    //   i.e. path separator on Unix is ':', on Windows ';'\r\n                    if (properties && properties.find(p => p === 'multiSelection')) {\r\n                        console.error('multi-file selection is not yet implemented, returning first entry only');\r\n                    }\r\n                    onChange(input, filePaths[0]);\r\n                }\r\n            }) as any);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ControlGroup fill={true} style={DIV_STYLE}>\r\n            <TextField style={TEXT_FIELD_STYLE}\r\n                       value={value}\r\n                       placeholder=\"Enter file path\"\r\n                       onChange={value => onChange(input, value)}\r\n                       nullable={input.nullable}\r\n            />\r\n            <Button intent={Intent.PRIMARY} style={BUTTON_STYLE}\r\n                    onClick={() => showFileDialogCallback(input, value, onChange)}>...</Button>\r\n        </ControlGroup>\r\n    );\r\n}\r\n\r\nexport const FileValueEditor = connect(mapStateToProps)(_FileValueEditor);\r\n","import * as React from 'react';\r\nimport { ModalDialog } from './ModalDialog';\r\nimport { GeometryType, validateGeometryValue } from '../../common/geometry-util';\r\nimport { FormGroup, Label } from '@blueprintjs/core';\r\n\r\ninterface IGeometryDialogProps {\r\n    isOpen: boolean;\r\n    value: string;\r\n    onConfirm: (value: string) => void;\r\n    onCancel: () => void;\r\n    geometryType: GeometryType;\r\n}\r\n\r\ninterface IGeometryDialogState {\r\n    value?: string;\r\n    error?: Error;\r\n}\r\n\r\nconst WKT_LINK = (\r\n    <a href=\"https://en.wikipedia.org/wiki/Well-known_text\" target=\"_blank\" rel=\"noopener noreferrer\">Well-Known Text\r\n        (WKT)</a>);\r\n\r\nexport class GeometryDialog extends React.Component<IGeometryDialogProps, IGeometryDialogState> {\r\n    static readonly NOMINAL_CLASS = 'bp3-input bp3-fill';\r\n    static readonly ERROR_CLASS = 'bp3-input bp3-fill bp3-intent-danger';\r\n\r\n    constructor(props: IGeometryDialogProps) {\r\n        super(props);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.state = this.toState(this.props.value);\r\n    }\r\n\r\n    componentWillReceiveProps(props: IGeometryDialogProps) {\r\n        this.setState(this.toState(props.value));\r\n    }\r\n\r\n    onConfirm() {\r\n        this.props.onConfirm(this.state.value);\r\n    }\r\n\r\n    onChange(ev: any) {\r\n        this.setState(this.toState(ev.target.value));\r\n    }\r\n\r\n    canConfirm(): boolean {\r\n        return !this.state.error;\r\n    }\r\n\r\n    private toState(value: any) {\r\n        let error;\r\n        try {\r\n            validateGeometryValue(value, this.props.geometryType);\r\n        } catch (e) {\r\n            error = e;\r\n        }\r\n        return {value, error};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalDialog isOpen={this.props.isOpen}\r\n                         title=\"Geometry Editor\"\r\n                         onCancel={this.props.onCancel}\r\n                         onConfirm={this.onConfirm}\r\n                         canConfirm={this.canConfirm}\r\n                         renderBody={this.renderBody}/>\r\n        );\r\n    }\r\n\r\n    renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        const value = this.state.value;\r\n        const hasError = !!this.state.error;\r\n        return (\r\n            <FormGroup>\r\n                <Label htmlFor=\"wkt\">\r\n                    {`Enter Geometry of type ${this.props.geometryType}`}\r\n                    <span className=\"bp3-text-muted\"> (WGS84 coordinates in degree)</span>\r\n                </Label>\r\n                <div className=\"bp3-form-content\" style={{width: '100%'}}>\r\n                    <textarea id=\"wkt\"\r\n                              className={hasError ? GeometryDialog.ERROR_CLASS : GeometryDialog.NOMINAL_CLASS}\r\n                              rows={10}\r\n                              dir=\"auto\"\r\n                              value={value}\r\n                              onChange={this.onChange}/>\r\n                    {this.getHelpText()}\r\n                </div>\r\n            </FormGroup>\r\n        );\r\n    }\r\n\r\n    getHelpText() {\r\n        let errorText;\r\n        if (this.state.error) {\r\n            errorText = (<p>{`Error: ${this.state.error.message}`}</p>);\r\n        }\r\n\r\n        let helpText;\r\n        if (this.props.geometryType === 'Point') {\r\n            helpText = (<p>Use <code>lon, lat</code> or use {this.props.geometryType} {WKT_LINK} syntax.</p>);\r\n        } else if (this.props.geometryType === 'Polygon') {\r\n            helpText = (\r\n                <p>Use <code>west, south, east, north</code> or use {this.props.geometryType} {WKT_LINK} syntax.</p>);\r\n        } else {\r\n            helpText = (<p>Use {this.props.geometryType} {WKT_LINK} syntax.</p>);\r\n        }\r\n\r\n        return (<div className=\"bp3-form-helper-text\">{errorText}{helpText}</div>);\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { AnchorButton, ControlGroup, Intent } from '@blueprintjs/core';\r\nimport { toTextValue } from './Field';\r\nimport { TextField, TextFieldValue } from './TextField';\r\nimport { GeometryDialog } from '../GeometryDialog';\r\nimport { GeometryType, validateGeometryValue } from '../../../common/geometry-util';\r\nimport { GeometryWKTGetter } from '../../containers/editor/ValueEditor';\r\n\r\n\r\ninterface IGeometryFieldProps {\r\n    value: TextFieldValue | any;\r\n    onChange: (value: TextFieldValue) => void;\r\n    geometryType: GeometryType;\r\n    placeholder?: string;\r\n    size?: number;\r\n    nullable?: boolean;\r\n    disabled?: boolean;\r\n    geometryWKTGetter?: GeometryWKTGetter;\r\n}\r\n\r\ninterface IGeometryFieldState {\r\n    isEditorOpen: boolean;\r\n}\r\n\r\nexport class GeometryField extends React.Component<IGeometryFieldProps, IGeometryFieldState> {\r\n    private static DIV_STYLE = {display: 'flex', justifySelf: 'stretch'};\r\n    private static TEXT_FIELD_STYLE = {flexGrow: 1};\r\n    private static BUTTON_STYLE = {flexGrow: 0};\r\n\r\n    constructor(props: IGeometryFieldProps) {\r\n        super(props);\r\n        this.validateGeometryText = this.validateGeometryText.bind(this);\r\n        this.state = {isEditorOpen: false};\r\n        this.setGeometryWKT = this.setGeometryWKT.bind(this);\r\n    }\r\n\r\n    validateGeometryText(value: string | null) {\r\n        validateGeometryValue(value, this.props.geometryType);\r\n    }\r\n\r\n    setGeometryWKT() {\r\n        let wkt;\r\n        try {\r\n            wkt = this.props.geometryWKTGetter && this.props.geometryWKTGetter();\r\n        } catch (error) {\r\n            console.error(error);\r\n            wkt = 'Error: ' + error;\r\n        }\r\n        this.props.onChange({textValue: wkt, value: wkt});\r\n    }\r\n\r\n    render() {\r\n        let placeholder = this.props.placeholder;\r\n        if (!placeholder) {\r\n            if (this.props.geometryType === 'Point') {\r\n                placeholder = '<lon>,<lat> or Point WKT';\r\n            } else if (this.props.geometryType === 'Polygon') {\r\n                placeholder = '<lon1>,<lat1>,<lon2>,<lat2> or Polygon WKT';\r\n            } else {\r\n                placeholder = `Enter ${this.props.geometryType} WKT`;\r\n            }\r\n        }\r\n        return (\r\n            <ControlGroup style={GeometryField.DIV_STYLE} fill={true}>\r\n                <TextField\r\n                    value={this.props.value}\r\n                    onChange={this.props.onChange}\r\n                    placeholder={placeholder}\r\n                    validator={this.validateGeometryText}\r\n                    nullable={this.props.nullable}\r\n                    style={GeometryField.TEXT_FIELD_STYLE}\r\n                />\r\n\r\n                <AnchorButton icon=\"selection\" style={GeometryField.BUTTON_STYLE}\r\n                              disabled={!this.props.geometryWKTGetter}\r\n                              onClick={this.setGeometryWKT}/>\r\n\r\n                <AnchorButton intent={Intent.PRIMARY} style={GeometryField.BUTTON_STYLE}\r\n                              onClick={() => this.setState({isEditorOpen: true})}>...</AnchorButton>\r\n\r\n                <GeometryDialog isOpen={this.state.isEditorOpen}\r\n                                value={toTextValue(this.props.value)}\r\n                                onConfirm={(value: string) => {\r\n                                    this.setState({isEditorOpen: false});\r\n                                    this.props.onChange({textValue: value, value: value});\r\n                                }}\r\n                                onCancel={() => {\r\n                                    this.setState({isEditorOpen: false});\r\n                                }}\r\n                                geometryType={this.props.geometryType}/>\r\n            </ControlGroup>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { GeometryWKTGetter, IValueEditorProps } from './ValueEditor';\r\nimport { FieldValue } from '../../components/field/Field';\r\nimport { GeometryField } from '../../components/field/GeometryField';\r\nimport { GeometryType } from '../../../common/geometry-util';\r\n\r\ninterface IGeometryValueEditorProps extends IValueEditorProps<string> {\r\n    geometryType: GeometryType;\r\n    placeholder?: string;\r\n    size?: number;\r\n    geometryWKTGetter?: GeometryWKTGetter;\r\n}\r\n\r\nexport class GeometryValueEditor extends React.Component<IGeometryValueEditorProps, null> {\r\n\r\n    constructor(props: IGeometryValueEditorProps) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(value: FieldValue<string>) {\r\n        this.props.onChange(this.props.input, value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <GeometryField\r\n                value={this.props.value}\r\n                onChange={this.onChange}\r\n                placeholder={this.props.placeholder}\r\n                size={this.props.size}\r\n                geometryType={this.props.geometryType}\r\n                nullable={this.props.input.nullable}\r\n                geometryWKTGetter={this.props.geometryWKTGetter}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import * as React from 'react';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { DateRange } from '@blueprintjs/datetime';\r\nimport { FieldValue } from '../../components/field/Field';\r\nimport { DateRangeField } from '../../components/field/DateRangeField';\r\nimport { parseDate } from '../../components/field/DateField';\r\n\r\ninterface ITimeRangeValueEditorProps extends IValueEditorProps<string> {\r\n}\r\n\r\nexport class TimeRangeValueEditor extends React.PureComponent<ITimeRangeValueEditorProps, null> {\r\n\r\n    constructor(props: ITimeRangeValueEditorProps) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(value: FieldValue<DateRange>) {\r\n        const textValue = value.textValue;\r\n        const error = value.error;\r\n        this.props.onChange(this.props.input, {textValue, value: textValue, error});\r\n    }\r\n\r\n    render() {\r\n        const valueMinMax = this.getValueMinMax();\r\n        return (\r\n            <DateRangeField\r\n                nullable={this.props.input.nullable}\r\n                min={valueMinMax[0]}\r\n                max={valueMinMax[1]}\r\n                value={this.props.value}\r\n                onChange={this.onChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    private getValueMinMax(): DateRange {\r\n        let min, max;\r\n        const valueRange = this.props.input.valueRange as [string, string];\r\n        if (valueRange) {\r\n            try {\r\n                min = parseDate(valueRange[0], true);\r\n                max = parseDate(valueRange[1], true);\r\n            } catch (e) {\r\n                // ok\r\n            }\r\n        }\r\n        return [min, max];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { ListBox, ListBoxSelectionMode } from '../components/ListBox';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport { ScrollablePanelContent } from '../components/ScrollableContent';\r\n\r\ninterface IDimensionsDialogProps {\r\n    isOpen: boolean;\r\n    value: string[];\r\n    dimNames: string[];\r\n    onConfirm: (value: string[]) => void;\r\n    onCancel: () => void;\r\n    multiSelect?: boolean;\r\n}\r\n\r\ninterface IDimensionssDialogState {\r\n    value: string[] | null;\r\n}\r\n\r\nexport class DimensionsDialog extends React.Component<IDimensionsDialogProps, IDimensionssDialogState> {\r\n\r\n    constructor(props: IDimensionsDialogProps) {\r\n        super(props);\r\n        this.onSelection = this.onSelection.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.state = {value: this.props.value};\r\n    }\r\n\r\n    private onSelection(value: string[]) {\r\n        this.setState({value});\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.onConfirm(this.state.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalDialog\r\n                isOpen={this.props.isOpen}\r\n                title={this.props.multiSelect ? 'Select Dimensions' : 'Select Dimension'}\r\n                icon=\"variable\"\r\n                onConfirm={this.onConfirm}\r\n                onCancel={this.props.onCancel}\r\n                renderBody={this.renderBody}\r\n            />\r\n        );\r\n    }\r\n\r\n    private renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        const dimensions = this.props.dimNames;\r\n        if (!dimensions) {\r\n            return (<p>{`No dimensions names found for the given source.`}</p>);\r\n        }\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <p>{this.props.multiSelect ? 'Select one or more dimensions:' : 'Select dimension:'}</p>\r\n                <ListBox items={dimensions}\r\n                         getItemKey={DimensionsDialog.getDimItemKey}\r\n                         renderItem={DimensionsDialog.renderDimItem}\r\n                         selectionMode={this.props.multiSelect ? ListBoxSelectionMode.MULTIPLE : ListBoxSelectionMode.SINGLE}\r\n                         selection={this.state.value}\r\n                         style={{height: '20em'}}\r\n                         onSelection={this.onSelection}\r\n                         onItemDoubleClick={this.state.value ? this.onConfirm : null}/>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private static getDimItemKey(dimension: string) {\r\n        return dimension;\r\n    }\r\n\r\n    private static renderDimItem(dimension: string) {\r\n        return (\r\n            <div>\r\n                {dimension}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { AnchorButton, ControlGroup, Intent } from '@blueprintjs/core';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { FieldValue, toTextValue } from '../../components/field/Field';\r\nimport { TextField } from '../../components/field/TextField';\r\nimport { DimensionsDialog } from '../DimensionsDialog';\r\n\r\ninterface IDimNamesValueEditorProps extends IValueEditorProps<string> {\r\n    dimNames: string[];\r\n    multi?: boolean;\r\n}\r\n\r\ninterface IDimNamesValueEditorState {\r\n    isDetailsEditorOpen: boolean;\r\n}\r\n\r\nexport class DimNameValueEditor extends React.Component<IDimNamesValueEditorProps, IDimNamesValueEditorState> {\r\n\r\n    private static DIV_STYLE = {width: '24em', display: 'flex', flexGrow: 1};\r\n    private static TEXT_FIELD_STYLE = {flexGrow: 1};\r\n    private static BUTTON_STYLE = {flex: 'none'};\r\n\r\n    constructor(props: IDimNamesValueEditorProps) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n        this.state = {isDetailsEditorOpen: false};\r\n    }\r\n\r\n    onChange(value: FieldValue<string>) {\r\n        this.props.onChange(this.props.input, value);\r\n    }\r\n\r\n    validate(value: string) {\r\n        validateDimNamesText(value, this.props.input.nullable, this.props.multi, this.props.dimNames);\r\n    }\r\n\r\n    render() {\r\n        const textValue = toTextValue(this.props.value);\r\n        const valueDims = textValue !== '' ? textValue.split(',').map(name => name.trim()) : [];\r\n        const hasSelectableDims = this.props.dimNames && this.props.dimNames.length;\r\n        return (\r\n            <ControlGroup style={DimNameValueEditor.DIV_STYLE}>\r\n                <TextField\r\n                    value={this.props.value}\r\n                    validator={this.validate}\r\n                    size={this.props.multi ? 36 : 24}\r\n                    placeholder={this.props.multi ? 'Enter dimension names, separated by comma' : 'Enter dimension name'}\r\n                    onChange={this.onChange}\r\n                    nullable={this.props.input.nullable}\r\n                    style={DimNameValueEditor.TEXT_FIELD_STYLE}\r\n                />\r\n\r\n                <AnchorButton intent={Intent.PRIMARY}\r\n                              onClick={() => this.setState({isDetailsEditorOpen: true})}\r\n                              disabled={!hasSelectableDims}\r\n                              style={DimNameValueEditor.BUTTON_STYLE}>...</AnchorButton>\r\n\r\n                <DimensionsDialog isOpen={this.state.isDetailsEditorOpen}\r\n                                  dimNames={this.props.dimNames}\r\n                                  multiSelect={this.props.multi}\r\n                                  value={valueDims}\r\n                                  onConfirm={(value: string[]) => {\r\n                                      const textValue = value ? value.join(', ') : null;\r\n                                      this.setState({isDetailsEditorOpen: false});\r\n                                      this.onChange({textValue, value: textValue});\r\n                                  }}\r\n                                  onCancel={() => {\r\n                                      this.setState({isDetailsEditorOpen: false} as any);\r\n                                  }}/>\r\n            </ControlGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport function validateDimNamesText(value: string | null, nullable: boolean, multi: boolean, dimNames: string[]) {\r\n    if (!value || value.trim() === '') {\r\n        if (!nullable) {\r\n            throw new Error(multi ? 'One or more dimension names expected.' : 'Dimension name expected.');\r\n        }\r\n        return;\r\n    }\r\n    const valueDims = value.split(',');\r\n    if (multi) {\r\n        for (let dimName of valueDims) {\r\n            if (dimName.trim() === '') {\r\n                throw new Error('Value must be a comma-separated list of dimension names.');\r\n            }\r\n        }\r\n    } else {\r\n        if (valueDims.length !== 1) {\r\n            throw new Error('Value must be a single dimension name.');\r\n        }\r\n        if (valueDims[0].trim() === '') {\r\n            throw new Error('Value must be a dimension name.');\r\n        }\r\n    }\r\n    if (dimNames) {\r\n        for (let dimName of valueDims) {\r\n            const dimSet = new Set(dimNames);\r\n            if (!dimSet.has(dimName)) {\r\n                throw new Error(`\"${dimName}\" is not a valid dimension. Valid dimensions are: \"${dimNames}\"`);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { DateRange } from '@blueprintjs/datetime';\r\nimport { FieldValue } from '../../components/field/Field';\r\nimport { DateField, DEFAULT_DATE_RANGE, parseDate } from '../../components/field/DateField';\r\n\r\ninterface ITimeValueEditorProps extends IValueEditorProps<string> {\r\n}\r\n\r\nexport class TimeValueEditor extends React.PureComponent<ITimeValueEditorProps, null> {\r\n\r\n    constructor(props: ITimeValueEditorProps) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(value: FieldValue<Date>) {\r\n        const textValue = value.textValue;\r\n        const error = value.error;\r\n        this.props.onChange(this.props.input, {textValue, value: textValue, error});\r\n    }\r\n\r\n    render() {\r\n        const valueMinMax = this.getValueMinMax();\r\n        return (\r\n            <DateField\r\n                nullable={this.props.input.nullable}\r\n                min={valueMinMax[0]}\r\n                max={valueMinMax[1]}\r\n                value={this.props.value}\r\n                onChange={this.onChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    private getValueMinMax(): DateRange {\r\n        let min, max;\r\n        const valueRange = this.props.input.valueRange as [string, string];\r\n        if (valueRange) {\r\n            try {\r\n                min = parseDate(valueRange[0], true);\r\n                max = parseDate(valueRange[1], true);\r\n            } catch (e) {\r\n                min = DEFAULT_DATE_RANGE[0];\r\n                max = DEFAULT_DATE_RANGE[1];\r\n            }\r\n        }\r\n        return [min, max];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport AceEditor from 'react-ace';\r\nimport { ModalDialog } from './ModalDialog';\r\n\r\nimport 'brace/mode/python';\r\nimport 'brace/theme/monokai';\r\n\r\ninterface IScriptDialogProps {\r\n    isOpen: boolean;\r\n    value: string;\r\n    onConfirm: (value: string) => void;\r\n    onCancel: () => void;\r\n    scriptLang: string;\r\n}\r\n\r\ninterface IScriptDialogState {\r\n    value?: string;\r\n    error?: Error;\r\n}\r\n\r\n\r\nconst LIBS = [\r\n    {href: 'http://xarray.pydata.org/en/stable/api.html#top-level-functions', module: 'xr', name: 'xarray'},\r\n    {href: 'http://xarray.pydata.org/en/stable/api.html#universal-functions', module: 'xu', name: 'xarray u-funcs'},\r\n    {href: 'http://pandas.pydata.org/pandas-docs/stable/basics.html', module: 'pd', name: 'Pandas'},\r\n    {href: 'http://pandas.pydata.org/pandas-docs/stable/basics.html', module: 'np', name: 'numpy'},\r\n];\r\n\r\nexport class ScriptDialog extends React.Component<IScriptDialogProps, IScriptDialogState> {\r\n    private static readonly DIALOG_STYLE: React.CSSProperties = {width: '54em'};\r\n\r\n    constructor(props: IScriptDialogProps) {\r\n        super(props);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.state = this.toState(this.props.value);\r\n    }\r\n\r\n    componentWillReceiveProps(props: IScriptDialogProps) {\r\n        this.setState(this.toState(props.value));\r\n    }\r\n\r\n    onConfirm() {\r\n        this.props.onConfirm(this.state.value);\r\n    }\r\n\r\n    onChange(value: string) {\r\n        this.setState(this.toState(value));\r\n    }\r\n\r\n    canConfirm(): boolean {\r\n        return !this.state.error;\r\n    }\r\n\r\n    // noinspection JSMethodCanBeStatic\r\n    private toState(value: any) {\r\n        let error;\r\n        try {\r\n            // TODO (nf)\r\n            // validateScriptValue(value, this.props.scriptLang);\r\n        } catch (e) {\r\n            error = e;\r\n        }\r\n        return {value, error};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalDialog isOpen={this.props.isOpen}\r\n                         title=\"Script Editor\"\r\n                         onCancel={this.props.onCancel}\r\n                         onConfirm={this.onConfirm}\r\n                         canConfirm={this.canConfirm}\r\n                         renderBody={this.renderBody}\r\n                         style={ScriptDialog.DIALOG_STYLE}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        const value = this.state.value;\r\n        // const hasError = !!this.state.error;\r\n        return (\r\n            <React.Fragment>\r\n                <AceEditor mode={this.props.scriptLang}\r\n                           theme=\"monokai\"\r\n                           width={'100%'}\r\n                           fontSize={14}\r\n                           showGutter={true}\r\n                           highlightActiveLine={true}\r\n                           value={value}\r\n                           onChange={this.onChange}\r\n                />\r\n                {this.getHelpText()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    getHelpText() {\r\n\r\n        const libText = LIBS.map((item, index) => (\r\n            <span><code>{item.module}</code>&nbsp;(<a href={item.href}\r\n                                                      rel=\"noopener noreferrer\"\r\n                                                      target=\"_blank\">{item.name}</a>){index < LIBS.length - 1 ? ', ' : ''}</span>\r\n        ));\r\n\r\n        return (\r\n            <div className=\"bp3-form-helper-text\" style={{marginTop: '0.5em'}}>\r\n                Please use Python 3.6+ syntax. The following modules are imported by default: {libText}. Other\r\n                modules can be imported: <code>dask</code>, <code>gdal</code>, <code>geos</code> <code>pyshp</code>,\r\n                <code>scipy</code>, <code>shapely</code>.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { AnchorButton, ControlGroup, Intent } from '@blueprintjs/core';\r\nimport { IFieldProps, toTextValue } from './Field';\r\nimport { TextField } from './TextField';\r\nimport { ScriptDialog } from '../ScriptDialog';\r\n\r\n\r\ninterface IScriptFieldProps extends IFieldProps {\r\n    scriptLang: string;\r\n    nullable?: boolean;\r\n}\r\n\r\ninterface IScriptFieldState {\r\n    isEditorOpen: boolean;\r\n}\r\n\r\nexport class ScriptField extends React.Component<IScriptFieldProps, IScriptFieldState> {\r\n    private static DIV_STYLE = {display: 'flex'};\r\n    private static TEXT_FIELD_STYLE = {flexGrow: 1};\r\n    private static BUTTON_STYLE = {flexGrow: 0};\r\n\r\n    constructor(props: IScriptFieldProps) {\r\n        super(props);\r\n        this.validateScript = this.validateScript.bind(this);\r\n        this.state = {isEditorOpen: false};\r\n    }\r\n\r\n    validateScript(value: string | null) {\r\n        // TODO (nf)\r\n    }\r\n\r\n    render() {\r\n        let placeholder = this.props.placeholder;\r\n        return (\r\n            <ControlGroup style={ScriptField.DIV_STYLE} fill={true}>\r\n                <TextField\r\n                    value={this.props.value}\r\n                    onChange={this.props.onChange}\r\n                    size={this.props.size}\r\n                    placeholder={placeholder}\r\n                    validator={this.validateScript}\r\n                    nullable={this.props.nullable}\r\n                    style={ScriptField.TEXT_FIELD_STYLE}\r\n                />\r\n\r\n                <AnchorButton intent={Intent.PRIMARY} style={ScriptField.BUTTON_STYLE}\r\n                              onClick={() => this.setState({isEditorOpen: true})}>...</AnchorButton>\r\n\r\n                <ScriptDialog isOpen={this.state.isEditorOpen}\r\n                              value={toTextValue(this.props.value)}\r\n                              onConfirm={(value: string) => {\r\n                                  this.setState({isEditorOpen: false});\r\n                                  this.props.onChange({textValue: value, value: value});\r\n                              }}\r\n                              onCancel={() => {\r\n                                  this.setState({isEditorOpen: false});\r\n                              }}\r\n                              scriptLang={this.props.scriptLang}/>\r\n            </ControlGroup>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { IValueEditorProps } from './ValueEditor';\r\nimport { FieldValue } from '../../components/field/Field';\r\nimport { ScriptField } from '../../components/field/ScriptField';\r\n\r\ninterface IScriptValueEditorProps extends IValueEditorProps<string> {\r\n    placeholder?: string;\r\n    size?: number;\r\n}\r\n\r\nexport class ScriptValueEditor extends React.Component<IScriptValueEditorProps, null> {\r\n\r\n    constructor(props: IScriptValueEditorProps) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(value: FieldValue<string>) {\r\n        this.props.onChange(this.props.input, value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ScriptField\r\n                value={this.props.value}\r\n                onChange={this.onChange}\r\n                placeholder={this.props.placeholder}\r\n                size={this.props.size}\r\n                scriptLang={this.props.input.scriptLang}\r\n                nullable={this.props.input.nullable}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import * as React from 'react';\r\nimport * as types from '../../../common/cate-types';\r\nimport { OperationInputState, ResourceState } from '../../state';\r\nimport { FieldValue } from '../../components/field/Field';\r\nimport { BooleanValueEditor } from './BooleanValueEditor';\r\nimport { IntegerValueEditor } from './IntegerValueEditor';\r\nimport { FloatValueEditor } from './FloatValueEditor';\r\nimport { TextValueEditor } from './TextValueEditor';\r\nimport { FileValueEditor } from './FileValueEditor';\r\nimport { GeometryValueEditor } from './GeometryValueEditor';\r\nimport { TimeRangeValueEditor } from './TimeRangeValueEditor';\r\nimport { VarNameValueEditor } from './VarNameValueEditor';\r\nimport { DimNameValueEditor } from './DimNameValueEditor';\r\nimport { DictValueEditor } from './DictValueEditor';\r\nimport { LiteralValueEditor } from './LiteralValueEditor';\r\nimport { TimeValueEditor } from './TimeValueEditor';\r\nimport { ScriptValueEditor } from './ScriptValueEditor';\r\nimport { InputAssignments } from './value-editor-assign';\r\n\r\nexport type ValueEditorValue<T> = FieldValue<T> | T | null;\r\nexport type ValueEditorCallback<T> = (input: OperationInputState, value: ValueEditorValue<T>) => void;\r\n\r\nexport type GeometryWKTGetter = (() => string) | null;\r\n\r\nexport interface IValueEditorProps<T> {\r\n    input: OperationInputState;\r\n    value: ValueEditorValue<T>;\r\n    onChange: ValueEditorCallback<T>;\r\n    inputAssignments?: InputAssignments;\r\n    resources?: ResourceState[];\r\n    geometryWKTGetter?: GeometryWKTGetter;\r\n}\r\n\r\nexport type ValueEditorFactory<T> = (props: IValueEditorProps<T>) => JSX.Element | null;\r\n\r\n/**\r\n * Provides an appropriate value editor widget for the given input (OperationInputState).\r\n */\r\nexport function ValueEditor(props: IValueEditorProps<any>) {\r\n    return renderValueEditor(props);\r\n}\r\n\r\n/**\r\n * Provides an appropriate value editor widget for the given input (OperationInputState).\r\n */\r\nexport function renderValueEditor<T>(props: IValueEditorProps<T>) {\r\n    const factory = getValueEditorFactory(props.input.dataType);\r\n    return factory ? factory(props) : null;\r\n}\r\n\r\nexport function hasValueEditorFactory(dataType: string): boolean {\r\n    return !!getValueEditorFactory(dataType);\r\n}\r\n\r\nexport function getValueEditorFactory(dataType: string): ValueEditorFactory<any> {\r\n    return dataType ? VALUE_EDITOR_FACTORIES[dataType] : null;\r\n}\r\n\r\n//noinspection JSUnusedGlobalSymbols\r\nexport function registerValueEditorFactory(dataType: string, factory: ValueEditorFactory<any>) {\r\n    VALUE_EDITOR_FACTORIES[dataType] = factory;\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction renderBoolValueEditor(props: IValueEditorProps<boolean>) {\r\n    return <BooleanValueEditor input={props.input} value={props.value} onChange={props.onChange}/>;\r\n}\r\n\r\nfunction renderIntValueEditor(props: IValueEditorProps<number>) {\r\n    return <IntegerValueEditor input={props.input} value={props.value} onChange={props.onChange}/>;\r\n}\r\n\r\nfunction renderFloatValueEditor(props: IValueEditorProps<number>) {\r\n    return <FloatValueEditor input={props.input} value={props.value} onChange={props.onChange}/>;\r\n}\r\n\r\nfunction renderStrValueEditor(props: IValueEditorProps<string>) {\r\n    if (props.input.fileOpenMode) {\r\n        return renderFileValueEditor(props);\r\n    } else if (props.input.scriptLang) {\r\n        return renderScriptValueEditor(props);\r\n    } else {\r\n        return renderTextValueEditor(props);\r\n    }\r\n}\r\n\r\nfunction renderFileValueEditor(props: IValueEditorProps<string>) {\r\n    return <FileValueEditor input={props.input} value={props.value} onChange={props.onChange}/>;\r\n}\r\n\r\nfunction renderScriptValueEditor(props: IValueEditorProps<string>) {\r\n    return <ScriptValueEditor input={props.input} value={props.value} onChange={props.onChange}/>;\r\n}\r\n\r\nfunction renderTextValueEditor(props: IValueEditorProps<string>) {\r\n    return <TextValueEditor input={props.input} value={props.value} onChange={props.onChange}/>;\r\n}\r\n\r\nfunction renderPointLikeValueEditor(props: IValueEditorProps<string>) {\r\n    return <GeometryValueEditor input={props.input} value={props.value} onChange={props.onChange} geometryType=\"Point\"\r\n                                size={16} geometryWKTGetter={props.geometryWKTGetter}/>;\r\n}\r\n\r\nfunction renderPolygonLikeValueEditor(props: IValueEditorProps<string>) {\r\n    return <GeometryValueEditor input={props.input} value={props.value} onChange={props.onChange} geometryType=\"Polygon\"\r\n                                size={32} geometryWKTGetter={props.geometryWKTGetter}/>;\r\n}\r\n\r\nfunction renderGeometryLikeValueEditor(props: IValueEditorProps<string>) {\r\n    return <GeometryValueEditor input={props.input} value={props.value} onChange={props.onChange}\r\n                                geometryType=\"Geometry\" size={32} geometryWKTGetter={props.geometryWKTGetter}/>;\r\n}\r\n\r\nfunction renderTimeLikeValueEditor(props: IValueEditorProps<string>) {\r\n    return <TimeValueEditor input={props.input} value={props.value} onChange={props.onChange}/>;\r\n}\r\n\r\nfunction renderTimeRangeLikeValueEditor(props: IValueEditorProps<string>) {\r\n    return <TimeRangeValueEditor input={props.input} value={props.value} onChange={props.onChange}/>;\r\n}\r\n\r\nfunction renderVarNameLikeValueEditor(props: IValueEditorProps<string>) {\r\n    return <VarNameValueEditor input={props.input} value={props.value} onChange={props.onChange}\r\n                               resource={findResource(props)} multi={false}/>;\r\n}\r\n\r\nfunction renderVarNamesLikeValueEditor(props: IValueEditorProps<string>) {\r\n    return <VarNameValueEditor input={props.input} value={props.value} onChange={props.onChange}\r\n                               resource={findResource(props)} multi={true}/>;\r\n}\r\n\r\nfunction renderDimNameLikeValueEditor(props: IValueEditorProps<string>) {\r\n    return <DimNameValueEditor input={props.input} value={props.value} onChange={props.onChange}\r\n                               dimNames={findDims(props)} multi={false}/>;\r\n}\r\n\r\nfunction renderDimNamesLikeValueEditor(props: IValueEditorProps<string>) {\r\n    return <DimNameValueEditor input={props.input} value={props.value} onChange={props.onChange}\r\n                               dimNames={findDims(props)} multi={true}/>;\r\n}\r\n\r\nfunction renderDictLikeValueEditor(props: IValueEditorProps<string>) {\r\n    return <DictValueEditor input={props.input} value={props.value} onChange={props.onChange}/>;\r\n}\r\n\r\nfunction renderLiteralValueEditor(props: IValueEditorProps<string>) {\r\n    return <LiteralValueEditor input={props.input} value={props.value} onChange={props.onChange}/>;\r\n}\r\n\r\nconst VALUE_EDITOR_FACTORIES = {\r\n    [types.BOOL_TYPE]: renderBoolValueEditor,\r\n    [types.INT_TYPE]: renderIntValueEditor,\r\n    [types.FLOAT_TYPE]: renderFloatValueEditor,\r\n    [types.STR_TYPE]: renderStrValueEditor,\r\n    [types.POINT_LIKE_TYPE]: renderPointLikeValueEditor,\r\n    [types.POLYGON_LIKE_TYPE]: renderPolygonLikeValueEditor,\r\n    [types.GEOMETRY_LIKE_TYPE]: renderGeometryLikeValueEditor,\r\n    [types.TIME_LIKE_TYPE]: renderTimeLikeValueEditor,\r\n    [types.TIME_RANGE_LIKE_TYPE]: renderTimeRangeLikeValueEditor,\r\n    [types.VAR_NAME_LIKE_TYPE]: renderVarNameLikeValueEditor,\r\n    [types.VAR_NAMES_LIKE_TYPE]: renderVarNamesLikeValueEditor,\r\n    [types.DIM_NAME_LIKE_TYPE]: renderDimNameLikeValueEditor,\r\n    [types.DIM_NAMES_LIKE_TYPE]: renderDimNamesLikeValueEditor,\r\n    [types.DICT_LIKE_TYPE]: renderDictLikeValueEditor,\r\n    [types.FILE_LIKE_TYPE]: renderFileValueEditor,\r\n    [types.LITERAL_TYPE]: renderLiteralValueEditor,\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction findResource(props: IValueEditorProps<any>) {\r\n    const valueSetSource = props.input.valueSetSource;\r\n    const resources = props.resources;\r\n    const inputAssignments = props.inputAssignments;\r\n    let resource;\r\n    if (valueSetSource && resources && inputAssignments) {\r\n        const inputAssignment = inputAssignments[valueSetSource];\r\n        const resourceName = inputAssignment.resourceName;\r\n        if (inputAssignment && resourceName && !inputAssignment.isValueUsed) {\r\n            resource = resources.find(r => r.name === resourceName);\r\n        }\r\n    }\r\n    return resource;\r\n}\r\n\r\n\r\nfunction findDims(props: IValueEditorProps<any>) {\r\n    const valueSetSource = props.input.valueSetSource.split('.');\r\n    const resources = props.resources;\r\n    const inputAssignments = props.inputAssignments;\r\n\r\n    let resource;\r\n    let variable;\r\n    let dimNames;\r\n\r\n    if (valueSetSource[0] && resources && inputAssignments) {\r\n        const inputAssignment = inputAssignments[valueSetSource[0]];\r\n        const resourceName = inputAssignment.resourceName;\r\n        if (inputAssignment && resourceName && !inputAssignment.isValueUsed) {\r\n            resource = resources.find(r => r.name === resourceName);\r\n        }\r\n    }\r\n\r\n    if (resource) {\r\n        const variables = resource.variables;\r\n        if (valueSetSource[1] && variables && inputAssignments) {\r\n            const inputAssignment = inputAssignments[valueSetSource[1]];\r\n            if (inputAssignment && inputAssignment.constantValue) {\r\n                const varName = inputAssignment.constantValue.textValue;\r\n                variable = variables.find(v => v.name === varName);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    if (valueSetSource[0] && valueSetSource[1] && variable) {\r\n        dimNames = variable.dimNames;\r\n    } else if (valueSetSource[0] && !valueSetSource[1] && resource) {\r\n        dimNames = resource.coordVariables.map(c => c.name);\r\n    }\r\n\r\n    return dimNames;\r\n}\r\n","import * as React from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { AnchorButton, FormGroup, Icon, Tooltip } from '@blueprintjs/core';\r\nimport {\r\n    DialogState,\r\n    OperationInputState,\r\n    OperationKWArgs,\r\n    OperationState,\r\n    ResourceState,\r\n    State,\r\n    WorkflowStepState,\r\n    WorkspaceState\r\n} from '../state';\r\nimport { InputEditor } from './editor/InputEditor';\r\nimport { updatePropertyObject } from '../../common/objutil';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport { isFieldValue } from '../components/field/Field';\r\nimport { GeometryWKTGetter, hasValueEditorFactory, renderValueEditor } from './editor/ValueEditor';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { isDefined, isString, isUndefined, isUndefinedOrNull } from '../../common/types';\r\nimport { InputAssignment, InputAssignments } from './editor/value-editor-assign';\r\nimport {\r\n    EDIT_OPERATION_STEP_DIALOG_ID,\r\n    NEW_CTX_OPERATION_STEP_DIALOG_ID,\r\n    NEW_OPERATION_STEP_DIALOG_ID\r\n} from './operation-step-dialog-ids';\r\n\r\ntype InputErrors = { [inputName: string]: Error };\r\n\r\ninterface IOperationStepDialogOwnProps {\r\n    id: string;\r\n    operationStep?: WorkflowStepState | null;\r\n}\r\n\r\ninterface IOperationStepDialogProps extends DialogState, IOperationStepDialogOwnProps {\r\n    operation?: OperationState;\r\n    inputAssignments?: InputAssignments;\r\n    workspace: WorkspaceState;\r\n    resName: string;\r\n    geometryWKTGetter: GeometryWKTGetter;\r\n}\r\n\r\ninterface IOperationStepDialogState {\r\n    inputAssignments: InputAssignments;\r\n    inputErrors?: InputErrors;\r\n    isValidationDialogOpen?: boolean;\r\n}\r\n\r\nfunction mapStateToProps(state: State, ownProps: IOperationStepDialogOwnProps): IOperationStepDialogProps {\r\n    const id = ownProps.id;\r\n    const dialogState = selectors.dialogStateSelector(id)(state);\r\n    const isOpen = dialogState.isOpen;\r\n\r\n    if (!isOpen) {\r\n        return {id, isOpen: false} as any;\r\n    }\r\n\r\n    let operation, inputAssignments, resName = null;\r\n    if (id === NEW_OPERATION_STEP_DIALOG_ID) {\r\n        operation = selectors.selectedOperationSelector(state);\r\n        if (!operation) {\r\n            console.error('OperationStepDialog: operation is undefined: dialog id =', id);\r\n            return {id, isOpen: false} as any;\r\n        }\r\n        // Assign inputs from restored values\r\n        const inputAssignmentsMap = (dialogState as any).inputAssignments;\r\n        inputAssignments = inputAssignmentsMap && inputAssignmentsMap[operation.qualifiedName];\r\n    } else if (id === NEW_CTX_OPERATION_STEP_DIALOG_ID) {\r\n        operation = selectors.selectedCtxOperationSelector(state);\r\n        if (!operation) {\r\n            console.error('OperationStepDialog: operation is undefined: dialog id =', id);\r\n            return {id, isOpen: false} as any;\r\n        }\r\n        // Assign inputs from context settings\r\n        inputAssignments = (dialogState as any).inputAssignments;\r\n    } else if (id === EDIT_OPERATION_STEP_DIALOG_ID) {\r\n        const operationStep = ownProps.operationStep;\r\n        operation = (selectors.operationsSelector(state) || [])\r\n            .find(op => op.name === operationStep.op || op.qualifiedName === operationStep.op);\r\n        if (!operation) {\r\n            console.error('OperationStepDialog: operation is undefined: dialog id =', id);\r\n            return {id, isOpen: false} as any;\r\n        }\r\n        inputAssignments = getInputAssignmentsFromOperationStep(operation, operationStep);\r\n        resName = operationStep.id;\r\n    } else {\r\n        console.error('OperationStepDialog: unknown dialog id =', id);\r\n        return {id, isOpen: false} as any;\r\n    }\r\n\r\n    const workspace = selectors.workspaceSelector(state);\r\n    const geometryWKTGetter = selectors.selectedGeometryWKTGetterSelector(state);\r\n\r\n    return {id, isOpen, workspace, geometryWKTGetter, resName, operation, inputAssignments};\r\n}\r\n\r\nclass OperationStepDialog extends React.Component<IOperationStepDialogProps & DispatchProp<State>, IOperationStepDialogState> {\r\n\r\n    private static readonly DIALOG_STYLE: React.CSSProperties = {width: '42em'};\r\n    private static readonly NO_STATE = {inputAssignments: {}};\r\n    private static readonly PARAMETER_PANEL_STYLE = {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'auto auto 28px',\r\n        alignItems: 'center',\r\n        justifyItems: 'stretch',\r\n        rowGap: '1ex',\r\n        columnGap: '0.5em'\r\n    };\r\n\r\n    constructor(props: IOperationStepDialogProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.onConstantValueChange = this.onConstantValueChange.bind(this);\r\n        this.onResourceNameChange = this.onResourceNameChange.bind(this);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onValidate = this.onValidate.bind(this);\r\n        this.onDefaults = this.onDefaults.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.hideValidationDialog = this.hideValidationDialog.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.renderExtraActions = this.renderExtraActions.bind(this);\r\n        this.state = OperationStepDialog.mapPropsToState(props);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IOperationStepDialogProps) {\r\n        this.setState(OperationStepDialog.mapPropsToState(nextProps));\r\n    }\r\n\r\n    static mapPropsToState(props: IOperationStepDialogProps): IOperationStepDialogState {\r\n        if (!props.isOpen) {\r\n            return OperationStepDialog.NO_STATE;\r\n        }\r\n        const operation = props.operation;\r\n        const inputAssignments = getInitialInputAssignments(operation.inputs, props.inputAssignments, false);\r\n        return {inputAssignments};\r\n    }\r\n\r\n    private onConfirm() {\r\n        const isEditMode = this.props.id === EDIT_OPERATION_STEP_DIALOG_ID;\r\n        const isNewMode = !isEditMode;\r\n        const operation = this.props.operation;\r\n        let inputAssignmentsMap;\r\n        if (isNewMode) {\r\n            // Only store input assignments when creating new operation steps\r\n            inputAssignmentsMap = {[operation.qualifiedName]: this.state.inputAssignments};\r\n        }\r\n        this.props.dispatch(actions.hideOperationStepDialog(this.props.id, inputAssignmentsMap) as any);\r\n        this.props.dispatch(actions.setWorkspaceResource(operation.qualifiedName,\r\n                                                         this.getInputArguments(),\r\n                                                         this.props.resName,\r\n                                                         isEditMode,\r\n                                                         `Executing operation \"${operation.name}\"`) as any);\r\n    }\r\n\r\n    private canConfirm() {\r\n        return !this.getInputErrors();\r\n    }\r\n\r\n    private onCancel() {\r\n        this.props.dispatch(actions.hideOperationStepDialog(this.props.id) as any);\r\n    }\r\n\r\n    private onValidate() {\r\n        let inputErrors = this.getInputErrors();\r\n        this.setState({isValidationDialogOpen: true, inputErrors} as any);\r\n    }\r\n\r\n    private hideValidationDialog() {\r\n        this.setState({isValidationDialogOpen: false} as any);\r\n    }\r\n\r\n    private getInputArguments(): OperationKWArgs {\r\n        return getInputArguments(this.props.operation.inputs, this.state.inputAssignments);\r\n    }\r\n\r\n    private getInputErrors(): { [name: string]: Error } {\r\n        return getInputErrors(this.props.operation.inputs, this.state.inputAssignments);\r\n    }\r\n\r\n    private onDefaults() {\r\n        const inputAssignments = getInitialInputAssignments(this.props.operation.inputs,\r\n                                                            this.state.inputAssignments, true);\r\n        this.setState({inputAssignments} as any);\r\n    }\r\n\r\n    private setInputAssignment(input: OperationInputState, inputAssignment: InputAssignment) {\r\n        //console.log('OperationStepDialog: setInputAssignment: inputAssignment =', inputAssignment);\r\n        const inputAssignments = updatePropertyObject(this.state.inputAssignments, input.name, inputAssignment);\r\n        //console.log('OperationStepDialog: setInputAssignment: inputAssignments =', inputAssignments);\r\n        this.setState({inputAssignments} as any);\r\n    };\r\n\r\n    private onResourceNameChange(input: OperationInputState, resourceName: string, isValueUsed: boolean) {\r\n        if (resourceName === '' && input.nullable) {\r\n            resourceName = null;\r\n        }\r\n        this.setInputAssignment(input, {resourceName, isValueUsed} as InputAssignment);\r\n    }\r\n\r\n    private onConstantValueChange(input: OperationInputState, value: any) {\r\n        this.setInputAssignment(input, {constantValue: value, isValueUsed: true} as InputAssignment);\r\n    }\r\n\r\n    render() {\r\n        const isOpen = this.props.isOpen;\r\n        if (!isOpen) {\r\n            return null;\r\n        }\r\n\r\n        const operation = this.props.operation;\r\n        let confirmTitle, dialogTitle, tooltipText;\r\n        if (this.props.id === EDIT_OPERATION_STEP_DIALOG_ID) {\r\n            confirmTitle = 'Edit Step';\r\n            dialogTitle = `Edit Operation Step - ${operation.name}`;\r\n            tooltipText = 'Edit operation step inputs and recompute output.';\r\n        } else {\r\n            confirmTitle = 'Add Step';\r\n            dialogTitle = `Add Operation Step - ${operation.name}`;\r\n            tooltipText = 'Add a new operation step to the workspace’s workflow.';\r\n        }\r\n\r\n        return (\r\n            <ModalDialog\r\n                isOpen={true}\r\n                icon=\"function\"\r\n                title={dialogTitle}\r\n                confirmTooltip={tooltipText}\r\n                confirmTitle={confirmTitle}\r\n                confirmIconName=\"play\"\r\n                onConfirm={this.onConfirm}\r\n                onCancel={this.onCancel}\r\n                canConfirm={this.canConfirm}\r\n                renderBody={this.renderBody}\r\n                renderExtraActions={this.renderExtraActions}\r\n                style={OperationStepDialog.DIALOG_STYLE}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        const operation = this.props.operation;\r\n\r\n        const bodyHeaderText = (\r\n            <p key='header' style={{marginBottom: '1em'}}>\r\n                Adjustable parameter(s) for operation <code>{operation.name}</code>:\r\n            </p>\r\n        );\r\n\r\n        const bodyFooterText = (\r\n            <p key='footer' style={{marginTop: '1em'}}>\r\n                Pressing <Icon icon=\"play\"/> will add operation <code>{operation.name}</code> as a new\r\n                workflow step to the current workspace. The result of the step is a new <em>resource</em> which can\r\n                be used as input for other operations. You can remove the step or change its parameters later.\r\n            </p>\r\n        );\r\n\r\n        const parameterPanel = this.renderParameterPanel();\r\n\r\n        return (\r\n            <FormGroup>\r\n                {bodyHeaderText}\r\n                <div>\r\n                    {parameterPanel}\r\n                    <div className=\"bp3-form-helper-text\">{bodyFooterText}</div>\r\n                </div>\r\n                <ValidationDialog isOpen={this.state.isValidationDialogOpen}\r\n                                  inputErrors={this.state.inputErrors}\r\n                                  onConfirm={this.hideValidationDialog}\r\n                />\r\n            </FormGroup>\r\n        );\r\n    }\r\n\r\n    renderExtraActions() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        return [\r\n            <Tooltip key='validate' content=\"Validate current input values\">\r\n                <AnchorButton onClick={this.onValidate}>Validate</AnchorButton>\r\n            </Tooltip>,\r\n            <Tooltip key='defaults' content=\"Set all inputs back to default values\">\r\n                <AnchorButton onClick={this.onDefaults}>Defaults</AnchorButton>\r\n            </Tooltip>,\r\n        ];\r\n    }\r\n\r\n    renderParameterPanel(): JSX.Element {\r\n        const operation = this.props.operation;\r\n        if (!operation.inputs || !operation.inputs.length) {\r\n            return null;\r\n        }\r\n        const inputEditors = renderInputEditors(\r\n            operation.inputs,\r\n            this.state.inputAssignments,\r\n            this.props.workspace.resources,\r\n            this.props.geometryWKTGetter,\r\n            this.onConstantValueChange,\r\n            this.onResourceNameChange\r\n        );\r\n        return (<div key='parameterPanel'\r\n                     style={OperationStepDialog.PARAMETER_PANEL_STYLE}>\r\n                    {inputEditors}\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OperationStepDialog);\r\n\r\nfunction getInputAssignmentsFromOperationStep(operation: OperationState, operationStep: WorkflowStepState): InputAssignments {\r\n    const inputAssignments = {};\r\n    for (let input of operation.inputs) {\r\n        const inputPort = operationStep.inputs[input.name];\r\n        if (inputPort) {\r\n            const resourceName = isString(inputPort) ? inputPort : inputPort.source;\r\n            if (resourceName) {\r\n                inputAssignments[input.name] = {resourceName, isValueUsed: false};\r\n            } else if (!isUndefined(inputPort.value)) {\r\n                let constantValue = inputPort.value;\r\n                inputAssignments[input.name] = {constantValue, isValueUsed: true};\r\n            }\r\n        }\r\n    }\r\n    return inputAssignments;\r\n}\r\n\r\nfunction getInitialInputAssignments(inputs: OperationInputState[],\r\n                                    lastInputAssignments?: InputAssignments,\r\n                                    forceDefaults?: boolean): InputAssignments {\r\n    const inputAssignments = {};\r\n    inputs.forEach((input: OperationInputState) => {\r\n        const isValueUsed = hasValueEditorFactory(input.dataType);\r\n        const hasDefaultValue = isDefined(input.defaultValue);\r\n        const constantValue = hasDefaultValue ? input.defaultValue : null;\r\n        const resourceName = null;\r\n        const defaultInputAssignment = {constantValue, isValueUsed, resourceName};\r\n        const lastInputAssignment = lastInputAssignments && lastInputAssignments[input.name];\r\n        let inputAssignment;\r\n        if (!lastInputAssignment || forceDefaults) {\r\n            inputAssignment = defaultInputAssignment;\r\n        } else {\r\n            inputAssignment = lastInputAssignment || defaultInputAssignment;\r\n        }\r\n        inputAssignments[input.name] = inputAssignment;\r\n    });\r\n    return inputAssignments;\r\n}\r\n\r\nfunction renderInputEditors(inputs: OperationInputState[],\r\n                            inputAssignments: InputAssignments,\r\n                            resources: ResourceState[],\r\n                            geometryWKTGetter: GeometryWKTGetter,\r\n                            onConstantValueChange,\r\n                            onResourceNameChange): JSX.Element[] {\r\n    return inputs\r\n        .filter(input => !input.noUI)\r\n        .map((input: OperationInputState) => {\r\n            const inputAssignment = inputAssignments[input.name];\r\n            const constantValue = inputAssignment.constantValue;\r\n            const valueEditor = renderValueEditor({\r\n                                                      input,\r\n                                                      inputAssignments,\r\n                                                      resources,\r\n                                                      geometryWKTGetter,\r\n                                                      value: constantValue,\r\n                                                      onChange: onConstantValueChange\r\n                                                  });\r\n            return (\r\n                <InputEditor key={input.name}\r\n                             resources={resources}\r\n                             name={input.name}\r\n                             dataType={input.dataType}\r\n                             units={input.units}\r\n                             tooltipText={input.description}\r\n                             onChange={(resourceName, isValueUsed) => onResourceNameChange(input, resourceName, isValueUsed)}\r\n                             isValueEditorShown={inputAssignment.isValueUsed}\r\n                             resourceName={inputAssignment.resourceName}\r\n                             valueEditor={valueEditor}/>\r\n            );\r\n        });\r\n}\r\n\r\nfunction getInputArguments(inputs: OperationInputState[],\r\n                           inputAssignments: InputAssignments): OperationKWArgs {\r\n    const inputArguments = {};\r\n    inputs.forEach((input) => {\r\n        const inputAssignment = inputAssignments[input.name];\r\n        if (inputAssignment) {\r\n            let inputArgument;\r\n            if (inputAssignment.isValueUsed) {\r\n                const constantValue = inputAssignment.constantValue;\r\n                const value = isFieldValue(constantValue) ? constantValue.value : constantValue;\r\n                inputArgument = {value};\r\n            } else {\r\n                inputArgument = {source: inputAssignment.resourceName};\r\n            }\r\n            inputArguments[input.name] = inputArgument;\r\n        }\r\n    });\r\n    return inputArguments;\r\n}\r\n\r\nfunction getInputErrors(inputs: OperationInputState[],\r\n                        inputAssignments: InputAssignments): InputErrors {\r\n    let inputErrors = {};\r\n    let hasInputErrors = false;\r\n    inputs.forEach((input) => {\r\n        const inputAssignment = inputAssignments[input.name];\r\n        if (inputAssignment) {\r\n            if (inputAssignment.isValueUsed) {\r\n                const constantValue = inputAssignment.constantValue;\r\n                const error = isFieldValue(constantValue) && constantValue.error;\r\n                if (error) {\r\n                    inputErrors[input.name] = error;\r\n                    hasInputErrors = true;\r\n                } else if (isUndefinedOrNull(constantValue) && !input.nullable) {\r\n                    inputErrors[input.name] = new Error('Value must be given.');\r\n                    hasInputErrors = true;\r\n                }\r\n            } else {\r\n                const resourceName = inputAssignment.resourceName;\r\n                if (isUndefinedOrNull(resourceName) && !input.nullable) {\r\n                    inputErrors[input.name] = new Error('Resource must be specified.');\r\n                    hasInputErrors = true;\r\n                }\r\n            }\r\n        } else {\r\n            inputErrors[input.name] = new Error('Value must be specified.');\r\n            hasInputErrors = true;\r\n        }\r\n\r\n    });\r\n    //console.log('getInputErrors: ', inputErrors);\r\n    return hasInputErrors ? inputErrors : null;\r\n}\r\n\r\ninterface IValidationDialogProps {\r\n    isOpen: boolean;\r\n    inputErrors: InputErrors;\r\n    onConfirm: () => void;\r\n}\r\n\r\nclass ValidationDialog extends React.Component<IValidationDialogProps, null> {\r\n\r\n    constructor(props: IValidationDialogProps) {\r\n        super(props);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.onConfirm();\r\n    }\r\n\r\n    private countResourceProblems(): number {\r\n        const inputErrors = this.props.inputErrors;\r\n        let count = 0;\r\n        Object.getOwnPropertyNames(inputErrors).forEach(inputName => {\r\n            const error = inputErrors[inputName];\r\n            if (error.message && (error.message.includes('resource') || error.message.includes('Resource'))) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalDialog isOpen={this.props.isOpen}\r\n                         title=\"Input Validation\"\r\n                         onConfirm={this.onConfirm}\r\n                         noCancelButton={true}\r\n                         onCancel={this.onConfirm}\r\n                         renderBody={this.renderBody}/>\r\n        );\r\n    }\r\n\r\n    private renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        const inputErrors = this.props.inputErrors;\r\n        if (!inputErrors) {\r\n            return (<p>No problems encountered.</p>);\r\n        }\r\n        const resourceProblems = this.countResourceProblems();\r\n        const body = renderInputErrors(inputErrors, resourceProblems);\r\n        if (!body) {\r\n            return (<p>No problems encountered.</p>);\r\n        }\r\n        return body;\r\n    }\r\n}\r\n\r\nexport function renderInputErrors(inputErrors: InputErrors, resourceProblems?: number) {\r\n    const problems = [];\r\n    Object.getOwnPropertyNames(inputErrors).forEach(inputName => {\r\n        let error = inputErrors[inputName];\r\n        problems.push(<li key={inputName}>{inputName}: {error.message}</li>);\r\n    });\r\n\r\n    let introText;\r\n    if (problems.length === 0) {\r\n        return null;\r\n    } else if (problems.length === 1) {\r\n        introText = 'The following problem has been encountered:';\r\n    } else {\r\n        introText = `The following ${problems.length} problems have been encountered:`;\r\n    }\r\n\r\n    const footerText = resourceProblems && resourceProblems > 0 ? (<p>This operation has\r\n        parameter(s) which require specifying a <em>resource</em>. When there are no compatible resources yet,\r\n        you may consider opening a data source or use one of the <code>read_...</code> operations first.\r\n    </p>) : null;\r\n\r\n    return (\r\n        <FormGroup>\r\n            {introText}\r\n            <div className=\"bp3-form-content\">\r\n                {problems}\r\n                <div className=\"bp3-form-helper-text\">{footerText}</div>\r\n            </div>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { DataSourceState, DataStoreState, DialogState, State } from '../state';\r\nimport { isLocalDataStore, isRemoteDataStore } from '../state-util';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { DataAccessComponent, IDataAccessComponentOptions } from './DataAccessComponent';\r\nimport { renderInputErrors } from './OperationStepDialog';\r\n\r\ntype TimeRangeValue = [string, string];\r\n\r\n\r\ninterface IOpenDatasetDialogProps {\r\n    isOpen: boolean;\r\n    dataStore: DataStoreState | null;\r\n    dataSource: DataSourceState | null;\r\n    temporalCoverage: TimeRangeValue | null;\r\n    canConstrainTime: boolean;\r\n    canConstrainRegion: boolean;\r\n    canConstrainVariables: boolean;\r\n    canCache: boolean;\r\n    options: IDataAccessComponentOptions;\r\n}\r\n\r\ninterface IOpenDatasetDialogState extends DialogState {\r\n    options: IDataAccessComponentOptions;\r\n}\r\n\r\nfunction mapStateToProps(state: State): IOpenDatasetDialogProps {\r\n    const dialogState = selectors.dialogStateSelector(OpenDatasetDialog.DIALOG_ID)(state);\r\n    return {\r\n        isOpen: dialogState.isOpen,\r\n        dataStore: selectors.selectedDataStoreSelector(state),\r\n        dataSource: selectors.selectedDataSourceSelector(state),\r\n        temporalCoverage: selectors.selectedDataSourceTemporalCoverageSelector(state),\r\n        canConstrainTime: selectors.canConstrainDataSourceTimeSelector(state),\r\n        canConstrainRegion: selectors.canConstrainDataSourceRegionSelector(state),\r\n        canConstrainVariables: selectors.canConstrainDataSourceVariablesSelector(state),\r\n        canCache: selectors.canCacheDataSourceSelector(state),\r\n        options: (dialogState as any).options as IDataAccessComponentOptions,\r\n    };\r\n}\r\n\r\nclass OpenDatasetDialog extends React.Component<IOpenDatasetDialogProps & DispatchProp<State>, IOpenDatasetDialogState> {\r\n    static readonly DIALOG_ID = 'openDatasetDialog';\r\n\r\n    constructor(props: IOpenDatasetDialogProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.onOptionsChange = this.onOptionsChange.bind(this);\r\n        this.state = OpenDatasetDialog.mapPropsToState(props);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IOpenDatasetDialogProps): void {\r\n        this.setState(OpenDatasetDialog.mapPropsToState(nextProps));\r\n    }\r\n\r\n    static mapPropsToState(nextProps: IOpenDatasetDialogProps): IOpenDatasetDialogState {\r\n        let options: IDataAccessComponentOptions = nextProps.options\r\n                                                   || DataAccessComponent.defaultOptions(isLocalDataStore(nextProps.dataStore),\r\n                                                                                         nextProps.temporalCoverage);\r\n        const isCacheDataSourceSelected = nextProps.canCache && options.isCacheDataSourceSelected;\r\n        options = DataAccessComponent.ensureDateRangeIsValidated(options, nextProps.temporalCoverage);\r\n        options = {...options, isCacheDataSourceSelected}\r\n        return {options};\r\n    }\r\n\r\n    private onCancel() {\r\n        this.props.dispatch(actions.hideDialog(OpenDatasetDialog.DIALOG_ID));\r\n    }\r\n\r\n    private canConfirm(): boolean {\r\n        return DataAccessComponent.validateOptions(this.isLocalDataStore, this.state.options);\r\n    }\r\n\r\n    private onConfirm() {\r\n        const isCacheDataSourceSelected = this.props.canCache && this.state.options.isCacheDataSourceSelected;\r\n        const options: IDataAccessComponentOptions = {...this.state.options, isCacheDataSourceSelected};\r\n        // Clear cachedDataSourceId, so on next props, we can create a new default from selected data source\r\n        // clear cachedDataSourceTitle, hasVariablesConstraint, variableNames, too\r\n        // keep time and geo constraint\r\n        const dsDefault = this.isRemoteDataStore ? '' : undefined;\r\n        const dialogState = {\r\n            options:\r\n                {\r\n                    ...options,\r\n                    makeLocalDataSourceId: dsDefault,\r\n                    makeLocalDataSourceTitle: dsDefault,\r\n                    hasVariablesConstraint: false,\r\n                    variableNames: null,\r\n                }\r\n        };\r\n        this.props.dispatch(actions.hideDialog(OpenDatasetDialog.DIALOG_ID, dialogState));\r\n        this.props.dispatch(actions.openDataset(\r\n            this.props.dataStore.id,\r\n            this.props.dataSource.id,\r\n            DataAccessComponent.optionsToOperationArguments(this.state.options),\r\n            this.isRemoteDataStore && isCacheDataSourceSelected\r\n        ) as any);\r\n        // Save modified state\r\n        this.setState(dialogState);\r\n    }\r\n\r\n    private onOptionsChange(options: IDataAccessComponentOptions) {\r\n        this.setState({options});\r\n    }\r\n\r\n    private get isRemoteDataStore() {\r\n        return isRemoteDataStore(this.props.dataStore);\r\n    }\r\n\r\n    private get isLocalDataStore() {\r\n        return isLocalDataStore(this.props.dataStore);\r\n    }\r\n\r\n    render() {\r\n        let isOpen = this.props.isOpen;\r\n        if (!isOpen) {\r\n            return null;\r\n        }\r\n\r\n        const cacheSelected = this.isRemoteDataStore && this.state.options.isCacheDataSourceSelected;\r\n        const inputErrors = DataAccessComponent.optionsToErrors(this.state.options);\r\n        const confirmTooltip = renderInputErrors(inputErrors);\r\n\r\n        return (\r\n            <ModalDialog\r\n                isOpen={isOpen}\r\n                title={'Open Dataset'}\r\n                icon=\"database\"\r\n                confirmTitle={cacheSelected ? 'Cache and Open' : 'Open'}\r\n                confirmIconName={\"folder-shared-open\"}\r\n                confirmTooltip={confirmTooltip}\r\n                onCancel={this.onCancel}\r\n                onConfirm={this.onConfirm}\r\n                canConfirm={this.canConfirm}\r\n                renderBody={this.renderBody}\r\n            />);\r\n    }\r\n\r\n    private renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n        return (\r\n            <DataAccessComponent\r\n                options={this.state.options}\r\n                onChange={this.onOptionsChange}\r\n                dataSource={this.props.dataSource}\r\n                isLocalDataSource={this.isLocalDataStore}\r\n                temporalCoverage={this.props.temporalCoverage}\r\n                canConstrainTime={this.props.canConstrainTime}\r\n                canConstrainRegion={this.props.canConstrainRegion}\r\n                canConstrainVariables={this.props.canConstrainVariables}\r\n                canCache={this.props.canCache}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenDatasetDialog);\r\n\r\n","import * as React from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { Checkbox } from '@blueprintjs/core';\r\n\r\nimport * as actions from '../actions';\r\nimport LongIdLabel from '../components/LongIdLabel';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport * as selectors from '../selectors';\r\nimport { DataSourceState, DialogState, State } from '../state';\r\n\r\n\r\ninterface IRemoveDatasetDialogProps {\r\n    isOpen: boolean;\r\n    dataSource: DataSourceState | null;\r\n}\r\n\r\ninterface IRemoveDatasetDialogState extends DialogState {\r\n    removeFiles: boolean;\r\n}\r\n\r\nfunction mapStateToProps(state: State): IRemoveDatasetDialogProps {\r\n    const dialogState = selectors.dialogStateSelector(RemoveDatasetDialog.DIALOG_ID)(state);\r\n    return {\r\n        isOpen: dialogState.isOpen,\r\n        dataSource: selectors.selectedDataSourceSelector(state),\r\n    };\r\n}\r\n\r\nclass RemoveDatasetDialog extends React.Component<IRemoveDatasetDialogProps & DispatchProp<State>, IRemoveDatasetDialogState> {\r\n    static readonly DIALOG_ID = 'removeDatasetDialog';\r\n\r\n    constructor(props: IRemoveDatasetDialogProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.state = {removeFiles: false};\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.onRemoveFilesChange = this.onRemoveFilesChange.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IRemoveDatasetDialogProps) {\r\n        this.setState({removeFiles: false});\r\n    }\r\n\r\n    private onCancel() {\r\n        this.props.dispatch(actions.hideDialog(RemoveDatasetDialog.DIALOG_ID));\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.dispatch(actions.hideDialog(RemoveDatasetDialog.DIALOG_ID, this.state));\r\n        this.props.dispatch(actions.removeLocalDataset(this.props.dataSource.id, this.state.removeFiles) as any);\r\n    }\r\n\r\n    private onRemoveFilesChange(ev: any) {\r\n        this.setState({removeFiles: ev.target.checked} as IRemoveDatasetDialogState);\r\n    }\r\n\r\n    render() {\r\n        let isOpen = this.props.isOpen;\r\n        if (!isOpen || !this.props.dataSource) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ModalDialog\r\n                isOpen={isOpen}\r\n                title=\"Remove Data Source\"\r\n                icon=\"trash\"\r\n                confirmTitle=\"Remove\"\r\n                confirmIconName=\"delete\"\r\n                confirmTooltip=\"Remove the file data source.\"\r\n                onCancel={this.onCancel}\r\n                onConfirm={this.onConfirm}\r\n                renderBody={this.renderBody}\r\n            />);\r\n    }\r\n\r\n    private renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <LongIdLabel\r\n                    label='You are about to remove the definition for the file data source'\r\n                    longId={this.props.dataSource.id}\r\n                />\r\n\r\n                <Checkbox\r\n                    style={{marginTop: '1em'}} checked={this.state.removeFiles}\r\n                    label=\"Remove data files from disk too\"\r\n                    onChange={this.onRemoveFilesChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RemoveDatasetDialog);\r\n","import * as React from 'react';\nimport { CSSProperties } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    ButtonGroup,\n    Callout,\n    Card,\n    Checkbox,\n    Classes,\n    Collapse,\n    HTMLSelect,\n    IconName,\n    InputGroup,\n    Intent,\n    Label,\n    Popover,\n    PopoverInteractionKind,\n    Position,\n    Tag,\n    Tooltip\n} from '@blueprintjs/core';\n\nimport * as actions from '../actions';\nimport { ContentWithDetailsPanel } from '../components/ContentWithDetailsPanel';\nimport DataSourceDetails from '../components/DataSourceDetails';\nimport DataSourcesList from '../components/DataSourcesList';\nimport DataSourceOpenHint from '../components/DataSourceOpenHint';\nimport Markdown from '../components/Markdown';\nimport { ToolButton } from '../components/ToolButton';\nimport { DATA_SOURCES_LOADING, NO_DATA_SOURCES_FOUND, NO_DATA_STORES_FOUND, NO_LOCAL_DATA_SOURCES } from '../messages';\n\nimport * as selectors from '../selectors';\nimport { DataSourceState, DataStoreNotice, DataStoreState, State } from '../state';\nimport { canOpenDataSource, isLocalDataStore } from '../state-util';\nimport AddDatasetDialog from './AddDatasetDialog';\nimport OpenDatasetDialog from './OpenDatasetDialog';\nimport RemoveDatasetDialog from './RemoveDatasetDialog';\n\n\nconst INTENTS = {\n    'default': Intent.NONE,\n    'primary': Intent.PRIMARY,\n    'success': Intent.SUCCESS,\n    'warning': Intent.WARNING,\n    'danger': Intent.DANGER,\n};\n\ninterface IDataSourcesPanelProps {\n    hasWorkspace: boolean;\n    dataStores: Array<DataStoreState>;\n    dataSourceFilterExpr: string;\n    selectedDataStore: DataStoreState | null;\n    selectedDataSource: DataSourceState | null;\n    selectedDataSources: DataSourceState[] | null;\n    filteredDataSources: DataSourceState[] | null;\n    dataSourceListHeight: number;\n    showAllDataSources: boolean;\n    showDataSourceIDs: boolean;\n    showDataSourceDetails: boolean;\n    showDataStoreDescription: boolean;\n    showDataStoreNotices: boolean;\n    offlineMode: boolean;\n    isSandboxedMode: boolean;\n}\n\nfunction mapStateToProps(state: State): IDataSourcesPanelProps {\n    return {\n        hasWorkspace: !!selectors.workspaceSelector(state),\n        dataStores: selectors.dataStoresSelector(state),\n        dataSourceFilterExpr: selectors.dataSourceFilterExprSelector(state),\n        selectedDataStore: selectors.selectedDataStoreSelector(state),\n        selectedDataSource: selectors.selectedDataSourceSelector(state),\n        selectedDataSources: selectors.selectedDataSourcesSelector(state),\n        filteredDataSources: selectors.filteredDataSourcesSelector(state),\n        dataSourceListHeight: selectors.dataSourceListHeightSelector(state),\n        showDataSourceDetails: selectors.showDataSourceDetailsSelector(state),\n        showAllDataSources: selectors.showAllDataSourcesSelector(state),\n        showDataSourceIDs: selectors.showDataSourceIDsSelector(state),\n        showDataStoreDescription: selectors.showDataStoreDescriptionSelector(state),\n        showDataStoreNotices: selectors.showDataStoreNoticesSelector(state),\n        offlineMode: selectors.offlineModeSelector(state),\n        isSandboxedMode: !selectors.isLocalFSAccessAllowedSelector(state),\n    };\n}\n\ninterface IDataSourcesPanelDispatch {\n    setSelectedDataStoreId(selectedDataStoreId: string): void;\n\n    setSelectedDataSourceId(selectedDataSourceId: string): void;\n\n    setDataSourceFilterExpr(dataSourceFilterExpr: string): void;\n\n    setControlState(propertyName: string, value: any): void;\n\n    setSessionState(propertyName: string, value: any): void;\n\n    updateSessionState(sessionState: any): void;\n\n    refreshLocalDataStore(): void;\n\n    loadDataSourceMetaInfo(dataStoreId: string, dataSourceId: string): void;\n\n    showDialog(dialogId: string): void;\n\n    hideDialog(dialogId: string): void;\n}\n\nconst mapDispatchToProps = {\n    setSelectedDataStoreId: actions.setSelectedDataStoreId,\n    setSelectedDataSourceId: actions.setSelectedDataSourceId,\n    setDataSourceFilterExpr: actions.setDataSourceFilterExpr,\n    setSessionState: actions.setSessionProperty,\n    setControlState: actions.setControlProperty,\n    updateSessionState: actions.updateSessionState,\n    refreshLocalDataStore: actions.refreshLocalDataStore,\n    showDialog: actions.showDialog,\n    hideDialog: actions.hideDialog,\n};\n\n/**\n * The DataSourcesPanel is used browse and open data data sources originating from a selected data store.\n *\n * @author Norman Fomferra\n */\nclass DataSourcesPanel extends React.Component<IDataSourcesPanelProps & IDataSourcesPanelDispatch, null> {\n\n    private static readonly FLEX_ROW_STYLE: CSSProperties = {display: 'flex', alignItems: 'center', marginBottom: 1};\n    private static readonly SPACER_STYLE: CSSProperties = {flex: 1};\n    private static readonly LABEL_STYLE: CSSProperties = {margin: '0 0.5em 0 0', display: 'flex', flexGrow: 1};\n    private static readonly LABEL_TEXT_STYLE: CSSProperties =\n        {minWidth: '5em', overflow: 'hidden', whiteSpace: 'nowrap'};\n    private static readonly SELECT_STYLE: CSSProperties = {flexGrow: 1};\n\n    constructor(props: IDataSourcesPanelProps & IDataSourcesPanelDispatch) {\n        super(props);\n        this.handleAddDatasetDialog = this.handleAddDatasetDialog.bind(this);\n        this.handleRemoveDatasetDialog = this.handleRemoveDatasetDialog.bind(this);\n        this.handleShowOpenDatasetDialog = this.handleShowOpenDatasetDialog.bind(this);\n        this.handleRefreshLocalDataStore = this.handleRefreshLocalDataStore.bind(this);\n        this.handleListHeightChanged = this.handleListHeightChanged.bind(this);\n        this.handleShowDetailsChanged = this.handleShowDetailsChanged.bind(this);\n        this.handleDataStoreSelected = this.handleDataStoreSelected.bind(this);\n        this.handleShowDataStoreDescriptionChanged = this.handleShowDataStoreDescriptionChanged.bind(this);\n        this.handleShowDataStoreNoticesChanged = this.handleShowDataStoreNoticesChanged.bind(this);\n        this.handleShowAllDataSourcesChanged = this.handleShowAllDataSourcesChanged.bind(this);\n        this.handleShowDataSourceIDsChanged = this.handleShowDataSourceIDsChanged.bind(this);\n    }\n\n    render() {\n        const hasDataStores = this.props.dataStores && this.props.dataStores.length;\n        if (!hasDataStores) {\n            return this.renderNoDataStoreMessage();\n        }\n        const hasDataSources = this.props.selectedDataSources && this.props.selectedDataSources.length;\n        const selectedDataSource = this.props.selectedDataSource;\n        const isLocalStore = isLocalDataStore(this.props.selectedDataStore);\n        // const canAdd = isLocalStore;\n        // const canRemove = selectedDataSource && isLocalStore;\n        const isNotVerified = selectedDataSource ? !canOpenDataSource(selectedDataSource) : false;\n        const canOpen = selectedDataSource && this.props.hasWorkspace && !isNotVerified;\n        const actionComponent = (\n            <ButtonGroup>\n                {/*{isLocalStore && <ToolButton*/}\n                {/*    tooltipContent=\"Add data source\"*/}\n                {/*    onClick={this.handleAddDatasetDialog}*/}\n                {/*    disabled={!canAdd}*/}\n                {/*    icon=\"add\"*/}\n                {/*    tooltipPosition={'top'}*/}\n                {/*/>}*/}\n                {/*{isLocalStore && <ToolButton*/}\n                {/*    tooltipContent=\"Remove data source\"*/}\n                {/*    onClick={this.handleRemoveDatasetDialog}*/}\n                {/*    disabled={!canRemove}*/}\n                {/*    icon=\"trash\"*/}\n                {/*    tooltipPosition={'top'}*/}\n                {/*/>}*/}\n                {isLocalStore && <ToolButton\n                    tooltipContent=\"Refresh local data store\"\n                    onClick={this.handleRefreshLocalDataStore}\n                    icon=\"refresh\"\n                    tooltipPosition={'top'}\n                />}\n                {isNotVerified && (\n                    <Popover\n                        popoverClassName={Classes.POPOVER_CONTENT_SIZING}\n                        enforceFocus={false}\n                        interactionKind={PopoverInteractionKind.HOVER}\n                        position={Position.TOP}\n                    >\n                        <ToolButton icon={\"warning-sign\"} intent={Intent.WARNING}/>\n                        <DataSourceOpenHint\n                            isSandboxedMode={this.props.isSandboxedMode}\n                            dataSource={selectedDataSource!}\n                        />\n                    </Popover>\n                )}\n                <ToolButton\n                    tooltipContent=\"Open data source\"\n                    intent={Intent.PRIMARY}\n                    onClick={this.handleShowOpenDatasetDialog}\n                    disabled={!canOpen}\n                    icon={\"folder-shared-open\"}\n                    tooltipPosition={'top'}\n                />\n                <AddDatasetDialog/>\n                <RemoveDatasetDialog/>\n                <OpenDatasetDialog/>\n            </ButtonGroup>\n        );\n        return (\n            <div>\n                {this.renderDataStoreSelector()}\n                <div style={DataSourcesPanel.FLEX_ROW_STYLE}>\n                    <span style={DataSourcesPanel.SPACER_STYLE}/>\n                    <Tooltip content={\n                        <div>\n                            List also datasets that cannot be opened directly.<br/>\n                            Usually they can be downloaded manually, then<br/>\n                            opened by one of the <code>read_xxx()</code> operations.\n                        </div>}>\n                        <Checkbox\n                            label=\"All data sources\"\n                            checked={this.props.showAllDataSources}\n                            onChange={this.handleShowAllDataSourcesChanged}\n                            style={{marginBottom: 2, marginTop: 6, marginRight: 6}}\n                        />\n                    </Tooltip>\n                    <Checkbox\n                        label=\"Show identifiers\"\n                        checked={this.props.showDataSourceIDs}\n                        onChange={this.handleShowDataSourceIDsChanged}\n                        style={{marginBottom: 2, marginTop: 6}}\n                    />\n                </div>\n                {this.renderDataSourceFilterExprInput()}\n                <ContentWithDetailsPanel\n                    showDetails={this.props.showDataSourceDetails}\n                    onShowDetailsChange={this.handleShowDetailsChanged}\n                    isSplitPanel={true}\n                    contentHeight={this.props.dataSourceListHeight}\n                    onContentHeightChange={this.handleListHeightChanged}\n                    actionComponent={actionComponent}\n                >\n                    {hasDataSources\n                     ? (<DataSourcesList\n                            dataSources={this.props.filteredDataSources}\n                            selectedDataSourceId={this.props.selectedDataSource\n                                                  ? this.props.selectedDataSource.id\n                                                  : null}\n                            setSelectedDataSourceId={this.props.setSelectedDataSourceId}\n                            showDataSourceIDs={this.props.showDataSourceIDs}\n                            doubleClickAction={canOpen ? this.handleShowOpenDatasetDialog : undefined}\n                        />)\n                     : this.renderNoDataSourcesMessage()\n                    }\n                    <DataSourceDetails dataSource={this.props.selectedDataSource}/>\n                </ContentWithDetailsPanel>\n            </div>\n        );\n    }\n\n    private handleAddDatasetDialog() {\n        this.props.showDialog('addDatasetDialog');\n    }\n\n    private handleRemoveDatasetDialog() {\n        this.props.showDialog('removeDatasetDialog');\n    }\n\n    private handleRefreshLocalDataStore() {\n        this.props.refreshLocalDataStore();\n    }\n\n    private handleShowOpenDatasetDialog() {\n        this.props.showDialog('openDatasetDialog');\n    }\n\n    private handleDataStoreSelected(event) {\n        const dataStoreId = event.target.value;\n        this.props.setSelectedDataStoreId(dataStoreId);\n    }\n\n    private handleListHeightChanged(value: number) {\n        this.props.setSessionState('dataSourceListHeight', value);\n    }\n\n    private handleShowDetailsChanged(value: boolean) {\n        this.props.setSessionState('showDataSourceDetails', value);\n    }\n\n    private handleShowDataStoreDescriptionChanged() {\n        this.props.updateSessionState({showDataStoreDescription: !this.props.showDataStoreDescription});\n    }\n\n    private handleShowDataStoreNoticesChanged() {\n        this.props.updateSessionState({showDataStoreNotices: !this.props.showDataStoreNotices});\n    }\n\n    private handleShowAllDataSourcesChanged(ev: any) {\n        this.props.updateSessionState({showAllDataSources: ev.target.checked});\n    }\n\n    private handleShowDataSourceIDsChanged(ev: any) {\n        this.props.updateSessionState({showDataSourceIDs: ev.target.checked});\n    }\n\n    private renderDataSourceFilterExprInput() {\n        const resultsTag = (\n            <Tag className={Classes.MINIMAL} onRemove={() => this.props.setDataSourceFilterExpr('')}>\n                {this.props.filteredDataSources && this.props.filteredDataSources.length}\n            </Tag>\n        );\n\n        return (\n            <div style={{paddingBottom: 2}}>\n                <InputGroup\n                    disabled={false}\n                    leftIcon=\"filter\"\n                    onChange={(event) => this.props.setDataSourceFilterExpr(event.target.value)}\n                    placeholder=\"Find data source\"\n                    rightElement={resultsTag}\n                    value={this.props.dataSourceFilterExpr}\n                />\n            </div>\n        );\n    }\n\n    private renderDataStoreSelector() {\n        if (!this.props.dataStores || !this.props.dataStores.length) {\n            return null;\n        }\n\n        const dataStoreOptions = [];\n        for (let dataStore of this.props.dataStores) {\n            dataStoreOptions.push(\n                <option key={dataStore.id} value={dataStore.id}>{dataStore.title || dataStore.id}</option>\n            );\n        }\n\n        const {selectedDataStore, showDataStoreDescription, /*showDataStoreNotices*/} = this.props;\n\n        const hasDataStoreDescription = selectedDataStore && selectedDataStore.description;\n        const hasDataStoreNotices = selectedDataStore && selectedDataStore.notices && selectedDataStore.notices.length;\n\n        let dataStoreDescriptionElement;\n        if (hasDataStoreDescription) {\n            dataStoreDescriptionElement = (\n                <Collapse isOpen={showDataStoreDescription}>\n                    <Card>\n                        <Markdown source={selectedDataStore.description}/>\n                    </Card>\n                </Collapse>\n            );\n        }\n\n        // let dataStoreNoticesElement;\n        if (hasDataStoreNotices) {\n            const callouts = [];\n            selectedDataStore.notices.forEach((notice: DataStoreNotice) => {\n                callouts.push(\n                    <div key={notice.id} style={{margin: '0 4px 4px 4px'}}>\n                        <Callout\n                            title={notice.title}\n                            icon={notice.icon as IconName}\n                            intent={notice.intent in INTENTS ? INTENTS[notice.intent] : Intent.NONE}\n                        >\n                            <Markdown source={notice.content}/>\n                        </Callout>\n                    </div>\n                );\n            });\n            // dataStoreNoticesElement = (<Collapse isOpen={showDataStoreNotices}>{callouts}</Collapse>);\n        }\n\n        // TODO (forman): BP3: use new Select component\n\n        //  a label has by default a 15px margin at the bottom\n        return (\n            <React.Fragment>\n                <div style={DataSourcesPanel.FLEX_ROW_STYLE}>\n                    <Label className=\"bp3-inline\"\n                           style={DataSourcesPanel.LABEL_STYLE}>\n                        <span style={DataSourcesPanel.LABEL_TEXT_STYLE}>Data store:</span>\n                        <HTMLSelect\n                            fill={true}\n                            style={DataSourcesPanel.SELECT_STYLE}\n                            value={selectedDataStore ? selectedDataStore.id : ''}\n                            onChange={this.handleDataStoreSelected}\n                        >\n                            {dataStoreOptions}\n                        </HTMLSelect>\n                    </Label>\n                    <ButtonGroup>\n                        <ToolButton\n                            tooltipContent=\"Show/hide data store description\"\n                            onClick={this.handleShowDataStoreDescriptionChanged}\n                            disabled={!hasDataStoreDescription}\n                            active={showDataStoreDescription}\n                            icon=\"help\"\n                            tooltipPosition={'top'}\n                        />\n                        {/*This was an ESA requirement long time ago. It may no longer apply.*/}\n                        {/*<ToolButton*/}\n                        {/*    tooltipContent=\"Show/hide data store notices\"*/}\n                        {/*    onClick={this.handleShowDataStoreNoticesChanged}*/}\n                        {/*    disabled={!hasDataStoreNotices}*/}\n                        {/*    active={showDataStoreNotices}*/}\n                        {/*    icon=\"notifications\"*/}\n                        {/*    tooltipPosition={'top'}*/}\n                        {/*/>*/}\n                    </ButtonGroup>\n                </div>\n\n                {dataStoreDescriptionElement}\n\n                {/*This was an ESA requirement long time ago. It may no longer apply.*/}\n                {/*{dataStoreNoticesElement}*/}\n\n            </React.Fragment>\n        );\n    }\n\n    //noinspection JSMethodCanBeStatic\n    private renderNoDataStoreMessage() {\n        return NO_DATA_STORES_FOUND;\n    }\n\n    //noinspection JSMethodCanBeStatic\n    private renderNoDataSourcesMessage() {\n        const selectedDataStore = this.props.selectedDataStore;\n        if (isLocalDataStore(selectedDataStore)) {\n            return NO_LOCAL_DATA_SOURCES;\n        } else {\n            const selectedDataSources = this.props.selectedDataSources;\n            if (selectedDataSources === null) {\n                return DATA_SOURCES_LOADING;\n            } else {\n                return NO_DATA_SOURCES_FOUND;\n            }\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataSourcesPanel as any);\n","import * as React from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport {\r\n    ButtonGroup,\r\n    Classes,\r\n    InputGroup,\r\n    Intent,\r\n    Menu,\r\n    MenuItem,\r\n    Popover,\r\n    PopoverInteractionKind,\r\n    Tag\r\n} from '@blueprintjs/core';\r\nimport { ContentWithDetailsPanel } from '../components/ContentWithDetailsPanel';\r\nimport { LabelWithType } from '../components/LabelWithType';\r\nimport { ListBox, ListBoxSelectionMode } from '../components/ListBox';\r\nimport { Card } from '@blueprintjs/core';\r\nimport Markdown from '../components/Markdown';\r\nimport OperationStepDialog from './OperationStepDialog';\r\nimport { OperationInputState, OperationOutputState, OperationState, State, WorkspaceState } from '../state';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { ScrollablePanelContent } from '../components/ScrollableContent';\r\nimport { NO_OPERATIONS_FOUND } from '../messages';\r\nimport { ToolButton } from '../components/ToolButton';\r\nimport { NEW_OPERATION_STEP_DIALOG_ID } from './operation-step-dialog-ids';\r\n\r\n\r\ninterface IOperationsPanelProps {\r\n    workspace: WorkspaceState;\r\n    operations: OperationState[] | null;\r\n    selectedOperationName: string | null;\r\n    selectedOperation: OperationState | null;\r\n    filteredOperations: OperationState[];\r\n    operationFilterTags: string[];\r\n    operationFilterExpr: string | null;\r\n    operationsTagCounts: Map<string, number>,\r\n    operationListHeight: number;\r\n    showOperationDetails: boolean;\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: State): IOperationsPanelProps {\r\n    return {\r\n        workspace: state.data.workspace,\r\n        operations: selectors.operationsSelector(state),\r\n        selectedOperation: selectors.selectedOperationSelector(state),\r\n        filteredOperations: selectors.filteredOperationsSelector(state),\r\n        selectedOperationName: selectors.selectedOperationNameSelector(state),\r\n        operationFilterTags: selectors.operationFilterTagsSelector(state) || selectors.EMPTY_ARRAY,\r\n        operationFilterExpr: selectors.operationFilterExprSelector(state),\r\n        operationsTagCounts: selectors.operationsTagCountsSelector(state),\r\n        operationListHeight: state.session.operationListHeight,\r\n        showOperationDetails: state.session.showOperationDetails,\r\n    };\r\n}\r\n\r\nconst OP_CARD_STYLE = {margin: 6, padding: 10};\r\n\r\n/**\r\n * The OperationsPanel is used to select and browse available operations.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nclass OperationsPanel extends React.Component<IOperationsPanelProps & DispatchProp<State>, any> {\r\n\r\n    constructor(props: IOperationsPanelProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.handleOperationSelection = this.handleOperationSelection.bind(this);\r\n        this.handleOperationFilterExprCleared = this.handleOperationFilterExprCleared.bind(this);\r\n        this.handleOperationFilterExprChange = this.handleOperationFilterExprChange.bind(this);\r\n        this.handleListHeightChanged = this.handleListHeightChanged.bind(this);\r\n        this.handleShowDetailsChanged = this.handleShowDetailsChanged.bind(this);\r\n        this.handleAddOperationStepButtonClicked = this.handleAddOperationStepButtonClicked.bind(this);\r\n    }\r\n\r\n    private static getItemKey(operation: OperationState) {\r\n        return operation.name;\r\n    }\r\n\r\n    private static renderItem(operation: OperationState) {\r\n        const name = operation.name;\r\n        let dataType;\r\n        if (!operation.outputs.length) {\r\n            dataType = '';\r\n        } else if (operation.outputs.length === 1) {\r\n            dataType = operation.outputs[0].dataType;\r\n        } else {\r\n            dataType = `${operation.outputs.length} types`;\r\n        }\r\n        return (<LabelWithType label={name} dataType={dataType}/>);\r\n    }\r\n\r\n    private static formatPortDescriptionText(description) {\r\n        if (!description || description === '') {\r\n            return description;\r\n        }\r\n        description = description.trim();\r\n        if (!description.endsWith('.')) {\r\n            description += '.';\r\n        }\r\n        return ' - ' + description;\r\n    }\r\n\r\n    private static getInputDescriptionText(input: OperationInputState) {\r\n        let description = OperationsPanel.formatPortDescriptionText(input.description);\r\n        if (typeof (input.defaultValue) === 'undefined') {\r\n            description += ' Mandatory value.';\r\n        } else {\r\n            description += ` Default value is \"${input.defaultValue}\".`\r\n        }\r\n        return description;\r\n    }\r\n\r\n    private static getOutputDescriptionText(output: OperationOutputState) {\r\n        return OperationsPanel.formatPortDescriptionText(output.description);\r\n    }\r\n\r\n    private static getMultiplicityText(n: number, singularText: string, pluralText?: string): string {\r\n        return n === 1 ? singularText : (pluralText || singularText + 's');\r\n    }\r\n\r\n    render() {\r\n        const operations = this.props.operations;\r\n        let body;\r\n        if (operations && operations.length) {\r\n            const operationFilterExpr = this.props.operationFilterExpr;\r\n            const operationTagFilterPanel = this.renderOperationTagFilterPanel();\r\n            const operationsList = this.renderOperationsList();\r\n            const operationDetailsCard = this.renderOperationDetailsCard();\r\n\r\n            const resultsTag = (\r\n                <Tag className={Classes.MINIMAL} onRemove={this.handleOperationFilterExprCleared}>\r\n                    {this.props.filteredOperations.length}\r\n                </Tag>\r\n            );\r\n\r\n            const operationFilterExprInput = (\r\n                <InputGroup\r\n                    disabled={false}\r\n                    leftIcon=\"filter\"\r\n                    onChange={this.handleOperationFilterExprChange}\r\n                    placeholder=\"Find operation\"\r\n                    rightElement={resultsTag}\r\n                    value={operationFilterExpr}\r\n                />\r\n            );\r\n\r\n            const canAddStepOperation = this.props.selectedOperation && this.props.workspace;\r\n            const actionComponent = (\r\n                <ButtonGroup>\r\n                    <ToolButton\r\n                        tooltipContent={<span>Add a new operation step to<br/>the workspace's workflow</span>}\r\n                        intent={Intent.PRIMARY}\r\n                        onClick={this.handleAddOperationStepButtonClicked}\r\n                        disabled={!canAddStepOperation}\r\n                        text=\"Add Step...\"\r\n                        icon=\"play\"\r\n                        tooltipPosition={'top'}\r\n                    />\r\n                    {canAddStepOperation ? <OperationStepDialog id={NEW_OPERATION_STEP_DIALOG_ID}/> : null}\r\n                </ButtonGroup>\r\n            );\r\n\r\n            body = (<div>\r\n                {operationFilterExprInput}\r\n                {operationTagFilterPanel}\r\n                <ContentWithDetailsPanel showDetails={this.props.showOperationDetails}\r\n                                         onShowDetailsChange={this.handleShowDetailsChanged}\r\n                                         isSplitPanel={true}\r\n                                         contentHeight={this.props.operationListHeight}\r\n                                         onContentHeightChange={this.handleListHeightChanged}\r\n                                         actionComponent={actionComponent}>\r\n                    {operationsList}\r\n                    {operationDetailsCard}\r\n                </ContentWithDetailsPanel>\r\n            </div>);\r\n        } else {\r\n            body = this.renderNoOperationsMessage();\r\n        }\r\n        return body;\r\n    }\r\n\r\n    private handleListHeightChanged(value: number) {\r\n        this.props.dispatch(actions.setSessionProperty('operationListHeight', value));\r\n    }\r\n\r\n    private handleShowDetailsChanged(value: boolean) {\r\n        this.props.dispatch(actions.setSessionProperty('showOperationDetails', value));\r\n    }\r\n\r\n    private handleOperationSelection(newSelection: Array<React.Key>) {\r\n        if (newSelection.length > 0) {\r\n            this.props.dispatch(actions.setSelectedOperationName(newSelection[0] as string));\r\n        } else {\r\n            this.props.dispatch(actions.setSelectedOperationName(null));\r\n        }\r\n    }\r\n\r\n    private handleOperationFilterExprCleared() {\r\n        this.props.dispatch(actions.setOperationFilterExpr(''));\r\n    }\r\n\r\n    private handleOperationFilterExprChange(event) {\r\n        this.props.dispatch(actions.setOperationFilterExpr(event.target.value));\r\n    }\r\n\r\n    private handleAddOperationStepButtonClicked() {\r\n        this.props.dispatch(actions.showOperationStepDialog('newOperationStepDialog'));\r\n    }\r\n\r\n    private renderOperationsList() {\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <ListBox items={this.props.filteredOperations}\r\n                         getItemKey={OperationsPanel.getItemKey}\r\n                         renderItem={OperationsPanel.renderItem}\r\n                         selectionMode={ListBoxSelectionMode.SINGLE}\r\n                         selection={this.props.selectedOperationName}\r\n                         onSelection={this.handleOperationSelection}\r\n                         onItemDoubleClick={this.handleAddOperationStepButtonClicked}/>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    private renderOperationTagFilterPanel() {\r\n        const selectedOperationTags = new Set(this.props.operationFilterTags);\r\n        const tagCounts = this.props.operationsTagCounts;\r\n\r\n        const tagContainerStyle = {padding: '0.2em', display: 'flex', alignItems: 'center'};\r\n        const tagStyle = {\r\n            marginRight: '0.2em', marginTop: '0',\r\n            marginBottom: '0', paddingTop: '0', paddingBottom: '0',\r\n            height: '4ex'\r\n        };\r\n\r\n        let selectedTagItems = [];\r\n        selectedOperationTags.forEach(tagName => {\r\n            selectedTagItems.push(\r\n                <Tag intent={Intent.PRIMARY}\r\n                     minimal={true}\r\n                     style={tagStyle}\r\n                     onRemove={() => this.removeTagName(tagName)}>\r\n                    {`${tagName}`}\r\n                </Tag>);\r\n        });\r\n\r\n        let tagMenuItems = [];\r\n        tagCounts.forEach((tagCount, tagName) => {\r\n            if (!selectedOperationTags.has(tagName)) {\r\n                tagMenuItems.push(\r\n                    <MenuItem key={tagName} text={`${tagName} (${tagCount})`}\r\n                              onClick={() => this.addTagName(tagName)}/>);\r\n            }\r\n        });\r\n\r\n        let addTagButton = null;\r\n        if (tagMenuItems.length) {\r\n            const tagMenu = (<Menu>{tagMenuItems}</Menu>);\r\n            addTagButton = (\r\n                <Popover content={tagMenu}\r\n                         interactionKind={PopoverInteractionKind.CLICK}>\r\n                    <Tag intent={Intent.SUCCESS} minimal={true} icon=\"small-plus\" style={tagStyle}/>\r\n                </Popover>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div style={tagContainerStyle}>\r\n                {addTagButton}{selectedTagItems}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private addTagName(tagName: string) {\r\n        const tags = new Set<string>(this.props.operationFilterTags);\r\n        tags.add(tagName);\r\n        this.props.dispatch(actions.setOperationFilterTags(Array.from(tags)));\r\n    }\r\n\r\n    private removeTagName(tagName: string) {\r\n        const tags = new Set<string>(this.props.operationFilterTags);\r\n        tags.delete(tagName);\r\n        this.props.dispatch(actions.setOperationFilterTags(Array.from(tags)));\r\n    }\r\n\r\n    private renderOperationDetailsCard() {\r\n        const operation = this.props.selectedOperation;\r\n        let title = 'No selection';\r\n        let description = null;\r\n        let tags = null;\r\n        let inputs = null;\r\n        let outputs = null;\r\n        if (operation) {\r\n            title = operation.name;\r\n\r\n            if (operation.description) {\r\n                description = (\r\n                    <p className=\"user-selectable\">\r\n                        <Markdown source={operation.description}/>\r\n                    </p>);\r\n            }\r\n\r\n            if (operation.tags) {\r\n                tags = (<p><strong>Tags:</strong> {operation.tags.join(', ')}</p>);\r\n            }\r\n\r\n            if (operation.outputs && operation.outputs.length) {\r\n                const outputElems = operation.outputs.map(output => (\r\n                    <li key={output.name}>\r\n                        <LabelWithType label={output.name} em dataType={output.dataType} units={output.units}/>\r\n                        <Markdown source={OperationsPanel.getOutputDescriptionText(output)}/>\r\n                    </li>\r\n                ));\r\n                outputs = (\r\n                    <div>\r\n                        <p>\r\n                            <strong>{OperationsPanel.getMultiplicityText(operation.outputs.length, 'Output') + ':'}</strong>\r\n                        </p>\r\n                        <ul>{outputElems}</ul>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n\r\n            if (operation.inputs && operation.inputs.length) {\r\n                const inputElems = operation.inputs.map(input => (\r\n                    <li key={input.name}>\r\n                        <LabelWithType label={input.name} em dataType={input.dataType} units={input.units}/>\r\n                        <Markdown source={OperationsPanel.getInputDescriptionText(input)}/>\r\n                    </li>\r\n                ));\r\n                inputs = (\r\n                    <div>\r\n                        <p>\r\n                            <strong>{OperationsPanel.getMultiplicityText(operation.outputs.length, 'Input') + ':'}</strong>\r\n                        </p>\r\n                        <ul>{inputElems}</ul>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <Card elevation={2} style={OP_CARD_STYLE}>\r\n                    <h3 className=\"user-selectable\">{title}</h3>\r\n                    {description}\r\n                    {tags}\r\n                    {outputs}\r\n                    {inputs}\r\n                </Card>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    private renderNoOperationsMessage() {\r\n        return NO_OPERATIONS_FOUND;\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(OperationsPanel);\r\n","import * as React from 'react';\nimport { connect, Dispatch } from 'react-redux';\nimport { Button, Classes, Dialog, Icon, IconName, Intent, ProgressBar } from '@blueprintjs/core';\n\nimport { State, WebAPIServiceInfo, WebAPIStatus } from '../state';\n\n\ninterface IDispatch {\n    dispatch: Dispatch<State>;\n}\n\ninterface IWebAPIStatusBoxProps {\n    webAPIStatus: WebAPIStatus | null;\n    webAPIServiceInfo: WebAPIServiceInfo | null;\n    username?: string | null;\n}\n\nfunction mapStateToProps(state: State): IWebAPIStatusBoxProps {\n    return {\n        webAPIStatus: state.communication.webAPIStatus,\n        webAPIServiceInfo: state.communication.webAPIServiceInfo,\n    };\n}\n\nconst _WebAPIStatusBox: React.FC<IWebAPIStatusBoxProps & IDispatch> = (\n    {\n        webAPIStatus,\n        webAPIServiceInfo,\n    }) => {\n\n    const reload = () => {\n        window.location.reload();\n    };\n\n    switch (webAPIStatus) {\n        case 'open':\n            return null;\n        case 'login':\n            return (<StatusBox\n                message={'Logging in...'}\n                icon=\"log-in\"\n                isWaiting={true}\n            />);\n        case 'launching':\n            return (<StatusBox\n                message={'Launching Cate service...'}\n                icon=\"log-in\"\n                isWaiting={true}\n            />);\n        case 'connecting':\n            return (<StatusBox\n                message={'Connecting to Cate service...'}\n                icon=\"log-in\"\n                isWaiting={true}\n            />);\n        case 'shuttingDown':\n            return (<StatusBox\n                message={'Shutting down Cate service...'}\n                icon=\"log-out\"\n                isWaiting={true}\n            />);\n        case 'loggingOut':\n            return (<StatusBox\n                message={'Logging out...'}\n                icon=\"log-out\"\n                isWaiting={true}\n            />);\n        case 'closed':\n            const autoStopInfo = webAPIServiceInfo.autoStopInfo;\n            let message: string;\n            if (autoStopInfo\n                && autoStopInfo.inactivityTime >= autoStopInfo.availableTime - 5) {\n                message = 'Cate service has been shut down due to inactivity. ' +\n                          'Press \"Retry\" to try reconnecting.';\n                return (<StatusBox\n                    message={message}\n                    icon=\"offline\"\n                    isWaiting={false}\n                    onRetry={reload}\n                />);\n            } else {\n                message = 'The connection to the Cate service has been closed unexpectedly.';\n                return (<ErrorBox\n                    message={message}\n                    icon=\"offline\"\n                    onRetry={reload}\n                />);\n            }\n        case 'error':\n            return (<ErrorBox\n                message={'Oops! An error occurred while launching or connecting the Cate service.'}\n                icon=\"offline\"\n                onRetry={reload}\n            />);\n        default:\n            return (<ErrorBox\n                message={'Oops! No service available.'}\n                icon=\"offline\"\n            />);\n    }\n};\n\nconst WebAPIStatusBox = connect(mapStateToProps)(_WebAPIStatusBox);\nexport default WebAPIStatusBox;\n\n\n//////////////////////////////////////////////////////////////////////////////\n\ninterface IStatusBoxProps {\n    message: React.ReactNode;\n    icon: IconName;\n    isWaiting?: boolean;\n    onRetry?: () => void;\n    onCancel?: () => void;\n}\n\nconst DIALOG_P_STYLE: React.CSSProperties = {marginTop: 12};\nconst DIALOG_ICON_STYLE: React.CSSProperties = {marginTop: 6, textAlign: 'center', width: '100%'};\n\nconst StatusBox: React.FC<IStatusBoxProps> = ({\n                                                  message,\n                                                  icon,\n                                                  isWaiting,\n                                                  onRetry,\n                                                  onCancel,\n                                              }) => {\n\n    let progress;\n    if (isWaiting) {\n        progress = (<div style={DIALOG_P_STYLE}><ProgressBar intent={Intent.SUCCESS}/></div>);\n    }\n    let footer;\n    if (onRetry || onCancel) {\n        let cancelButton = onCancel ? (<Button onClick={onCancel} intent={Intent.PRIMARY}>Cancel</Button>) : null;\n        let retryButton = onRetry ? (<Button onClick={onRetry}>Retry</Button>) : null;\n        footer = (\n            <div className={Classes.DIALOG_FOOTER}>\n                <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                    {cancelButton}\n                    {retryButton}\n                </div>\n            </div>\n        );\n    }\n    return (\n        <Dialog\n            isOpen={true}\n            canEscapeKeyClose={false}\n            canOutsideClickClose={false}\n        >\n            <div className={Classes.DIALOG_BODY}>\n                <div style={DIALOG_ICON_STYLE}><Icon icon={icon} iconSize={32}/></div>\n                <div style={DIALOG_P_STYLE}>{message}</div>\n                {progress}\n            </div>\n            {footer}\n        </Dialog>\n    );\n};\n\n//////////////////////////////////////////////////////////////////////////////\n\ninterface IErrorBoxProps extends IStatusBoxProps {\n    username?: string;\n}\n\nconst ErrorBox: React.FC<IErrorBoxProps> = (\n    {\n        message,\n        icon,\n        isWaiting,\n        onRetry,\n        onCancel,\n    }\n) => {\n    return (<StatusBox\n        message={message}\n        icon={icon}\n        isWaiting={isWaiting}\n        onRetry={onRetry}\n        onCancel={onCancel}\n    />);\n};\n","import * as React from 'react';\r\nimport { DialogState, ResourceState, State, WorkflowStepState } from '../state';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport * as assert from '../../common/assert';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport { Checkbox, InputGroup, Label } from '@blueprintjs/core';\r\n\r\nconst DIALOG_ID = 'workflowStepPropertiesDialog';\r\nconst DIALOG_TITLE = 'Workflow Step & Resource Properties';\r\n\r\ninterface IResourcePropertiesDialogOwnProps {\r\n    selectedWorkflowStep: WorkflowStepState;\r\n}\r\n\r\ninterface IWorkflowStepPropertiesDialogProps extends IResourcePropertiesDialogOwnProps, DialogState {\r\n    resources: ResourceState[];\r\n}\r\n\r\ninterface IWorkflowStepPropertiesDialogState {\r\n    stepId: string;\r\n    stepPersistent: boolean;\r\n}\r\n\r\nfunction mapStateToProps(state: State, ownProps: IResourcePropertiesDialogOwnProps): IWorkflowStepPropertiesDialogProps {\r\n    return {\r\n        selectedWorkflowStep: ownProps.selectedWorkflowStep,\r\n        isOpen: selectors.dialogStateSelector(DIALOG_ID)(state).isOpen,\r\n        resources: selectors.resourcesSelector(state),\r\n    };\r\n}\r\n\r\nclass WorkflowStepPropertiesDialog extends React.Component<IWorkflowStepPropertiesDialogProps & DispatchProp<State>, IWorkflowStepPropertiesDialogState> {\r\n\r\n    constructor(props: IWorkflowStepPropertiesDialogProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.state = WorkflowStepPropertiesDialog.mapPropsToState(props);\r\n    }\r\n\r\n    private static mapPropsToState(props: IWorkflowStepPropertiesDialogProps) {\r\n        const step = props.selectedWorkflowStep;\r\n        assert.ok(step);\r\n        return {\r\n            stepId: step.id || '',\r\n            stepPersistent: step.persistent || false,\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IWorkflowStepPropertiesDialogProps): void {\r\n        this.setState(WorkflowStepPropertiesDialog.mapPropsToState(nextProps));\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.dispatch(actions.hideDialog(DIALOG_ID));\r\n\r\n        const oldStepId = this.props.selectedWorkflowStep.id || '';\r\n        const newStepId = this.state.stepId ? this.state.stepId.trim() : '';\r\n        const oldStepPersistent = this.props.selectedWorkflowStep.persistent || false;\r\n        const newStepPersistent = this.state.stepPersistent || false;\r\n\r\n        if (oldStepPersistent !== newStepPersistent) {\r\n            this.props.dispatch(actions.setWorkspaceResourcePersistence(oldStepId, newStepPersistent) as any);\r\n        }\r\n        if (oldStepId !== newStepId) {\r\n            this.props.dispatch(actions.renameWorkspaceResource(oldStepId, newStepId) as any);\r\n        }\r\n    }\r\n\r\n    private onCancel() {\r\n        this.props.dispatch(actions.hideDialog(DIALOG_ID));\r\n    }\r\n\r\n    private canConfirm(): boolean {\r\n        const oldStepId = this.props.selectedWorkflowStep.id || '';\r\n        const newStepId = this.state.stepId ? this.state.stepId.trim() : '';\r\n        const oldStepPersistent = this.props.selectedWorkflowStep.persistent || false;\r\n        const newStepPersistent = this.state.stepPersistent || false;\r\n        const newStepIdIsValid = /^[a-zA-z_][a-zA-z0-9_]*$/.test(newStepId);\r\n        return newStepId !== '' && (newStepId !== oldStepId || newStepPersistent !== oldStepPersistent) && newStepIdIsValid;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ModalDialog\r\n                isOpen={this.props.isOpen}\r\n                title={DIALOG_TITLE}\r\n                icon=\"edit\"\r\n                onCancel={this.onCancel}\r\n                onConfirm={this.onConfirm}\r\n                canConfirm={this.canConfirm}\r\n                renderBody={this.renderBody}\r\n            />\r\n        );\r\n    }\r\n\r\n    private renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{width: '100%', padding: 6}}>\r\n                <Label>\r\n                    Resource name\r\n                    <span className=\"bp3-text-muted\"> (must be unique within the workspace)</span>\r\n                    <InputGroup\r\n                        style={{width: '100%'}}\r\n                        type=\"text\"\r\n                        value={this.state.stepId}\r\n                        onChange={(ev: any) => this.setState({stepId: ev.target.value})}\r\n                    />\r\n                    <span className=\"bp3-text-muted\">The Resource name must only contain the uppercase and lowercase letters A through Z,\r\n                        the underscore _ and, except for the first character, the digits 0 through 9.</span>\r\n                </Label>\r\n\r\n                <div style={{paddingTop: 10}}>\r\n                    <Checkbox checked={this.state.stepPersistent}\r\n                              onChange={(ev: any) => this.setState({stepPersistent: ev.target.checked})}\r\n                              label=\"Persist resulting resource\"\r\n                    />\r\n                    <span className=\"bp3-text-muted\">If checked, the resource will be read from a file in the workspac next time the workspace is opened.\r\n                        This usually speeds up the loading of workspace, but requires extra disk space.</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WorkflowStepPropertiesDialog);\r\n\r\n","import * as React from 'react';\r\nimport {CSSProperties} from 'react';\r\nimport {connect, DispatchProp} from 'react-redux';\r\nimport {\r\n    ButtonGroup,\r\n    Icon,\r\n    Intent,\r\n    Menu,\r\n    MenuItem,\r\n    Popover,\r\n    PopoverPosition,\r\n    Tab,\r\n    Tabs,\r\n    Tooltip\r\n} from '@blueprintjs/core';\r\nimport {Cell, Column, Table, TruncatedFormat, TruncatedPopoverMode} from '@blueprintjs/table';\r\n\r\nimport {ListBox} from '../components/ListBox';\r\nimport {LabelWithType} from '../components/LabelWithType';\r\nimport WorkflowStepPropertiesDialog from './WorkflowStepPropertiesDialog';\r\nimport OperationStepDialog from './OperationStepDialog';\r\nimport {ContentWithDetailsPanel} from '../components/ContentWithDetailsPanel';\r\nimport * as assert from '../../common/assert';\r\nimport * as actions from '../actions'\r\nimport * as selectors from '../selectors'\r\nimport {\r\n    OperationInputState,\r\n    OperationIOBaseState,\r\n    OperationState,\r\n    ResourceState,\r\n    State,\r\n    WorkflowPortState,\r\n    WorkflowStepState,\r\n    WorkspacePanelMode,\r\n    WorkspaceState\r\n} from '../state';\r\nimport {ScrollablePanelContent} from '../components/ScrollableContent';\r\nimport {NO_WORKFLOW_STEPS, NO_WORKSPACE, NO_WORKSPACE_RESOURCES} from '../messages';\r\nimport {findOperation, isDataFrameResource, isFigureResource} from '../state-util';\r\nimport {isBoolean, isDefined, isString, isUndefined, isUndefinedOrNull} from '../../common/types';\r\nimport {ToolButton} from '../components/ToolButton';\r\nimport {EDIT_OPERATION_STEP_DIALOG_ID} from './operation-step-dialog-ids';\r\n\r\n\r\ninterface IWorkspacePanelProps {\r\n    workspace: WorkspaceState;\r\n    resourcesMap: { [name: string]: ResourceState };\r\n    resourceListHeight: number;\r\n    showResourceDetails: boolean;\r\n    selectedResource: ResourceState | null;\r\n    selectedResourceAttributes: string[][];\r\n    selectedResourceName: string | null;\r\n    selectedResourceWorkflowStep: WorkflowStepState | null;\r\n    workflowStepListHeight: number;\r\n    showWorkflowStepDetails: boolean;\r\n    selectedWorkflowStep: WorkflowStepState | null;\r\n    selectedWorkflowStepId: string | null;\r\n    selectedWorkflowStepOp: OperationState | null;\r\n    selectedWorkflowStepResource: ResourceState | null;\r\n    activeViewId: string | null;\r\n    workspacePanelMode: 'resources' | 'steps';\r\n    operations: OperationState[];\r\n}\r\n\r\nfunction mapStateToProps(state: State): IWorkspacePanelProps {\r\n    return {\r\n        workspace: selectors.workspaceSelector(state),\r\n        resourcesMap: selectors.resourceMapSelector(state),\r\n        resourceListHeight: selectors.resourceListHeightSelector(state),\r\n        showResourceDetails: selectors.showResourceDetailsSelector(state),\r\n        selectedResource: selectors.selectedResourceSelector(state),\r\n        selectedResourceAttributes: selectors.selectedResourceAttributesSelector(state),\r\n        selectedResourceName: selectors.selectedResourceNameSelector(state),\r\n        selectedResourceWorkflowStep: selectors.selectedResourceWorkflowStepSelector(state),\r\n        workflowStepListHeight: selectors.workflowStepListHeightSelector(state),\r\n        showWorkflowStepDetails: selectors.showWorkflowStepDetailsSelector(state),\r\n        selectedWorkflowStep: selectors.selectedWorkflowStepSelector(state),\r\n        selectedWorkflowStepId: selectors.selectedWorkflowStepIdSelector(state),\r\n        selectedWorkflowStepOp: selectors.selectedWorkflowStepOpSelector(state),\r\n        selectedWorkflowStepResource: selectors.selectedWorkflowStepResourceSelector(state),\r\n        activeViewId: selectors.activeViewIdSelector(state),\r\n        workspacePanelMode: state.session.workspacePanelMode,\r\n        operations: selectors.operationsSelector(state),\r\n    };\r\n}\r\n\r\n/**\r\n * The WorkspacePanel lets user browse the currently opened workspace.\r\n * It comprises the workspace files, and the workflow which is subdivided into\r\n * workspace resources and workspace steps (operations).\r\n *\r\n * @author Norman Fomferra\r\n */\r\nclass WorkspacePanel extends React.PureComponent<IWorkspacePanelProps & DispatchProp<State>, any> {\r\n\r\n    private static readonly STATE_TAG_STYLE: CSSProperties = {margin: 2};\r\n    private static readonly FLEX_ROW_STYLE: CSSProperties = {display: 'flex', alignItems: 'center'};\r\n    private static readonly SPACER_STYLE: CSSProperties = {flex: 1};\r\n\r\n    constructor(props: IWorkspacePanelProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.handleResourceListHeightChanged = this.handleResourceListHeightChanged.bind(this);\r\n        this.handleShowResourceDetailsChanged = this.handleShowResourceDetailsChanged.bind(this);\r\n        this.handleResourceNameSelected = this.handleResourceNameSelected.bind(this);\r\n        this.handleStepListHeightChanged = this.handleStepListHeightChanged.bind(this);\r\n        this.handleShowWorkflowStepDetailsChanged = this.handleShowWorkflowStepDetailsChanged.bind(this);\r\n        this.handleWorkflowStepIdSelected = this.handleWorkflowStepIdSelected.bind(this);\r\n        this.handleShowFigureButtonClicked = this.handleShowFigureButtonClicked.bind(this);\r\n        this.handleWorkflowStepPropertiesButtonClicked = this.handleWorkflowStepPropertiesButtonClicked.bind(this);\r\n        this.handleOpenWorkspaceDirectoryClicked = this.handleOpenWorkspaceDirectoryClicked.bind(this);\r\n        this.handleEditOperationStepButtonClicked = this.handleEditOperationStepButtonClicked.bind(this);\r\n        this.renderStepItem = this.renderStepItem.bind(this);\r\n        this.renderResourceAttrName = this.renderResourceAttrName.bind(this);\r\n        this.renderResourceAttrValue = this.renderResourceAttrValue.bind(this);\r\n        this.renderOperationStepInputName = this.renderOperationStepInputName.bind(this);\r\n        this.renderOperationStepInputValue = this.renderOperationStepInputValue.bind(this);\r\n        this.renderOperationStepOutputName = this.renderOperationStepOutputName.bind(this);\r\n        this.renderOperationStepOutputValue = this.renderOperationStepOutputValue.bind(this);\r\n        this.handleWorkspacePanelModeChanged = this.handleWorkspacePanelModeChanged.bind(this);\r\n        this.handleRemoveOperationStepButtonClicked = this.handleRemoveOperationStepButtonClicked.bind(this);\r\n        this.handleCleanWorkflowButtonClicked = this.handleCleanWorkflowButtonClicked.bind(this);\r\n        this.handleShowResourceTableView = this.handleShowResourceTableView.bind(this);\r\n        this.handleCopyWorkflowAsPythonScript = this.handleCopyWorkflowAsPythonScript.bind(this);\r\n        this.handleCopyWorkflowAsShellScript = this.handleCopyWorkflowAsShellScript.bind(this);\r\n        this.handleCopyWorkflowAsJSON = this.handleCopyWorkflowAsJSON.bind(this);\r\n    }\r\n\r\n    private handleResourceNameSelected(newSelection: Array<React.Key>) {\r\n        if (newSelection && newSelection.length) {\r\n            this.props.dispatch(actions.setSelectedWorkspaceResourceName(newSelection[0] as string) as any);\r\n        } else {\r\n            this.props.dispatch(actions.setSelectedWorkspaceResourceName(null) as any);\r\n        }\r\n    }\r\n\r\n    private handleWorkflowStepIdSelected(newSelection: Array<React.Key>) {\r\n        if (newSelection && newSelection.length) {\r\n            this.props.dispatch(actions.setSelectedWorkflowStepId(newSelection[0] as string) as any);\r\n        } else {\r\n            this.props.dispatch(actions.setSelectedWorkflowStepId(null) as any);\r\n        }\r\n    }\r\n\r\n    private handleResourceListHeightChanged(value: number) {\r\n        this.props.dispatch(actions.setSessionProperty('resourceListHeight', value));\r\n    }\r\n\r\n    private handleShowResourceDetailsChanged(value: boolean) {\r\n        this.props.dispatch(actions.setSessionProperty('showResourceDetails', value));\r\n    }\r\n\r\n    private handleStepListHeightChanged(value: number) {\r\n        this.props.dispatch(actions.setSessionProperty('workflowStepListHeight', value));\r\n    }\r\n\r\n    private handleShowWorkflowStepDetailsChanged(value: boolean) {\r\n        this.props.dispatch(actions.setSessionProperty('showWorkflowStepDetails', value));\r\n    }\r\n\r\n    private handleShowFigureButtonClicked() {\r\n        this.props.dispatch(actions.showFigureView(this.getEffectiveResource(), this.props.activeViewId));\r\n    }\r\n\r\n    private handleShowResourceTableView() {\r\n        this.props.dispatch(actions.showTableView(this.getEffectiveResource().name, null, this.props.activeViewId));\r\n    }\r\n\r\n    private handleWorkflowStepPropertiesButtonClicked() {\r\n        this.props.dispatch(actions.showDialog('workflowStepPropertiesDialog'));\r\n    }\r\n\r\n    private handleOpenWorkspaceDirectoryClicked() {\r\n        this.props.dispatch(actions.showItemInFolder(this.props.workspace.baseDir) as any);\r\n    }\r\n\r\n    private handleCopyWorkflowAsPythonScript() {\r\n        const text = convertSteps(this.props.operations, this.props.workspace.workflow.steps, 'python');\r\n        actions.copyTextToClipboard(text);\r\n    }\r\n\r\n    private handleCopyWorkflowAsShellScript() {\r\n        const text = convertSteps(this.props.operations, this.props.workspace.workflow.steps, 'shell');\r\n        actions.copyTextToClipboard(text);\r\n    }\r\n\r\n    private handleCopyWorkflowAsJSON() {\r\n        actions.copyTextToClipboard(JSON.stringify(this.props.workspace.workflow, null, 4));\r\n    }\r\n\r\n    private handleEditOperationStepButtonClicked() {\r\n        this.props.dispatch(actions.showOperationStepDialog('editOperationStepDialog'));\r\n    }\r\n\r\n    private handleRemoveOperationStepButtonClicked() {\r\n        const resName = this.getEffectiveResourceName();\r\n        if (resName) {\r\n            this.props.dispatch(actions.deleteResourceInteractive(resName) as any);\r\n        }\r\n    }\r\n\r\n    private handleCleanWorkflowButtonClicked() {\r\n        this.props.dispatch(actions.cleanWorkspaceInteractive() as any);\r\n    }\r\n\r\n    private handleWorkspacePanelModeChanged(workspacePanelMode: WorkspacePanelMode) {\r\n        this.props.dispatch(actions.updateSessionState({workspacePanelMode}) as any);\r\n    }\r\n\r\n    private getEffectiveWorkflowStep() {\r\n        return this.props.workspacePanelMode === 'steps'\r\n            ? this.props.selectedWorkflowStep : this.props.selectedResourceWorkflowStep;\r\n    }\r\n\r\n    private getEffectiveResource() {\r\n        return this.props.workspacePanelMode === 'resources'\r\n            ? this.props.selectedResource : this.props.selectedWorkflowStepResource;\r\n    }\r\n\r\n    private getEffectiveResourceName() {\r\n        let resource = this.getEffectiveResource();\r\n        let workflowStep = this.getEffectiveWorkflowStep();\r\n        return resource ? resource.name : workflowStep ? workflowStep.id : null;\r\n    }\r\n\r\n    private static getResourceItemKey(resource: ResourceState) {\r\n        return resource.name;\r\n    }\r\n\r\n    private static renderResourceItem(resource: ResourceState) {\r\n        return (<LabelWithType label={resource.name}\r\n                               dataType={resource.dataType}/>);\r\n    }\r\n\r\n    private static getStepItemKey(step: WorkflowStepState) {\r\n        return step.id;\r\n    }\r\n\r\n    private renderStepItem(step: WorkflowStepState) {\r\n        return (<span>{this.getWorkflowStepLabel(step)}</span>);\r\n    }\r\n\r\n    render() {\r\n        const workspace = this.props.workspace;\r\n        if (!workspace) {\r\n            return NO_WORKSPACE;\r\n        }\r\n\r\n        assert.ok(workspace.workflow);\r\n        const steps = workspace.workflow.steps;\r\n        assert.ok(steps);\r\n        const resources = workspace.resources;\r\n        assert.ok(resources);\r\n\r\n        const workspaceName = (workspace.isScratch || !workspace.baseDir)\r\n            ? '<unnamed>'\r\n            : workspace.baseDir.split(/[\\\\/]/).pop();\r\n        const workspaceLabel = (\r\n            <Tooltip content={workspace.baseDir} position={PopoverPosition.AUTO_START}>\r\n                <strong>{workspaceName}</strong>\r\n            </Tooltip>\r\n        );\r\n        let workspaceState = null;\r\n        if (workspace.isModified) {\r\n            workspaceState = (\r\n                <span key={0} style={WorkspacePanel.STATE_TAG_STYLE}\r\n                      className=\"bp3-tag bp3-intent-warning bp3-minimal\">Modified</span>\r\n            );\r\n        } else if (!workspace.isSaved) {\r\n            workspaceState = (\r\n                <span key={1} style={WorkspacePanel.STATE_TAG_STYLE}\r\n                      className=\"bp3-tag bp3-intent-success bp3-minimal\">Not saved</span>\r\n            );\r\n        }\r\n        const openItemButton = (\r\n            <ToolButton\r\n                tooltipContent=\"Show workspace directory in file system\"\r\n                onClick={this.handleOpenWorkspaceDirectoryClicked}\r\n                icon=\"folder-open\"\r\n                tooltipPosition={'top'}\r\n            />\r\n        );\r\n        const copyItemButton = (\r\n            <Popover position={PopoverPosition.LEFT}>\r\n                <ToolButton\r\n                    tooltipContent=\"Copy workflow\"\r\n                    disabled={!steps.length}\r\n                    icon=\"clipboard\"\r\n                    tooltipPosition={'top'}\r\n                />\r\n                <Menu>\r\n                    <MenuItem onClick={this.handleCopyWorkflowAsPythonScript} text=\"Copy workflow as Python Script\"/>\r\n                    <MenuItem onClick={this.handleCopyWorkflowAsShellScript} text=\"Copy workflow as Shell Script\"/>\r\n                    <MenuItem onClick={this.handleCopyWorkflowAsJSON} text=\"Copy workflow as JSON\"/>\r\n                </Menu>\r\n            </Popover>\r\n        );\r\n\r\n        //const resourcesTooltip = \"Workspace resources that result from workflow steps\";\r\n        //const workflowTooltip = \"Workflow steps that generate workspace resources\";\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <div style={WorkspacePanel.FLEX_ROW_STYLE}>\r\n                    {workspaceLabel}\r\n                    <span style={WorkspacePanel.SPACER_STYLE}/>\r\n                    {workspaceState}\r\n                    <ButtonGroup>\r\n                        {openItemButton}\r\n                        {copyItemButton}\r\n                    </ButtonGroup>\r\n                </div>\r\n                <Tabs id=\"workflow\"\r\n                      renderActiveTabPanelOnly={true}\r\n                      selectedTabId={this.props.workspacePanelMode}\r\n                      onChange={this.handleWorkspacePanelModeChanged}>\r\n                    <Tab id=\"steps\" title={`Workflow (${steps.length})`} panel={this.renderWorkflowStepsPanel()}/>\r\n                    <Tab id=\"resources\" title={`Resources (${resources.length})`} panel={this.renderResourcesPanel()}/>\r\n                </Tabs>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    private renderWorkspaceActions() {\r\n        const resource = this.getEffectiveResource();\r\n        const workflowStep = this.getEffectiveWorkflowStep();\r\n        const canShowFigure = isFigureResource(resource);\r\n        const isOperationStepSelected = workflowStep && workflowStep.op;\r\n        const hasSteps = this.props.workspace && this.props.workspace.workflow.steps.length;\r\n        const canShowTableView = isDataFrameResource(resource);\r\n        return (\r\n            <ButtonGroup>\r\n                <ToolButton\r\n                    tooltipContent=\"Show figure\"\r\n                    disabled={!canShowFigure}\r\n                    icon=\"eye-open\"\r\n                    tooltipPosition={'top'}\r\n                    onClick={this.handleShowFigureButtonClicked}/>\r\n                <ToolButton\r\n                    tooltipContent=\"Show data in table\"\r\n                    disabled={!canShowTableView}\r\n                    icon=\"th\"\r\n                    tooltipPosition={'top'}\r\n                    onClick={this.handleShowResourceTableView}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"Resource/step properties\"\r\n                    disabled={!resource}\r\n                    icon=\"label\"\r\n                    tooltipPosition={'top'}\r\n                    onClick={this.handleWorkflowStepPropertiesButtonClicked}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"Edit workflow step\"\r\n                    intent={Intent.PRIMARY}\r\n                    disabled={!workflowStep}\r\n                    icon=\"edit\"\r\n                    tooltipPosition={'top'}\r\n                    onClick={this.handleEditOperationStepButtonClicked}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"Remove workflow step and its resource\"\r\n                    disabled={!workflowStep}\r\n                    icon=\"remove\"\r\n                    tooltipPosition={'top'}\r\n                    onClick={this.handleRemoveOperationStepButtonClicked}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"Clean workspace, remove all steps and resources\"\r\n                    disabled={!hasSteps}\r\n                    icon=\"delete\"\r\n                    tooltipPosition={'top'}\r\n                    onClick={this.handleCleanWorkflowButtonClicked}\r\n                />\r\n                {workflowStep ? <WorkflowStepPropertiesDialog selectedWorkflowStep={workflowStep}/> : null}\r\n                {isOperationStepSelected\r\n                    ? <OperationStepDialog id={EDIT_OPERATION_STEP_DIALOG_ID} operationStep={workflowStep}/>\r\n                    : null}\r\n            </ButtonGroup>\r\n        );\r\n    }\r\n\r\n    private renderResourcesPanel() {\r\n        const resources = this.props.workspace.resources;\r\n        if (!resources || !resources.length) {\r\n            return NO_WORKSPACE_RESOURCES;\r\n        }\r\n        return (\r\n            <ContentWithDetailsPanel showDetails={this.props.showResourceDetails}\r\n                                     onShowDetailsChange={this.handleShowResourceDetailsChanged}\r\n                                     isSplitPanel={true}\r\n                                     contentHeight={this.props.resourceListHeight}\r\n                                     onContentHeightChange={this.handleResourceListHeightChanged}\r\n                                     actionComponent={this.renderWorkspaceActions()}>\r\n                {this.renderResourcesList()}\r\n                {this.renderResourceDetails()}\r\n            </ContentWithDetailsPanel>\r\n        );\r\n    }\r\n\r\n    private renderResourcesList() {\r\n        const resources = this.props.workspace.resources;\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <ListBox items={resources}\r\n                         getItemKey={WorkspacePanel.getResourceItemKey}\r\n                         renderItem={WorkspacePanel.renderResourceItem}\r\n                         selection={this.props.selectedResourceName}\r\n                         onSelection={this.handleResourceNameSelected}\r\n                         onItemDoubleClick={this.handleEditOperationStepButtonClicked}/>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    private renderResourceDetails() {\r\n        const selectedResourceAttributes = this.props.selectedResourceAttributes;\r\n        if (!selectedResourceAttributes || !selectedResourceAttributes.length) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <span>Attributes:</span>\r\n                <Table numRows={selectedResourceAttributes.length} enableRowHeader={false}>\r\n                    <Column name=\"Name\" cellRenderer={this.renderResourceAttrName}/>\r\n                    <Column name=\"Value\" cellRenderer={this.renderResourceAttrValue}/>\r\n                </Table>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    private renderWorkflowStepsPanel() {\r\n        const workflowSteps = this.props.workspace.workflow.steps;\r\n        if (!workflowSteps || !workflowSteps.length) {\r\n            return NO_WORKFLOW_STEPS;\r\n        }\r\n        return (\r\n            <ContentWithDetailsPanel showDetails={this.props.showWorkflowStepDetails}\r\n                                     onShowDetailsChange={this.handleShowWorkflowStepDetailsChanged}\r\n                                     isSplitPanel={true}\r\n                                     contentHeight={this.props.workflowStepListHeight}\r\n                                     onContentHeightChange={this.handleStepListHeightChanged}\r\n                                     actionComponent={this.renderWorkspaceActions()}>\r\n                {this.renderWorkflowStepsList()}\r\n                {this.renderWorkflowStepDetails()}\r\n            </ContentWithDetailsPanel>\r\n        );\r\n    }\r\n\r\n    private renderWorkflowStepsList() {\r\n        const workflowSteps = this.props.workspace.workflow.steps;\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <ListBox items={workflowSteps}\r\n                         getItemKey={WorkspacePanel.getStepItemKey}\r\n                         renderItem={this.renderStepItem}\r\n                         selection={this.props.selectedWorkflowStepId}\r\n                         onSelection={this.handleWorkflowStepIdSelected}\r\n                         onItemDoubleClick={this.handleEditOperationStepButtonClicked}/>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    private renderWorkflowStepDetails() {\r\n\r\n        const selectedWorkflowStepOp = this.props.selectedWorkflowStepOp;\r\n        if (!selectedWorkflowStepOp) {\r\n            return null;\r\n        }\r\n\r\n        let stepInputPanel = WorkspacePanel.renderWorkflowStepPorts(\r\n            selectedWorkflowStepOp.inputs,\r\n            'Step inputs:', 'No step inputs.',\r\n            this.renderOperationStepInputName,\r\n            this.renderOperationStepInputValue\r\n        );\r\n\r\n        let stepOutputPanel = null;\r\n        // let stepOutputPanel = WorkspacePanel.renderWorkflowStepPorts(selectedWorkflowStepOp.outputs,\r\n        //     \"Step outputs:\", \"No step outputs.\",\r\n        //     this.renderOperationStepOutputName,\r\n        //     this.renderOperationStepOutputValue);\r\n\r\n        return (\r\n            <ScrollablePanelContent>\r\n                {stepInputPanel}\r\n                {stepOutputPanel}\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    static renderWorkflowStepPorts(ports: OperationIOBaseState[], itemsTitle: string, noItemsTitle: string, renderName, renderValue) {\r\n        if (ports && ports.length) {\r\n            return (\r\n                <div>\r\n                    <p>{itemsTitle}</p>\r\n                    <Table numRows={ports.length} enableRowHeader={false}>\r\n                        <Column name=\"Name\" cellRenderer={renderName}/>\r\n                        <Column name=\"Value\" cellRenderer={renderValue}/>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <p>{noItemsTitle}</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderResourceAttrName(row: number) {\r\n        return <Cell><TruncatedFormat>{this.props.selectedResourceAttributes[row][0]}</TruncatedFormat></Cell>\r\n    }\r\n\r\n    renderResourceAttrValue(row: number): any {\r\n        return (\r\n            <Cell>\r\n                <TruncatedFormat\r\n                    showPopover={TruncatedPopoverMode.WHEN_TRUNCATED}\r\n                    detectTruncation={true}\r\n                >\r\n                    {`${this.props.selectedResourceAttributes[row][1]}`}\r\n                </TruncatedFormat>\r\n            </Cell>\r\n        );\r\n    }\r\n\r\n    renderOperationStepInputName(row: number) {\r\n        const inputProps = this.props.selectedWorkflowStepOp.inputs[row];\r\n        const inputPort = this.props.selectedWorkflowStep.inputs[inputProps.name];\r\n        return WorkspacePanel.renderWorkflowPortName(inputProps, inputPort);\r\n    }\r\n\r\n    renderOperationStepInputValue(row: number): any {\r\n        const inputProps = this.props.selectedWorkflowStepOp.inputs[row];\r\n        const inputPort = this.props.selectedWorkflowStep.inputs[inputProps.name];\r\n        return WorkspacePanel.renderWorkflowPortValue(inputProps, inputPort);\r\n    }\r\n\r\n    renderOperationStepOutputName(row: number) {\r\n        const outputProps = this.props.selectedWorkflowStepOp.outputs[row];\r\n        const outputPort = this.props.selectedWorkflowStep.outputs[outputProps.name];\r\n        return WorkspacePanel.renderWorkflowPortName(outputProps, outputPort);\r\n    }\r\n\r\n    renderOperationStepOutputValue(row: number): any {\r\n        const outputProps = this.props.selectedWorkflowStepOp.outputs[row];\r\n        const outputPort = this.props.selectedWorkflowStep.outputs[outputProps.name];\r\n        return WorkspacePanel.renderWorkflowPortValue(outputProps, outputPort);\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    static renderWorkflowPortName(portProps: OperationIOBaseState, port: WorkflowPortState) {\r\n        return (\r\n            <Cell><TruncatedFormat showPopover={TruncatedPopoverMode.ALWAYS}>{portProps.name}</TruncatedFormat></Cell>);\r\n    }\r\n\r\n    static renderWorkflowPortValue(portProps: OperationIOBaseState, port: WorkflowPortState) {\r\n        let cellValue;\r\n        if (port) {\r\n            let units;\r\n            if (portProps.units) {\r\n                units = (<span className=\"bp3-text-muted\">{` (${portProps.units})`}</span>);\r\n            }\r\n            const source = isString(port) ? port : port.source;\r\n            if (source) {\r\n                cellValue = (<span>&#8599; <em>{source}</em></span>);\r\n            } else {\r\n                let value = port.value;\r\n                const maxTextLen = 128;\r\n                if (isString(value) && value.length > maxTextLen) {\r\n                    // Note we do this for performance reasons. BlueprintJS renders very slowly\r\n                    // e.g. for large Geometry WKT values.\r\n                    value = value.substr(0, maxTextLen) + '...';\r\n                }\r\n                cellValue = (<span>{value}{units}</span>);\r\n            }\r\n        } else {\r\n            let defaultValue = (portProps as OperationInputState).defaultValue;\r\n            if (isDefined(defaultValue)) {\r\n                cellValue = (<span>{`${defaultValue}`} <span className=\"bp3-text-muted\">(default value)</span></span>);\r\n            } else {\r\n                cellValue = (<span className=\"bp3-text-muted\">Not given.</span>);\r\n            }\r\n        }\r\n        return (<Cell>{cellValue}</Cell>);\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    private getWorkflowStepLabel(step: WorkflowStepState) {\r\n\r\n        const items = [];\r\n\r\n        if (step && step.op) {\r\n            let opName = step.op;\r\n            const index = opName.lastIndexOf('.');\r\n            if (index > 0) {\r\n                opName = opName.slice(index + 1);\r\n            }\r\n            items.push(<code key={0}>{opName}()</code>);\r\n        } else {\r\n            items.push(<code key={0}>?()</code>);\r\n        }\r\n\r\n        const resource = this.props.resourcesMap[step.id];\r\n        if (resource) {\r\n            items.push(<span key={1}> &rarr; </span>);\r\n            items.push(<LabelWithType key={2} label={resource.name}\r\n                                      dataType={resource.dataType}/>);\r\n        }\r\n\r\n        if (step && step.persistent) {\r\n            items.push(<span key={3}> </span>);\r\n            items.push(<Icon key={4} icon=\"database\"/>);\r\n        }\r\n\r\n        return <span>{items}</span>;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WorkspacePanel);\r\n\r\n\r\nfunction convertSteps(operations: OperationState[], steps: WorkflowStepState[], target: 'python' | 'shell'): string {\r\n    // TODO (forman): move this to backend, as this is best done in Python\r\n    let lines = [];\r\n    if (target === 'python') {\r\n        lines.push('import cate.ops');\r\n    } else {\r\n        lines.push('cate ws new');\r\n    }\r\n    for (let i = 0; i < steps.length; i++) {\r\n        const step = steps[i];\r\n        const op = findOperation(operations, step.op);\r\n        if (op && op.inputs) {\r\n            if (target === 'python') {\r\n                lines.push('');\r\n                lines.push(`# Step ${i + 1}`);\r\n            }\r\n            const args = [];\r\n            for (let input of op.inputs) {\r\n                const inputPort = step.inputs[input.name];\r\n                if (!inputPort) {\r\n                    // No value provided, which should be ok (default value applies)\r\n                    continue;\r\n                }\r\n                const source = isString(inputPort) ? inputPort : inputPort.source;\r\n                if (inputPort && source) {\r\n                    if (target === 'python') {\r\n                        args.push(`${input.name}=${source}`);\r\n                    } else {\r\n                        args.push(`${input.name}=@${source}`);\r\n                    }\r\n                } else if (inputPort) {\r\n                    let value = inputPort.value;\r\n                    if (isUndefined(value)) {\r\n                        value = null;\r\n                    }\r\n                    let defaultValue = input.defaultValue;\r\n                    if (isUndefined(defaultValue)) {\r\n                        defaultValue = null;\r\n                    }\r\n                    if (value !== defaultValue) {\r\n                        if (isUndefinedOrNull(value)) {\r\n                            args.push(`${input.name}=None`);\r\n                        } else if (isString(value)) {\r\n                            args.push(`${input.name}=\"${value}\"`);\r\n                        } else if (isBoolean(value)) {\r\n                            args.push(`${input.name}=${value ? 'True' : 'False'}`);\r\n                        } else if (isBoolean(value)) {\r\n                            args.push(`${input.name}=${value}`);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            let resName = step.id;\r\n            const opName = op.name;\r\n            if (target === 'python') {\r\n                lines.push(`${resName} = cate.ops.${opName}(${args.join(', ')})`);\r\n            } else {\r\n                lines.push(`cate res set ${resName} ${opName} ${args.join(' ')}`);\r\n            }\r\n        }\r\n    }\r\n    if (target === 'shell') {\r\n        lines.push('cate ws exit');\r\n    }\r\n    lines.push('');\r\n    return lines.join('\\n');\r\n}\r\n","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { GeographicPosition, Placemark, ResourceState, SavedLayers, State, VariableState } from '../state';\r\nimport * as assert from '../../common/assert';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { ListBox, ListBoxSelectionMode } from '../components/ListBox';\r\nimport { ContentWithDetailsPanel } from '../components/ContentWithDetailsPanel';\r\nimport { LabelWithType } from '../components/LabelWithType';\r\nimport { ButtonGroup, Colors } from '@blueprintjs/core';\r\nimport { Cell, Column, Table, TruncatedFormat } from '@blueprintjs/table';\r\nimport { ScrollablePanelContent } from '../components/ScrollableContent';\r\nimport { NO_VARIABLES, NO_VARIABLES_EMPTY_RESOURCE } from '../messages';\r\nimport * as Cesium from 'cesium';\r\nimport { ToolButton } from '../components/ToolButton';\r\nimport { isSpatialImageVariable, isSpatialVectorVariable } from '../state-util';\r\nimport { isDefined, isDefinedAndNotNull } from '../../common/types';\r\n\r\ninterface IVariablesPanelProps {\r\n    variables: VariableState[];\r\n    selectedResource: ResourceState | null;\r\n    selectedVariableName: string | null;\r\n    selectedVariable: VariableState | null;\r\n    selectedVariableAttributesTableData: [string, any][];\r\n    variableListHeight: number;\r\n    showVariableDetails: boolean;\r\n    showSelectedVariableLayer: boolean;\r\n    activeViewId: string;\r\n    activeViewType: string;\r\n    savedLayers: SavedLayers;\r\n    selectedPlacemark: Placemark | null;\r\n    selectedEntity: Cesium.Entity | null;\r\n    globeViewPosition: GeographicPosition | null;\r\n    positionData: { [varName: string]: number } | null\r\n}\r\n\r\nfunction mapStateToProps(state: State): IVariablesPanelProps {\r\n    return {\r\n        variables: selectors.variablesSelector(state) || selectors.EMPTY_ARRAY,\r\n        selectedResource: selectors.selectedResourceSelector(state),\r\n        selectedVariableName: selectors.selectedVariableNameSelector(state),\r\n        selectedVariable: selectors.selectedVariableSelector(state),\r\n        selectedVariableAttributesTableData: selectors.selectedVariableAttributesTableDataSelector(state),\r\n        variableListHeight: state.session.variableListHeight,\r\n        showVariableDetails: state.session.showVariableDetails,\r\n        showSelectedVariableLayer: state.session.showSelectedVariableLayer,\r\n        activeViewId: selectors.activeViewIdSelector(state),\r\n        activeViewType: selectors.activeViewTypeSelector(state),\r\n        savedLayers: selectors.savedLayersSelector(state),\r\n        selectedPlacemark: selectors.selectedPlacemarkSelector(state),\r\n        selectedEntity: selectors.selectedEntitySelector(state),\r\n        globeViewPosition: state.location.globeViewPosition,\r\n        positionData: state.location.positionData,\r\n    }\r\n}\r\n\r\n/**\r\n * The VariablesPanel list all variables of the selected workspace resource.\r\n *\r\n * @author Marco Zuehlke, Norman Fomferra\r\n */\r\nclass VariablesPanel extends React.Component<IVariablesPanelProps & DispatchProp<State>, null> {\r\n    static readonly VALUE_STYLE: CSSProperties = {float: 'right', color: Colors.BLUE5};\r\n\r\n\r\n    constructor(props: IVariablesPanelProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.handleSelectedVariableNameChanged = this.handleSelectedVariableNameChanged.bind(this);\r\n        this.handleListHeightChanged = this.handleListHeightChanged.bind(this);\r\n        this.handleShowDetailsChanged = this.handleShowDetailsChanged.bind(this);\r\n        this.handleShowSelectedVariableLayer = this.handleShowSelectedVariableLayer.bind(this);\r\n        this.handleAddVariableLayer = this.handleAddVariableLayer.bind(this);\r\n        this.handleAddVariableTimeSeriesPlot = this.handleAddVariableTimeSeriesPlot.bind(this);\r\n        this.handleAddVariableHistogramPlot = this.handleAddVariableHistogramPlot.bind(this);\r\n        this.handleShowVariableTableView = this.handleShowVariableTableView.bind(this);\r\n    }\r\n\r\n    private handleSelectedVariableNameChanged(newSelection: Array<React.Key>) {\r\n        const resource = this.props.selectedResource;\r\n        assert.ok(resource);\r\n        if (newSelection && newSelection.length) {\r\n            const selectedVariableName = newSelection[0] as string;\r\n            const selectedVariable = this.props.variables.find(v => v.name === selectedVariableName);\r\n            assert.ok(selectedVariable);\r\n            this.props.dispatch(actions.setSelectedVariable(resource, selectedVariable, this.props.savedLayers));\r\n        } else {\r\n            this.props.dispatch(actions.setSelectedVariable(resource, null));\r\n        }\r\n    }\r\n\r\n    private handleListHeightChanged(value: number) {\r\n        this.props.dispatch(actions.setSessionProperty('variableListHeight', value));\r\n    }\r\n\r\n    private handleShowDetailsChanged(value: boolean) {\r\n        this.props.dispatch(actions.setSessionProperty('showVariableDetails', value));\r\n    }\r\n\r\n    private handleShowSelectedVariableLayer() {\r\n        const showSelectedVariableLayer = this.props.showSelectedVariableLayer;\r\n        this.props.dispatch(actions.setShowSelectedVariableLayer(!showSelectedVariableLayer));\r\n    }\r\n\r\n    private handleAddVariableLayer() {\r\n        const resource = this.props.selectedResource;\r\n        const variable = this.props.selectedVariable;\r\n        const activeViewId = this.props.activeViewId;\r\n        const savedLayers = this.props.savedLayers;\r\n        assert.ok(resource);\r\n        assert.ok(variable && variable.imageLayout);\r\n        assert.ok(activeViewId);\r\n        this.props.dispatch(actions.addVariableLayer(activeViewId, resource, variable, true, savedLayers));\r\n    }\r\n\r\n    private handleAddVariableTimeSeriesPlot() {\r\n        const resource = this.props.selectedResource;\r\n        const variable = this.props.selectedVariable;\r\n        const placemark = this.props.selectedPlacemark;\r\n        const placemarkName = placemark.properties['name'] || 'placemark';\r\n        const placemarkPosition = placemark.geometry.coordinates;\r\n        const opArgs = {\r\n            ds: {source: resource.name},\r\n            'var': {value: variable.name},\r\n            indexers: {value: `lon=${placemarkPosition[0]}, lat=${placemarkPosition[1]}`},\r\n            properties: {value: null},\r\n            file: {value: null},\r\n        };\r\n        this.props.dispatch(actions.setWorkspaceResource('cate.ops.plot.plot', opArgs,\r\n                                                         null, false,\r\n                                                         `Creating time series plot for placemark ${placemarkName}`) as any);\r\n    }\r\n\r\n    private handleAddVariableHistogramPlot() {\r\n        const resource = this.props.selectedResource;\r\n        const variable = this.props.selectedVariable;\r\n        const opArgs = {\r\n            ds: {source: resource.name},\r\n            'var': {value: variable.name},\r\n            indexers: {value: null},\r\n            properties: {value: 'bins=250'},\r\n            file: {value: null},\r\n        };\r\n        this.props.dispatch(actions.setWorkspaceResource('cate.ops.plot.plot_hist', opArgs,\r\n                                                         null, false,\r\n                                                         'Creating histogram plot') as any);\r\n    }\r\n\r\n    private handleShowVariableTableView() {\r\n        const resource = this.props.selectedResource;\r\n        const variable = this.props.selectedVariable;\r\n        assert.ok(resource);\r\n        assert.ok(variable);\r\n        this.props.dispatch(actions.showTableView(resource.name, variable.name, this.props.activeViewId));\r\n    }\r\n\r\n    render() {\r\n        const resource = this.props.selectedResource;\r\n        const variables = this.props.variables;\r\n        if (variables && variables.length) {\r\n            return (\r\n                <ContentWithDetailsPanel showDetails={this.props.showVariableDetails}\r\n                                         onShowDetailsChange={this.handleShowDetailsChanged}\r\n                                         isSplitPanel={true}\r\n                                         contentHeight={this.props.variableListHeight}\r\n                                         onContentHeightChange={this.handleListHeightChanged}\r\n                                         actionComponent={this.renderVariableActionRow()}>\r\n                    <VariablesListPanel\r\n                        selectedEntity={this.props.selectedEntity}\r\n                        globeViewPosition={this.props.globeViewPosition}\r\n                        positionData={this.props.positionData}\r\n                        selectedVariableName={this.props.selectedVariableName}\r\n                        onSelectedVariableNameChanged={this.handleSelectedVariableNameChanged}\r\n                        variables={this.props.variables}\r\n                    />\r\n                    <VariableDetailsPanel\r\n                        tableData={this.props.selectedVariableAttributesTableData}\r\n                    />\r\n                </ContentWithDetailsPanel>\r\n            );\r\n        } else if (resource) {\r\n            return NO_VARIABLES_EMPTY_RESOURCE(resource.name);\r\n        } else {\r\n            return NO_VARIABLES;\r\n        }\r\n    }\r\n\r\n    private renderVariableActionRow() {\r\n        const selectedVariable = this.props.selectedVariable;\r\n        const isSpatialVariable = selectedVariable && selectedVariable.numDims >= 2 && selectedVariable.imageLayout;\r\n        const placemark = this.props.selectedPlacemark;\r\n        const hasWorldView = this.props.activeViewType && this.props.activeViewType === 'world';\r\n        const canAddLayer = isSpatialVariable && hasWorldView;\r\n        const canAddTimeSeriesPlot = isSpatialVariable && placemark;\r\n        const canAddHistogramPlot = selectedVariable && selectedVariable.numDims > 0;\r\n        const maxSize = 10000;\r\n        return (\r\n            <ButtonGroup>\r\n                <ToolButton tooltipContent=\"Toggle image layer visibility\"\r\n                            icon={this.props.showSelectedVariableLayer ? 'eye-open' : 'eye-off'}\r\n                            tooltipPosition={'top'}\r\n                            onClick={this.handleShowSelectedVariableLayer}/>\r\n                <ToolButton tooltipContent=\"Add a new image layer\"\r\n                            disabled={!canAddLayer}\r\n                            icon=\"layer\"\r\n                            tooltipPosition={'top'}\r\n                            onClick={this.handleAddVariableLayer}/>\r\n                <ToolButton tooltipContent=\"Create a time series plot from selected placemark\"\r\n                            disabled={!canAddTimeSeriesPlot}\r\n                            icon=\"timeline-line-chart\"\r\n                            tooltipPosition={'top'}\r\n                            onClick={this.handleAddVariableTimeSeriesPlot}/>\r\n                <ToolButton tooltipContent=\"Create a histogram plot\"\r\n                            disabled={!canAddHistogramPlot}\r\n                            icon=\"timeline-bar-chart\"\r\n                            tooltipPosition={'top'}\r\n                            onClick={this.handleAddVariableHistogramPlot}/>\r\n                <ToolButton tooltipContent={`Show data in table (only first ${maxSize} values)`}\r\n                            icon=\"th\"\r\n                            tooltipPosition={'top'}\r\n                            onClick={this.handleShowVariableTableView}/>\r\n            </ButtonGroup>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(VariablesPanel);\r\n\r\n\r\ninterface VariablesListPanelProps {\r\n    variables: VariableState[];\r\n    selectedVariableName: string | null;\r\n    onSelectedVariableNameChanged: (selectedVariableName: Array<React.Key>) => void;\r\n    selectedEntity: Cesium.Entity | null;\r\n    globeViewPosition: GeographicPosition | null;\r\n    positionData: { [varName: string]: number } | null\r\n}\r\n\r\nclass VariablesListPanel extends React.PureComponent<VariablesListPanelProps> {\r\n    private getItemKey = (variable: VariableState) => {\r\n        return variable.name;\r\n    };\r\n\r\n    private getItemValue = (variable: VariableState) => {\r\n\r\n        let value;\r\n\r\n        if (isSpatialVectorVariable(variable)) {\r\n            const selectedEntity = this.props.selectedEntity;\r\n            if (selectedEntity && selectedEntity.properties) {\r\n                const property = selectedEntity.properties[variable.name];\r\n                if (isDefinedAndNotNull(property)) {\r\n                    value = property.getValue();\r\n                }\r\n            }\r\n        } else if (isSpatialImageVariable(variable)) {\r\n            const positionData = this.props.positionData;\r\n            if (positionData) {\r\n                value = positionData[variable.name];\r\n            }\r\n        }\r\n\r\n        return isDefined(value) ? value : variable.value;\r\n    };\r\n\r\n    private renderItem = (variable: VariableState) => {\r\n\r\n        const label = (\r\n            <LabelWithType\r\n                label={variable.name}\r\n                dataType={variable.dataType}\r\n                tooltipText={variable.attributes && variable.attributes.long_name}\r\n            />\r\n        );\r\n\r\n        const value = this.getItemValue(variable);\r\n        if (!isDefined(value)) {\r\n            return label;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {label}\r\n                <span style={VariablesPanel.VALUE_STYLE}>{`${value}`}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    private handleVariableNameSelection = (selectedVariableName: Array<React.Key>) => {\r\n        this.props.onSelectedVariableNameChanged(selectedVariableName);\r\n    };\r\n\r\n    render() {\r\n        // We compute a new key here to force updates of the list box items either when the selected entity\r\n        // changes or new position data may be available.\r\n        let key = 'vlb';\r\n        const selectedEntityId = this.props.selectedEntity && this.props.selectedEntity.id;\r\n        if (selectedEntityId) {\r\n            key += `_${selectedEntityId}`;\r\n        }\r\n        const geoPos = this.props.globeViewPosition;\r\n        if (geoPos) {\r\n            key += `_${geoPos.longitude},${geoPos.latitude}`;\r\n        }\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <ListBox key={key}\r\n                         items={this.props.variables}\r\n                         getItemKey={this.getItemKey}\r\n                         renderItem={this.renderItem}\r\n                         selection={this.props.selectedVariableName}\r\n                         selectionMode={ListBoxSelectionMode.SINGLE}\r\n                         onSelection={this.handleVariableNameSelection}/>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n}\r\n\r\ninterface VariableDetailsPanelProps {\r\n    tableData: [string, any][] | null;\r\n}\r\n\r\nclass VariableDetailsPanel extends React.PureComponent<VariableDetailsPanelProps> {\r\n    static readonly DIV_STYLE: CSSProperties = {paddingTop: 4, width: '100%'};\r\n\r\n    private renderAttributeName = (index: number): any => {\r\n        return <Cell>{this.props.tableData[index][0]}</Cell>;\r\n    };\r\n\r\n    private renderAttributeValue = (index: number): any => {\r\n        return <Cell><TruncatedFormat>{this.props.tableData[index][1]}</TruncatedFormat></Cell>;\r\n    };\r\n\r\n    render() {\r\n        const tableData = this.props.tableData;\r\n        if (!tableData || !tableData.length) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div style={VariableDetailsPanel.DIV_STYLE}>\r\n                <Table numRows={tableData.length} enableRowHeader={false}>\r\n                    <Column name=\"Name\" cellRenderer={this.renderAttributeName}/>\r\n                    <Column name=\"Value\" cellRenderer={this.renderAttributeValue}/>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DialogState, LayerState, LayerVariableState, ResourceState, State } from '../state';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { ListBox, ListBoxSelectionMode } from '../components/ListBox';\r\nimport { LabelWithType } from '../components/LabelWithType';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport { ScrollablePanelContent } from '../components/ScrollableContent';\r\n\r\ninterface ILayerSourcesDialogProps extends DialogState {\r\n    resources: ResourceState[];\r\n    layers: LayerState[];\r\n    savedLayers: { [name: string]: LayerState };\r\n    activeViewId: string;\r\n    layerVariables: LayerVariableState[];\r\n}\r\n\r\ninterface ILayerSourcesDialogState {\r\n    selectedIndices: number[] | null;\r\n}\r\n\r\nfunction mapStateToProps(state: State): ILayerSourcesDialogProps {\r\n    return {\r\n        isOpen: selectors.dialogStateSelector(LayerSourcesDialog.DIALOG_ID)(state).isOpen,\r\n        layers: selectors.layersSelector(state),\r\n        savedLayers: selectors.savedLayersSelector(state),\r\n        activeViewId: selectors.activeViewIdSelector(state),\r\n        resources: selectors.resourcesSelector(state),\r\n        layerVariables: selectors.selectedLayerVariablesSelector(state),\r\n    };\r\n}\r\n\r\nclass LayerSourcesDialog extends React.Component<DispatchProp<State> & ILayerSourcesDialogProps, ILayerSourcesDialogState> {\r\n    static readonly DIALOG_ID = 'layerSourcesDialog';\r\n    static readonly DIALOG_TITLE = 'Add Layer';\r\n\r\n    constructor(props: DispatchProp<State> & ILayerSourcesDialogProps) {\r\n        super(props);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.handleChangedVariableSelection = this.handleChangedVariableSelection.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.state = {selectedIndices: null};\r\n    }\r\n\r\n    private onCancel() {\r\n        this.props.dispatch(actions.hideDialog(LayerSourcesDialog.DIALOG_ID));\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.dispatch(actions.hideDialog(LayerSourcesDialog.DIALOG_ID));\r\n        let selectLayer = true;\r\n        for (let index of this.state.selectedIndices) {\r\n            const layerVariable = this.props.layerVariables[index];\r\n            this.props.dispatch(\r\n                actions.addVariableLayer(this.props.activeViewId,\r\n                                         layerVariable.resource,\r\n                                         layerVariable.variable,\r\n                                         selectLayer,\r\n                                         this.props.savedLayers\r\n                ));\r\n            selectLayer = false;\r\n        }\r\n    }\r\n\r\n    private canConfirm(): boolean {\r\n        return !!this.state.selectedIndices && this.state.selectedIndices.length > 0;\r\n    }\r\n\r\n    private handleChangedVariableSelection(newSelection: number[]) {\r\n        this.setState({selectedIndices: newSelection.slice()});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalDialog\r\n                isOpen={this.props.isOpen}\r\n                title={LayerSourcesDialog.DIALOG_TITLE}\r\n                icon=\"layers\"\r\n                onCancel={this.onCancel}\r\n                onConfirm={this.onConfirm}\r\n                canConfirm={this.canConfirm}\r\n                renderBody={this.renderBody}\r\n            />\r\n        );\r\n    }\r\n\r\n    private renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n        if (!this.props.layerVariables.length) {\r\n            return (<p>There are currently no resource or variables that could be added as layers.</p>);\r\n        }\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <p>Select the variables you wish to add as a layer:</p>\r\n                <ListBox items={this.props.layerVariables}\r\n                         getItemKey={LayerSourcesDialog.getVariableItemKey}\r\n                         renderItem={LayerSourcesDialog.renderVariableItem}\r\n                         selectionMode={ListBoxSelectionMode.MULTIPLE}\r\n                         selection={this.state.selectedIndices}\r\n                         onSelection={this.handleChangedVariableSelection}/>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    //noinspection JSUnusedLocalSymbols\r\n    private static getVariableItemKey(variable: LayerVariableState, index: number) {\r\n        return index;\r\n    }\r\n\r\n    private static renderVariableItem(layerVariable: LayerVariableState) {\r\n        const variable = layerVariable.variable;\r\n        return (\r\n            <div>\r\n                <span>{layerVariable.resource.name}</span>\r\n                <span> / </span>\r\n                <LabelWithType label={variable.name}\r\n                               dataType={`${variable.dataType}[${variable.dimNames}]`}\r\n                               units={variable.units}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LayerSourcesDialog);\r\n","import * as React from 'react';\r\nimport {createRef, CSSProperties} from 'react';\r\nimport {\r\n    ButtonGroup,\r\n    Checkbox,\r\n    Colors, ContextMenu,\r\n    Icon,\r\n    IconName,\r\n    Label,\r\n    Menu,\r\n    MenuItem,\r\n    Popover,\r\n    Position\r\n} from '@blueprintjs/core';\r\nimport {connect, Dispatch} from 'react-redux';\r\nimport {Placemark, PlacemarkCollection, State} from '../state';\r\nimport {ListBox, ListBoxSelectionMode} from '../components/ListBox';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport {ContentWithDetailsPanel} from '../components/ContentWithDetailsPanel';\r\nimport LayerSourcesDialog from './LayerSourcesDialog';\r\nimport {ScrollablePanelContent} from '../components/ScrollableContent';\r\nimport {ViewState} from '../components/ViewState';\r\nimport {NO_PLACE_SELECTED, NO_PLACES} from '../messages';\r\nimport {FieldValue} from '../components/field/Field';\r\nimport {TextField} from '../components/field/TextField';\r\nimport {geoJsonToText, geometryGeoJsonToCsv, geometryGeoJsonToGeometryWkt, isBox} from '../../common/geometry-util';\r\nimport {GeometryToolType} from '../components/cesium/geometry-tool';\r\nimport {isBoolean} from '../../common/types';\r\nimport {NumericField, NumericFieldValue} from '../components/field/NumericField';\r\nimport {ToolButton} from '../components/ToolButton';\r\n\r\n\r\ninterface IPlacemarksPanelDispatch {\r\n    dispatch: Dispatch<State>;\r\n}\r\n\r\ninterface IPlacemarksPanelProps {\r\n    placemarkCollection: PlacemarkCollection;\r\n    selectedPlacemarkId: string | null,\r\n    selectedPlacemark: Placemark | null,\r\n    activeView: ViewState<any> | null;\r\n    placemarkListHeight: number,\r\n    showPlacemarkDetails: boolean,\r\n    geometryToolType: GeometryToolType;\r\n}\r\n\r\nfunction mapStateToProps(state: State): IPlacemarksPanelProps {\r\n    return {\r\n        placemarkCollection: selectors.placemarkCollectionSelector(state),\r\n        selectedPlacemarkId: selectors.selectedPlacemarkIdSelector(state),\r\n        selectedPlacemark: selectors.selectedPlacemarkSelector(state),\r\n        placemarkListHeight: state.session.placemarkListHeight,\r\n        showPlacemarkDetails: selectors.showPlacemarkDetailsSelector(state),\r\n        activeView: selectors.activeViewSelector(state),\r\n        geometryToolType: selectors.newPlacemarkToolTypeSelector(state),\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * The PlacemarksPanel is used to display, select, and manage user geometries.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nclass PlacemarksPanel extends React.Component<IPlacemarksPanelProps & IPlacemarksPanelDispatch, null> {\r\n\r\n    constructor(props: IPlacemarksPanelProps & IPlacemarksPanelDispatch) {\r\n        super(props);\r\n        this.handleListHeightChanged = this.handleListHeightChanged.bind(this);\r\n        this.handleShowDetailsChanged = this.handleShowDetailsChanged.bind(this);\r\n        this.handleNewPointToolButtonClicked = this.handleNewPointToolButtonClicked.bind(this);\r\n        this.handleNewPolygonToolButtonClicked = this.handleNewPolygonToolButtonClicked.bind(this);\r\n        this.handleNewPolylineToolButtonClicked = this.handleNewPolylineToolButtonClicked.bind(this);\r\n        this.handleNewBoxToolButtonClicked = this.handleNewBoxToolButtonClicked.bind(this);\r\n        this.handleRemovePlacemarkButtonClicked = this.handleRemovePlacemarkButtonClicked.bind(this);\r\n        this.handleLocatePlacemarkButtonClicked = this.handleLocatePlacemarkButtonClicked.bind(this);\r\n        this.handleChangedPlacemarkVisibility = this.handleChangedPlacemarkVisibility.bind(this);\r\n        this.handleChangedPlacemarkSelection = this.handleChangedPlacemarkSelection.bind(this);\r\n        this.handleChangedPlacemarkName = this.handleChangedPlacemarkName.bind(this);\r\n        this.handleChangedPointLongitude = this.handleChangedPointLongitude.bind(this);\r\n        this.handleChangedPointLatitude = this.handleChangedPointLatitude.bind(this);\r\n        this.handleCopySelectedPlacemarkAsCsv = this.handleCopySelectedPlacemarkAsCsv.bind(this);\r\n        this.handleCopySelectedPlacemarkAsWkt = this.handleCopySelectedPlacemarkAsWkt.bind(this);\r\n        this.handleCopySelectedPlacemarkAsGeoJSON = this.handleCopySelectedPlacemarkAsGeoJSON.bind(this);\r\n        this.handlePlacemarkDoubleClick = this.handlePlacemarkDoubleClick.bind(this);\r\n        this.renderPlacemarkItem = this.renderPlacemarkItem.bind(this);\r\n    }\r\n\r\n    private handleListHeightChanged(value: number) {\r\n        this.props.dispatch(actions.updateSessionState({placemarkListHeight: value}));\r\n    }\r\n\r\n    private handleNewPointToolButtonClicked() {\r\n        this.props.dispatch(actions.activateNewPlacemarkTool('PointTool'));\r\n    }\r\n\r\n    private handleNewPolygonToolButtonClicked() {\r\n        this.props.dispatch(actions.activateNewPlacemarkTool('PolygonTool'));\r\n    }\r\n\r\n    private handleNewPolylineToolButtonClicked() {\r\n        this.props.dispatch(actions.activateNewPlacemarkTool('PolylineTool'));\r\n    }\r\n\r\n    private handleNewBoxToolButtonClicked() {\r\n        this.props.dispatch(actions.activateNewPlacemarkTool('BoxTool'));\r\n    }\r\n\r\n    private handleShowDetailsChanged(value: boolean) {\r\n        this.props.dispatch(actions.updateSessionState({showPlacemarkDetails: value}));\r\n    }\r\n\r\n    private handleRemovePlacemarkButtonClicked() {\r\n        this.props.dispatch(actions.removePlacemark(this.props.selectedPlacemarkId));\r\n    }\r\n\r\n    private handleLocatePlacemarkButtonClicked() {\r\n        this.props.dispatch(actions.locatePlacemark(this.props.selectedPlacemarkId) as any);\r\n    }\r\n\r\n    private handlePlacemarkDoubleClick(placemark: Placemark) {\r\n        this.props.dispatch(actions.locatePlacemark(placemark.id) as any);\r\n    }\r\n\r\n    private handleChangedPlacemarkVisibility(placemark: Placemark, visible: boolean) {\r\n        this.props.dispatch(actions.updatePlacemarkProperties(placemark.id, {visible}));\r\n    }\r\n\r\n    private handleChangedPlacemarkName(nameField: FieldValue<string>) {\r\n        const placemark = this.props.selectedPlacemark;\r\n        const name = nameField.value;\r\n        this.props.dispatch(actions.updatePlacemarkStyle(placemark.id, {title: name}));\r\n    }\r\n\r\n    private handleChangedPointLongitude(longitude: NumericFieldValue) {\r\n        const placemark = this.props.selectedPlacemark;\r\n        let geometry = placemark.geometry;\r\n        geometry = {...geometry, coordinates: [longitude.value, geometry.coordinates[1]]};\r\n        this.props.dispatch(actions.updatePlacemarkGeometry(placemark.id, geometry));\r\n    }\r\n\r\n    private handleChangedPointLatitude(latitude: NumericFieldValue) {\r\n        const placemark = this.props.selectedPlacemark;\r\n        let geometry = placemark.geometry;\r\n        geometry = {...geometry, coordinates: [geometry.coordinates[0], latitude.value]};\r\n        this.props.dispatch(actions.updatePlacemarkGeometry(placemark.id, geometry));\r\n    }\r\n\r\n    private handleChangedPlacemarkSelection(newSelection: string[]) {\r\n        const selectedPlacemarkId = newSelection.length ? newSelection[0] : null;\r\n        this.props.dispatch(actions.setSelectedPlacemarkId(selectedPlacemarkId));\r\n    }\r\n\r\n    private handleCopySelectedPlacemarkAsCsv() {\r\n        this.handleCopyGeometryAsCsv(this.props.selectedPlacemark);\r\n    }\r\n\r\n    private handleCopySelectedPlacemarkAsWkt() {\r\n        this.handleCopyGeometryAsWkt(this.props.selectedPlacemark);\r\n    }\r\n\r\n    private handleCopySelectedPlacemarkAsGeoJSON() {\r\n        this.handleCopyGeometryAsGeoJson(this.props.selectedPlacemark);\r\n    }\r\n\r\n    private handleCopyGeometryAsCsv = (placemark: Placemark)  => {\r\n        actions.copyTextToClipboard(geometryGeoJsonToCsv(placemark.geometry));\r\n    };\r\n\r\n    private handleCopyGeometryAsWkt = (placemark: Placemark) => {\r\n        actions.copyTextToClipboard(geometryGeoJsonToGeometryWkt(placemark.geometry));\r\n    };\r\n\r\n    private handleCopyGeometryAsGeoJson = (placemark: Placemark) => {\r\n        actions.copyTextToClipboard(geoJsonToText(placemark));\r\n    };\r\n\r\n    private static getPlacemarkItemKey(placemark: Placemark) {\r\n        return placemark.id;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: '100%'}}>\r\n                <ContentWithDetailsPanel showDetails={this.props.showPlacemarkDetails}\r\n                                         onShowDetailsChange={this.handleShowDetailsChanged}\r\n                                         isSplitPanel={true}\r\n                                         contentHeight={this.props.placemarkListHeight}\r\n                                         onContentHeightChange={this.handleListHeightChanged}\r\n                                         actionComponent={this.renderActionButtonRow()}>\r\n                    {this.renderPlacemarksList()}\r\n                    {this.renderPlacemarkDetails()}\r\n                </ContentWithDetailsPanel>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderActionButtonRow() {\r\n        const isPointToolActive = this.props.geometryToolType === 'PointTool';\r\n        const isPolylineToolActive = this.props.geometryToolType === 'PolylineTool';\r\n        const isPolygonToolActive = this.props.geometryToolType === 'PolygonTool';\r\n        const isBoxToolActive = this.props.geometryToolType === 'BoxTool';\r\n        return (\r\n            <ButtonGroup>\r\n                <ToolButton\r\n                    tooltipContent=\"New marker\"\r\n                    onClick={this.handleNewPointToolButtonClicked}\r\n                    icon=\"dot\"\r\n                    tooltipPosition={'top'}\r\n                    active={isPointToolActive}\r\n                    disabled={false}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"New polyline\"\r\n                    onClick={this.handleNewPolylineToolButtonClicked}\r\n                    icon=\"slash\"\r\n                    tooltipPosition={'top'}\r\n                    active={isPolylineToolActive}\r\n                    disabled={false}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"New polygon\"\r\n                    onClick={this.handleNewPolygonToolButtonClicked}\r\n                    icon=\"polygon-filter\"\r\n                    tooltipPosition={'top'}\r\n                    active={isPolygonToolActive}\r\n                    disabled={false}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"New box\"\r\n                    onClick={this.handleNewBoxToolButtonClicked}\r\n                    icon=\"widget\"\r\n                    tooltipPosition={'top'}\r\n                    active={isBoxToolActive}\r\n                    disabled={false}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"Remove selected place\"\r\n                    disabled={!this.props.selectedPlacemarkId}\r\n                    onClick={this.handleRemovePlacemarkButtonClicked}\r\n                    icon=\"remove\"\r\n                    tooltipPosition={'top'}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"Locate selected place in view\"\r\n                    disabled={!this.props.selectedPlacemarkId}\r\n                    onClick={this.handleLocatePlacemarkButtonClicked}\r\n                    icon=\"locate\"\r\n                    tooltipPosition={'top'}\r\n                />\r\n                <Popover disabled={!this.props.selectedPlacemark} position={Position.LEFT}>\r\n                    <ToolButton\r\n                        tooltipContent={!this.props.selectedPlacemark ?\r\n                                        \"Copy selected place: Please select a place first.\" : \"Copy selected place.\"}\r\n                        disabled={!this.props.selectedPlacemark}\r\n                        icon=\"clipboard\"\r\n                        tooltipPosition={'top'}\r\n                    />\r\n                    <Menu>\r\n                        <MenuItem onClick={this.handleCopySelectedPlacemarkAsCsv} text=\"Copy as CSV\"/>\r\n                        <MenuItem onClick={this.handleCopySelectedPlacemarkAsWkt} text=\"Copy as WKT\"/>\r\n                        <MenuItem onClick={this.handleCopySelectedPlacemarkAsGeoJSON} text=\"Copy as GeoJSON\"/>\r\n                    </Menu>\r\n                </Popover>\r\n                <LayerSourcesDialog/>\r\n            </ButtonGroup>\r\n        );\r\n    }\r\n\r\n    private renderPlacemarksList() {\r\n        const placemarks = this.props.placemarkCollection.features;\r\n        if (!placemarks || !placemarks.length) {\r\n            return NO_PLACES;\r\n        }\r\n\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <ListBox items={placemarks}\r\n                         getItemKey={PlacemarksPanel.getPlacemarkItemKey}\r\n                         renderItem={this.renderPlacemarkItem}\r\n                         selectionMode={ListBoxSelectionMode.SINGLE}\r\n                         selection={this.props.selectedPlacemarkId}\r\n                         onSelection={this.handleChangedPlacemarkSelection}/>\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    private renderPlacemarkItem(placemark: Placemark) {\r\n        return <PlacemarkItem placemark={placemark}\r\n                              onDoubleClick={this.handlePlacemarkDoubleClick}\r\n                              onVisibilityChange={this.handleChangedPlacemarkVisibility}\r\n                              onCopyPlacemarkCsv={this.handleCopyGeometryAsCsv}\r\n                              onCopyPlacemarkWkt={this.handleCopyGeometryAsWkt}\r\n                              onCopyPlacemarkGeoJSON={this.handleCopyGeometryAsGeoJson}\r\n        />;\r\n    }\r\n\r\n    private renderPlacemarkDetails() {\r\n        const placemarks = this.props.placemarkCollection.features;\r\n        if (!placemarks || !placemarks.length) {\r\n            return null;\r\n        }\r\n        const placemark = this.props.selectedPlacemark;\r\n        if (!placemark) {\r\n            return NO_PLACE_SELECTED;\r\n        }\r\n        return (\r\n            <div style={{width: '100%'}}>\r\n                <Label key=\"spacer\"> </Label>\r\n                {this.renderPlacemarkTitle()}\r\n                {this.renderPlacemarkGeometry()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderPlacemarkTitle() {\r\n        const placemark = this.props.selectedPlacemark;\r\n        const name = placemark.properties['title'];\r\n        return (\r\n            <Label className=\"bp3-inline\">\r\n                Name\r\n                <span className=\"bp3-text-muted\"> (optional)</span>\r\n                <TextField value={{textValue: name, value: name}}\r\n                           onChange={this.handleChangedPlacemarkName}\r\n                           size={16}\r\n                           uncontrolled={true}\r\n                           placeholder=\"Placemark name\"\r\n                />\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderPlacemarkGeometry() {\r\n        const placemark = this.props.selectedPlacemark;\r\n        const geometry = placemark.geometry;\r\n        if (geometry.type === 'Point') {\r\n            const position = geometry.coordinates;\r\n            return (\r\n                <div>\r\n                    <Label className=\"bp3-inline\">\r\n                        Longitude\r\n                        <span className=\"bp3-text-muted\"> (in degrees)</span>\r\n                        <NumericField value={position[0]}\r\n                                      onChange={this.handleChangedPointLongitude}\r\n                                      size={12}\r\n                                      uncontrolled={true}\r\n                                      min={-180}\r\n                                      max={+180}\r\n                                      placeholder=\"Longitude in degrees\"/>\r\n                    </Label>\r\n                    <Label className=\"bp3-inline\">\r\n                        Latitude\r\n                        <span className=\"bp3-text-muted\"> (in degrees)</span>\r\n                        <NumericField value={position[1]}\r\n                                      onChange={this.handleChangedPointLatitude}\r\n                                      size={12}\r\n                                      uncontrolled={true}\r\n                                      min={-90}\r\n                                      max={+90}\r\n                                      placeholder=\"Latitude in degrees\"/>\r\n                    </Label>\r\n                </div>\r\n            );\r\n        } else if (isBox(geometry)) {\r\n            // TODO (nf): allow editing box coordinates\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PlacemarksPanel);\r\n\r\n\r\ninterface IPlacemarkItemProps {\r\n    placemark: Placemark;\r\n    onVisibilityChange: (placemark: Placemark, visible?) => void;\r\n    onCopyPlacemarkCsv: (placemark: Placemark) => void;\r\n    onCopyPlacemarkWkt: (placemark: Placemark) => void;\r\n    onCopyPlacemarkGeoJSON: (placemark: Placemark) => void;\r\n    onDoubleClick: (placemark: Placemark) => void;\r\n}\r\n\r\n\r\nclass PlacemarkItem extends React.PureComponent<IPlacemarkItemProps, {}> {\r\n\r\n    static readonly DIV_STYLE: CSSProperties = {display: 'flex', alignItems: 'center'};\r\n    static readonly CHECK_STYLE: CSSProperties = {flexGrow: 0, margin: 0};\r\n    static readonly LABEL_STYLE: CSSProperties = {flexGrow: 1};\r\n    static readonly ICON_STYLE: CSSProperties = {marginLeft: '0.5em'};\r\n    static readonly NAME_STYLE: CSSProperties = {marginLeft: '0.5em'};\r\n    static readonly INFO_STYLE: CSSProperties = {float: 'right', color: Colors.BLUE5};\r\n\r\n    placemarkItemRef = createRef<HTMLDivElement>();\r\n\r\n    constructor(props: IPlacemarkItemProps) {\r\n        super(props);\r\n        this.handleVisibilityChanged = this.handleVisibilityChanged.bind(this);\r\n        this.handleCopyPlacemarkCsv = this.handleCopyPlacemarkCsv.bind(this);\r\n        this.handleCopyPlacemarkWkt = this.handleCopyPlacemarkWkt.bind(this);\r\n        this.handleCopyPlacemarksGeoJSON = this.handleCopyPlacemarksGeoJSON.bind(this);\r\n        this.handleDoubleClick = this.handleDoubleClick.bind(this);\r\n    }\r\n\r\n    handleDoubleClick() {\r\n        this.props.onDoubleClick(this.props.placemark);\r\n    }\r\n\r\n    handleCopyPlacemarkCsv() {\r\n        this.props.onCopyPlacemarkCsv(this.props.placemark);\r\n    }\r\n\r\n    handleCopyPlacemarkWkt() {\r\n        this.props.onCopyPlacemarkWkt(this.props.placemark);\r\n    }\r\n\r\n    handleCopyPlacemarksGeoJSON() {\r\n        this.props.onCopyPlacemarkGeoJSON(this.props.placemark);\r\n    }\r\n\r\n    handleVisibilityChanged(event) {\r\n        this.props.onVisibilityChange(this.props.placemark, event.target.checked)\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const rightClickMe = this.placemarkItemRef.current;\r\n\r\n        if (rightClickMe) {\r\n            rightClickMe.oncontextmenu = (e: MouseEvent) => {\r\n                // prevent the browser's native context menu\r\n                e.preventDefault();\r\n\r\n                // render a Menu without JSX...\r\n                const menu = React.createElement(\r\n                    Menu,\r\n                    {}, // empty props\r\n                    React.createElement(MenuItem, {onClick: this.handleCopyPlacemarkCsv, text: \"Copy as CSV\"}),\r\n                    React.createElement(MenuItem, {onClick: this.handleCopyPlacemarkWkt, text: \"Copy as WKT\"}),\r\n                    React.createElement(MenuItem, {\r\n                        onClick: this.handleCopyPlacemarksGeoJSON,\r\n                        text: \"Copy as GeoJSON\"\r\n                    }),\r\n                );\r\n\r\n                // mouse position is available on event\r\n                ContextMenu.show(menu, {left: e.clientX, top: e.clientY}, () => {\r\n                    // menu was closed; callback optional\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        const placemark = this.props.placemark;\r\n        const visible = placemark.properties['visible'];\r\n        const title = placemark.properties['title'];\r\n        const geometry = placemark.geometry;\r\n        let icon: IconName;\r\n        let info;\r\n        if (geometry.type === 'Point') {\r\n            const position = geometry.coordinates;\r\n            info = ` ${position[0].toFixed(3)}, ${position[1].toFixed(3)}`;\r\n            icon = 'dot';\r\n        } else if (geometry.type === 'LineString') {\r\n            const coordinates = geometry.coordinates;\r\n            info = ` ${coordinates.length} positions`;\r\n            icon = 'slash';\r\n        } else if (geometry.type === 'Polygon') {\r\n            const ring = geometry.coordinates[0] as any;\r\n            info = ` ${ring.length - 1} positions`;\r\n            icon = isBox(geometry) ? 'widget' : 'polygon-filter';\r\n        }\r\n\r\n\r\n        return (\r\n            <div ref={this.placemarkItemRef} style={PlacemarkItem.DIV_STYLE}>\r\n                <Icon style={{marginRight: '4px'}} icon={visible ? 'eye-open': 'eye-off'} />\r\n                <Checkbox\r\n                    style={PlacemarkItem.CHECK_STYLE}\r\n                    checked={isBoolean(visible) ? visible : true}\r\n                    onChange={this.handleVisibilityChanged} />\r\n                <div onDoubleClick={this.handleDoubleClick} style={PlacemarkItem.LABEL_STYLE}>\r\n                    <span style={PlacemarkItem.ICON_STYLE}><Icon icon={icon}/></span>\r\n                    <span style={PlacemarkItem.NAME_STYLE}>{title}</span>\r\n                    <span style={PlacemarkItem.INFO_STYLE}>{info}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { connect, Dispatch } from 'react-redux';\r\nimport { AnchorButton, Checkbox, ControlGroup, Icon, InputGroup, Label } from '@blueprintjs/core';\r\n\r\nimport { State } from '../state';\r\nimport * as selectors from '../selectors';\r\nimport * as actions from '../actions';\r\nimport { ViewState } from '../components/ViewState';\r\nimport { NO_ACTIVE_VIEW } from '../messages';\r\n\r\n\r\ninterface IViewPanelDispatch {\r\n    dispatch: Dispatch<State>;\r\n}\r\n\r\ninterface IViewPanelProps {\r\n    activeView: ViewState<any> | null;\r\n    activeViewId: string | null;\r\n    lastBaseMapId: string;\r\n    showLayerTextOverlay: boolean;\r\n}\r\n\r\nfunction mapStateToProps(state: State): IViewPanelProps {\r\n    return {\r\n        activeView: selectors.activeViewSelector(state),\r\n        activeViewId: selectors.activeViewIdSelector(state),\r\n        lastBaseMapId: state.session.lastBaseMapId,\r\n        showLayerTextOverlay: state.session.showLayerTextOverlay,\r\n    };\r\n}\r\n\r\n/**\r\n * The LayersPanel is used to select and browse available layers.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nclass ViewPanel extends React.Component<IViewPanelProps & IViewPanelDispatch, null> {\r\n\r\n    private static ACTION_ITEM_STYLE = {margin: '0.1em 0em 2em 0em'};\r\n    private static PROPERTY_ITEM_STYLE = {margin: '0.1em 0em 0.6em 0em'};\r\n    private static PROPERTY_ITEM_CONTROL_GROUP_STYLE = {display: 'flex', alignItems: 'center'};\r\n    private static PROPERTY_ITEM_CONTROL_GROUP_MEMBER_STYLE = {marginBlock: 0};\r\n\r\n    constructor(props: IViewPanelProps & IViewPanelDispatch) {\r\n        super(props);\r\n        this.onViewModeChange = this.onViewModeChange.bind(this);\r\n        this.onAddWorldView = this.onAddWorldView.bind(this);\r\n        this.onShowLayerTextOverlayChange = this.onShowLayerTextOverlayChange.bind(this);\r\n    }\r\n\r\n    onViewModeChange(ev: any) {\r\n        this.props.dispatch(actions.setViewMode(this.props.activeViewId, ev.target.value));\r\n    }\r\n\r\n    onShowLayerTextOverlayChange(ev) {\r\n        const showLayerTextOverlay = ev.target.checked;\r\n        this.props.dispatch(actions.updateSessionState({showLayerTextOverlay}));\r\n    }\r\n\r\n    onAddWorldView() {\r\n        this.props.dispatch(actions.addWorldView(this.props.activeViewId, this.props.lastBaseMapId));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: '0.2em 0.2em 0.2em 0.2em'}}>\r\n                <AnchorButton icon=\"globe\"\r\n                              style={ViewPanel.ACTION_ITEM_STYLE}\r\n                              onClick={this.onAddWorldView}>New World View</AnchorButton>\r\n                {this.renderActiveViewPanel()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderActiveViewPanel() {\r\n\r\n        const activeView = this.props.activeView;\r\n        if (!activeView) {\r\n            return NO_ACTIVE_VIEW;\r\n        }\r\n\r\n        // TODO (forman): make title field editable\r\n        const titleField = (\r\n            <Label style={ViewPanel.PROPERTY_ITEM_STYLE}>\r\n                Active view:\r\n                <ControlGroup style={ViewPanel.PROPERTY_ITEM_CONTROL_GROUP_STYLE}>\r\n                    <Icon icon={activeView.icon}\r\n                          style={ViewPanel.PROPERTY_ITEM_CONTROL_GROUP_MEMBER_STYLE}/>\r\n                    <InputGroup\r\n                        style={ViewPanel.PROPERTY_ITEM_CONTROL_GROUP_MEMBER_STYLE}\r\n                        type=\"text\"\r\n                        value={activeView.title}\r\n                        dir=\"auto\"\r\n                        disabled={true}\r\n                    />\r\n                </ControlGroup>\r\n            </Label>\r\n        );\r\n\r\n        if (activeView.type === 'world') {\r\n\r\n            return (\r\n                <div>\r\n                    {titleField}\r\n\r\n                    <Checkbox label=\"Show layer text overlay\"\r\n                              style={ViewPanel.PROPERTY_ITEM_STYLE}\r\n                              checked={this.props.showLayerTextOverlay}\r\n                              onChange={this.onShowLayerTextOverlayChange}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            return titleField;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ViewPanel);\r\n","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { AnchorButton, ButtonGroup, Icon, Intent, ProgressBar, Card } from '@blueprintjs/core';\r\nimport { State, TaskState } from '../state';\r\nimport * as actions from '../actions';\r\nimport {\r\n    getJobFailureIconName,\r\n    getJobFailureIntentName,\r\n    getJobFailureTitle,\r\n    JobFailure,\r\n    JobStatusEnum\r\n} from '../webapi';\r\n\r\ninterface ITaskComponentProps {\r\n    task: TaskState;\r\n    jobId: string;\r\n\r\n    onCancelJob(number): void;\r\n\r\n    onRemoveJob(number): void;\r\n}\r\n\r\nfunction mapStateToProps(state: State, ownProps: ITaskComponentProps): ITaskComponentProps {\r\n    return ownProps;\r\n}\r\n\r\nclass TaskComponent extends React.Component<DispatchProp<State> & ITaskComponentProps, null> {\r\n    static readonly FLEX_ROW_STYLE: CSSProperties = {display: 'flex', flexFlow: 'row nowrap', width: '100%'};\r\n    static readonly PROGRESS_STYLE: CSSProperties = {\r\n        flex: '3 1 auto',\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        justifyContent: 'center',\r\n        paddingRight: 10\r\n    };\r\n\r\n    constructor(props: ITaskComponentProps) {\r\n        super(props);\r\n        this.handleShowDetails = this.handleShowDetails.bind(this);\r\n    }\r\n\r\n    handleShowDetails() {\r\n        this.props.dispatch(actions.showJobFailureDetails(this.props.task.title, this.props.task.failure));\r\n    }\r\n\r\n    private static isRunning(taskState: TaskState): boolean {\r\n        return taskState.status === JobStatusEnum.NEW ||\r\n               taskState.status === JobStatusEnum.SUBMITTED ||\r\n               taskState.status === JobStatusEnum.IN_PROGRESS;\r\n    }\r\n\r\n    private static isMakingProgress(taskState: TaskState): boolean {\r\n        return taskState.status === JobStatusEnum.IN_PROGRESS && !!taskState.progress;\r\n    }\r\n\r\n    private static renderIcon(jobFailure: JobFailure) {\r\n        const icon = getJobFailureIconName(jobFailure);\r\n        const intent = getJobFailureIntentName(jobFailure);\r\n        return (\r\n            <Icon icon={icon} intent={intent} style={{paddingRight: '0.4em'}}/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const taskState = this.props.task;\r\n        const jobId = this.props.jobId;\r\n\r\n        let title = (<p>{taskState.title || `Task #${jobId}`}:</p>);\r\n        let body = null;\r\n\r\n        if (TaskComponent.isRunning(taskState)) {\r\n            if (TaskComponent.isMakingProgress(taskState)) {\r\n                // cancel is only possible, if we have a progress monitor\r\n                let progressValue = 0;\r\n                if (taskState.progress.total > 0 && taskState.progress.worked > 0) {\r\n                    progressValue = taskState.progress.worked / taskState.progress.total;\r\n                }\r\n                const progressBar = (<ProgressBar intent={Intent.SUCCESS} value={progressValue}/>);\r\n                const cancelJob = () => this.props.onCancelJob(jobId);\r\n                const cancelButton = (<AnchorButton type=\"button\" onClick={cancelJob} text=\"Cancel\"/>);\r\n\r\n                const cancelableProgress = (\r\n                    <div style={TaskComponent.FLEX_ROW_STYLE}>\r\n                        <div style={TaskComponent.PROGRESS_STYLE}>{progressBar}</div>\r\n                        <div style={{flex: '0 1 auto'}}>{cancelButton}</div>\r\n                    </div>\r\n                );\r\n\r\n                let progressMag = null;\r\n                if (taskState.progress && taskState.progress.message) {\r\n                    progressMag = (<div className=\"bp3-text-muted\">{taskState.progress.message}</div>);\r\n                }\r\n                body = (<div>{cancelableProgress}{progressMag}</div>);\r\n            } else {\r\n                body = (<ProgressBar/>);\r\n            }\r\n        } else if (taskState.status === JobStatusEnum.CANCELLED || taskState.status === JobStatusEnum.FAILED) {\r\n            const removeJob = () => this.props.onRemoveJob(jobId);\r\n            let detailsButton;\r\n            let message;\r\n            if (taskState.status === JobStatusEnum.CANCELLED) {\r\n                message = <div>{TaskComponent.renderIcon(taskState.failure)}Task has been cancelled.</div>\r\n            } else {\r\n                detailsButton = (<AnchorButton onClick={this.handleShowDetails}>Details</AnchorButton>);\r\n                message = (\r\n                    <div>{TaskComponent.renderIcon(taskState.failure)}{getJobFailureTitle(taskState.failure)}<br/>\r\n                        <div className=\"bp3-text-muted\" style={{paddingTop: '0.4em'}}>{taskState.failure.message}</div>\r\n                    </div>\r\n                );\r\n            }\r\n            body = (\r\n                <div>\r\n                    <ButtonGroup className=\"bp3-minimal\" style={{float: 'right'}}>\r\n                        {detailsButton}\r\n                        <AnchorButton icon=\"cross\" onClick={removeJob}/>\r\n                    </ButtonGroup>\r\n                    {message}\r\n                </div>\r\n            );\r\n        }\r\n        return (<Card>{title}{body}</Card>);\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TaskComponent);\r\n","import * as React from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { State, TaskState } from '../state';\r\nimport { JobStatusEnum } from '../webapi';\r\nimport * as actions from '../actions';\r\nimport { Card } from '@blueprintjs/core';\r\nimport { ScrollablePanelContent } from '../components/ScrollableContent';\r\nimport TaskComponent from './TaskComponent';\r\n\r\ninterface ITaskPanelProps {\r\n    tasks: { [jobId: number]: TaskState };\r\n}\r\n\r\ninterface ITaskPanelDispatch {\r\n    cancelJob(number): void;\r\n\r\n    removeJob(number): void;\r\n}\r\n\r\nfunction mapStateToProps(state: State): ITaskPanelProps {\r\n    return {\r\n        tasks: state.communication.tasks\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    cancelJob: actions.cancelJob,\r\n    removeJob: actions.removeTaskState\r\n};\r\n\r\n/**\r\n * The TasksPanel is used display all tasks originating from cate desktop,\r\n * this includes progress and error messages.\r\n *\r\n * @author Marco Zuehlke\r\n */\r\nclass TasksPanel extends React.Component<ITaskPanelProps & ITaskPanelDispatch & DispatchProp<State>, null> {\r\n\r\n    render() {\r\n        const tasks: { [jobId: number]: TaskState } = this.props.tasks;\r\n\r\n        const taskComponents = [];\r\n        for (let jobId in tasks) {\r\n            if (tasks[jobId].status !== JobStatusEnum.DONE) {\r\n                taskComponents.push(<TaskComponent\r\n                    key={jobId}\r\n                    jobId={jobId}\r\n                    task={tasks[jobId]}\r\n                    onRemoveJob={this.props.removeJob}\r\n                    onCancelJob={this.props.cancelJob}\r\n                />);\r\n            }\r\n        }\r\n        if (taskComponents.length) {\r\n            return <ScrollablePanelContent>\r\n                {taskComponents}\r\n            </ScrollablePanelContent>;\r\n        } else {\r\n            return <Card>\r\n                <p><strong>There are currently no active tasks.</strong></p>\r\n            </Card>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksPanel as any);\r\n","import * as React from 'react';\r\n\r\nexport interface TermsAndConditionsProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport function TermsAndConditions({className, style}: TermsAndConditionsProps) {\r\n    return (\r\n        <a\r\n            className={className}\r\n            style={style}\r\n            href=\"https://climate.esa.int/en/terms-and-conditions/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            Terms & Conditions\r\n        </a>\r\n    );\r\n}\r\n","import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Intent, Tag } from '@blueprintjs/core';\nimport { CATE_APP_VERSION } from '../../version';\nimport { State } from '../state';\n\n\ninterface IVersionTagsOwnProps {\n    minimal?: boolean;\n}\n\ninterface IVersionTagsProps extends IVersionTagsOwnProps {\n    uiVersion: string;\n    apiVersion: string | null;\n}\n\nfunction mapStateToProps(state: State, ownProps: IVersionTagsOwnProps): IVersionTagsProps {\n    let serviceInfo = state.communication.webAPIServiceInfo;\n    return {\n        uiVersion: CATE_APP_VERSION,\n        apiVersion: serviceInfo ? serviceInfo.version : null,\n        minimal: ownProps.minimal,\n    };\n}\n\nconst VersionTags: React.FC<IVersionTagsProps> = ({\n                                                      uiVersion,\n                                                      apiVersion,\n                                                      minimal,\n                                                  }) => {\n    return (\n        <div>\n            <VersionTag\n                label=\"Cate UI\"\n                version={uiVersion}\n                minimal={minimal}\n            />\n            {apiVersion &&\n             <>\n                 &nbsp;\n                 <VersionTag\n                     label=\"Cate API\"\n                     version={apiVersion}\n                     minimal={minimal}\n                 />\n             </>}\n        </div>\n    );\n}\n\nexport default connect(mapStateToProps)(VersionTags);\n\n\ninterface IVersionTagProps {\n    label: string;\n    version: string;\n    minimal?: boolean;\n}\n\n\nconst VersionTag: React.FC<IVersionTagProps> = (\n    {\n        label,\n        version,\n        minimal\n    }\n) => {\n    const isDevVersion = version.includes('dev');\n    const intent = isDevVersion ? Intent.WARNING : Intent.NONE;\n    return (\n        <Tag\n            intent={intent}\n            round={true}\n            minimal={minimal}\n        >\n            {label}&nbsp;{version}\n        </Tag>\n    );\n}\n\n","// IMPORTANT: Any changes of CATE_APP_VERSION must be synchronized\n// with the version field in \"../package.json\".\n//\nexport const CATE_APP_VERSION = \"4.0.0-dev.5\";\n\n","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport {\r\n    Icon,\r\n    IconName,\r\n    Intent,\r\n    Popover,\r\n    PopoverInteractionKind,\r\n    Position,\r\n    ProgressBar,\r\n    Tooltip\r\n} from '@blueprintjs/core';\r\n\r\nimport { TermsAndConditions } from '../components/TermsAndConditions';\r\nimport { GeographicPosition, State, TaskState, WebAPIStatus } from '../state';\r\nimport * as selectors from '../selectors';\r\nimport * as actions from '../actions';\r\nimport { JobStatusEnum } from '../webapi';\r\nimport TaskComponent from './TaskComponent';\r\nimport VersionTags from './VersionTags';\r\n\r\n\r\ninterface IStatusBarProps {\r\n    webAPIStatus: WebAPIStatus | null;\r\n    webAPIServiceURL: string;\r\n    tasks: { [jobId: number]: TaskState };\r\n    globePosition: GeographicPosition | null;\r\n}\r\n\r\ninterface IStatusBarDispatch {\r\n    cancelJob(number): void;\r\n\r\n    removeJob(number): void;\r\n}\r\n\r\nfunction mapStateToProps(state: State): IStatusBarProps {\r\n    return {\r\n        webAPIStatus: state.communication.webAPIStatus,\r\n        webAPIServiceURL: state.communication.webAPIServiceURL,\r\n        tasks: state.communication.tasks,\r\n        globePosition: selectors.globeMousePositionSelector(state) || selectors.globeViewPositionSelector(state),\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    cancelJob: actions.cancelJob,\r\n    removeJob: actions.removeTaskState\r\n};\r\n\r\n/**\r\n * The TasksPanel is used display all tasks originating from cate desktop,\r\n * this includes progress and error messages.\r\n */\r\nclass StatusBar extends React.Component<IStatusBarProps & IStatusBarDispatch & DispatchProp<State>, null> {\r\n\r\n    static readonly DIV_STYLE: CSSProperties = {\r\n        flex: 'none',\r\n        display: 'flex',\r\n        flexFlow: 'row nowrap',\r\n        height: '1.5em',\r\n        fontSize: 'small',\r\n        backgroundColor: '#2B95D6',\r\n        overflow: 'hidden',\r\n    };\r\n\r\n    static readonly DIV_MARGIN: CSSProperties = {margin: \"2px 4px 2px 4px\"};\r\n    static readonly DIV_MESSAGE_STYLE: CSSProperties = {flex: '60 1 auto', ...StatusBar.DIV_MARGIN};\r\n    static readonly DIV_TAC_STYLE: CSSProperties = {flex: '0 1 auto', ...StatusBar.DIV_MARGIN};\r\n    static readonly DIV_TASKS_STYLE: CSSProperties = {flex: '20 1 auto', ...StatusBar.DIV_MARGIN};\r\n    static readonly DIV_CURSOR_STYLE: CSSProperties = {flex: '20 1 auto', ...StatusBar.DIV_MARGIN};\r\n    static readonly DIV_STATUS_STYLE: CSSProperties = {flex: '0 1 auto', margin: \"0px 4px 0px 4px\"};\r\n\r\n    render() {\r\n        // TODO dummy\r\n        const message = 'Ready.';\r\n\r\n        let cursor;\r\n        let position = this.props.globePosition;\r\n        if (position) {\r\n            cursor = `lon=${position.longitude.toFixed(2)}, lat=${position.latitude.toFixed(2)}`\r\n        } else {\r\n            cursor = '';\r\n        }\r\n\r\n        return (\r\n            <div style={StatusBar.DIV_STYLE}>\r\n                <div style={StatusBar.DIV_MESSAGE_STYLE}>{message}</div>\r\n                <div style={StatusBar.DIV_TASKS_STYLE}>{this.renderTasks()}</div>\r\n                <div style={StatusBar.DIV_CURSOR_STYLE}>{cursor}</div>\r\n                <div style={StatusBar.DIV_TAC_STYLE}>{<TermsAndConditions/>}</div>\r\n                <VersionTags minimal={true}/>\r\n                <div style={StatusBar.DIV_STATUS_STYLE}>{this.renderBackendStatus()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderTasks() {\r\n        const tasks: { [jobId: number]: TaskState } = this.props.tasks;\r\n\r\n        let numRunningTasks = 0;\r\n        let numFailedTasks = 0;\r\n        const taskComponents = [];\r\n        for (let jobId in tasks) {\r\n            const task = tasks[jobId];\r\n            let render = false;\r\n            if (task.status === JobStatusEnum.SUBMITTED || task.status === JobStatusEnum.IN_PROGRESS) {\r\n                numRunningTasks++;\r\n                render = true;\r\n            } else if (task.status === JobStatusEnum.CANCELLED || task.status === JobStatusEnum.FAILED) {\r\n                numFailedTasks++;\r\n                render = true;\r\n            }\r\n            if (render) {\r\n                taskComponents.push(\r\n                    <TaskComponent\r\n                        key={jobId}\r\n                        jobId={jobId}\r\n                        task={this.props.tasks[jobId]}\r\n                        onRemoveJob={this.props.removeJob}\r\n                        onCancelJob={this.props.cancelJob}\r\n                    />);\r\n            }\r\n        }\r\n\r\n        if (taskComponents.length > 0) {\r\n            let msg;\r\n            let spinner = null;\r\n            if (numRunningTasks > 0 && numFailedTasks > 0) {\r\n                msg = `${numRunningTasks} running / ${numFailedTasks} failed task(s)`;\r\n            } else if (numRunningTasks > 0) {\r\n                msg = `${numRunningTasks} running task(s)`;\r\n            } else if (numFailedTasks > 0) {\r\n                msg = `${numFailedTasks} failed task(s)`;\r\n            }\r\n            if (numRunningTasks > 0) {\r\n                spinner = (\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexFlow: 'column',\r\n                        justifyContent: 'center',\r\n                        width: '12em',\r\n                        height: '1.5em'\r\n                    }}>\r\n                        <ProgressBar intent={Intent.SUCCESS}/>\r\n                    </div>);\r\n            }\r\n            const tasksInPopover = <div style={{width: '300px'}}>{taskComponents}</div>;\r\n            return (\r\n                <Popover\r\n                    content={tasksInPopover}\r\n                    position={Position.TOP}\r\n                    interactionKind={PopoverInteractionKind.HOVER}>\r\n                    <div style={{display: 'flex', flexFlow: 'row nowrap'}}>\r\n                        {spinner}\r\n                        <div\r\n                            style={{display: 'flex', flexFlow: 'column', justifyContent: 'center', paddingLeft: '5px'}}>\r\n                            {msg}\r\n                        </div>\r\n                    </div>\r\n                </Popover>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private renderBackendStatus() {\r\n        let icon: IconName;\r\n        let tooltipText;\r\n        const mode = ` (${this.props.webAPIServiceURL})`;\r\n        if (this.props.webAPIStatus === 'connecting') {\r\n            icon = 'link';\r\n            tooltipText = 'Connecting' + mode;\r\n        } else if (this.props.webAPIStatus === 'open') {\r\n            icon = 'link';\r\n            tooltipText = 'Connected' + mode;\r\n        } else if (this.props.webAPIStatus === 'error') {\r\n            icon = 'offline';\r\n            tooltipText = 'Error' + mode;\r\n        } else if (this.props.webAPIStatus === 'closed') {\r\n            icon = 'offline';\r\n            tooltipText = 'Closed' + mode;\r\n        } else {\r\n            icon = 'help';\r\n            tooltipText = 'Unknown' + mode;\r\n        }\r\n        return (\r\n            <Tooltip content={tooltipText} hoverOpenDelay={1500} position={Position.LEFT_TOP}>\r\n                <Icon icon={icon} iconSize={12}/>\r\n            </Tooltip>\r\n        );\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusBar as any);\r\n","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\n\r\nexport interface ISubPanelHeaderProps {\r\n    title: string;\r\n    divStyle?: React.CSSProperties;\r\n    titleStyle?: React.CSSProperties;\r\n}\r\n\r\n/**\r\n * A header for a sub-panel component.\r\n *\r\n * @author Hans Permana\r\n */\r\nexport class SubPanelHeader extends React.PureComponent<ISubPanelHeaderProps, any> {\r\n    static readonly DIV_STYLE: CSSProperties = {\r\n        margin: '12px 0 6px 0', padding: '2px 6px', backgroundColor: '#3c5161'\r\n    };\r\n\r\n    static readonly SPAN_STYLE: CSSProperties = {\r\n        color: '#aaafaf', fontSize: '0.9em', fontWeight: 100\r\n    };\r\n\r\n    render() {\r\n        const divStyle = this.props.divStyle ? {...SubPanelHeader.DIV_STYLE, ...this.props.divStyle} : SubPanelHeader.DIV_STYLE;\r\n        const titleStyle = this.props.titleStyle ? {...SubPanelHeader.SPAN_STYLE, ...this.props.titleStyle} : SubPanelHeader.SPAN_STYLE;\r\n        return (\r\n            <div style={divStyle}>\r\n                <span style={titleStyle}>{this.props.title}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { ButtonGroup, Checkbox, HTMLSelect, Icon, Intent, Label, Radio, RadioGroup, Slider } from '@blueprintjs/core';\r\n\r\nimport {\r\n    BaseMapState,\r\n    ColorMapCategoryState,\r\n    ImageLayerState,\r\n    LayerState,\r\n    SPLIT_MODE_LEFT,\r\n    SPLIT_MODE_OFF,\r\n    SPLIT_MODE_RIGHT,\r\n    State,\r\n    VariableImageLayerState,\r\n    VariableState\r\n} from '../state';\r\nimport { ListBox, ListBoxSelectionMode } from '../components/ListBox';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { ContentWithDetailsPanel } from '../components/ContentWithDetailsPanel';\r\nimport LayerSourcesDialog from './LayerSourcesDialog';\r\nimport { AUTO_LAYER_ID, getLayerDisplayName, getLayerTypeIconName } from '../state-util';\r\nimport { ScrollablePanelContent } from '../components/ScrollableContent';\r\nimport { ViewState } from '../components/ViewState';\r\nimport { NO_LAYER_SELECTED, NO_LAYERS_EMPTY_VIEW, NO_LAYERS_NO_VIEW } from '../messages';\r\nimport { SubPanelHeader } from '../components/SubPanelHeader';\r\nimport { ToolButton } from '../components/ToolButton';\r\n\r\n\r\ninterface ILayersPanelProps {\r\n    offlineMode: boolean;\r\n    selectedVariable: VariableState | null;\r\n    activeView: ViewState<any> | null;\r\n    layers: Array<LayerState>;\r\n    selectedLayerId: string | null;\r\n    selectedLayerIndex: number;\r\n    selectedLayer: LayerState | null;\r\n    selectedImageLayer: ImageLayerState | null;\r\n    selectedVariableImageLayer: VariableImageLayerState | null;\r\n    baseMaps: BaseMapState[];\r\n    baseMapId: string;\r\n    layerListHeight: number;\r\n    showLayerDetails: boolean;\r\n    colorMapCategories: Array<ColorMapCategoryState>;\r\n}\r\n\r\nfunction mapStateToProps(state: State): ILayersPanelProps {\r\n    return {\r\n        offlineMode: selectors.offlineModeSelector(state),\r\n        selectedVariable: selectors.selectedVariableSelector(state),\r\n        activeView: selectors.activeViewSelector(state),\r\n        layers: selectors.layersSelector(state),\r\n        selectedLayerId: selectors.selectedLayerIdSelector(state),\r\n        selectedLayerIndex: selectors.selectedLayerIndexSelector(state),\r\n        selectedLayer: selectors.selectedLayerSelector(state),\r\n        selectedImageLayer: selectors.selectedImageLayerSelector(state),\r\n        selectedVariableImageLayer: selectors.selectedVariableImageLayerSelector(state),\r\n        baseMaps: selectors.baseMapsSelector(state),\r\n        baseMapId: selectors.baseMapIdSelector(state),\r\n        layerListHeight: state.session.layerListHeight,\r\n        showLayerDetails: state.session.showLayerDetails,\r\n        colorMapCategories: selectors.colorMapCategoriesSelector(state)\r\n    };\r\n}\r\n\r\n/**\r\n * The LayersPanel is used to select and browse available layers.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nclass LayersPanel extends React.Component<ILayersPanelProps & DispatchProp<State>, null> {\r\n\r\n    static readonly SLIDER_DIV_STYLE_10 = {width: '100%', paddingLeft: '1em', paddingRight: '1em'};\r\n    static readonly LABEL_SPAN_STYLE_100 = {flexBasis: '100px', paddingLeft: '5px'};\r\n    static readonly LAYER_DIV_STYLE = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        height: '100%'\r\n    };\r\n    static readonly LAYER_LABEL_ELEMENT_STYLE = {marginLeft: '0.5em'};\r\n    static readonly LAYER_CHECKBOX_STYLE = {flexGrow: 0, margin: 0};\r\n    static readonly BG_MAP_CONTAINER_STYLE = {display: 'flex', alignItems: 'center', marginTop: 3, marginBottom: 3};\r\n    static readonly BG_MAP_LABEL_STYLE = {flexGrow: 0, marginRight: 3};\r\n    static readonly BG_MAP_VALUE_STYLE = {flexGrow: 1, marginRight: 1, display: 'flex', justifyContent: 'flex-end'};\r\n\r\n    constructor(props: ILayersPanelProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.handleShowDetailsChanged = this.handleShowDetailsChanged.bind(this);\r\n        this.handleListHeightChanged = this.handleListHeightChanged.bind(this);\r\n        this.handleAddLayerButtonClicked = this.handleAddLayerButtonClicked.bind(this);\r\n        this.handleRemoveLayerButtonClicked = this.handleRemoveLayerButtonClicked.bind(this);\r\n        this.handleMoveLayerUpButtonClicked = this.handleMoveLayerUpButtonClicked.bind(this);\r\n        this.handleMoveLayerDownButtonClicked = this.handleMoveLayerDownButtonClicked.bind(this);\r\n        this.handleChangedLayerSelection = this.handleChangedLayerSelection.bind(this);\r\n        this.handleChangedLayerVisibility = this.handleChangedLayerVisibility.bind(this);\r\n        this.handleChangedLayerSplitMode = this.handleChangedLayerSplitMode.bind(this);\r\n        this.handleChangedBaseMap = this.handleChangedBaseMap.bind(this);\r\n        this.renderLayerItem = this.renderLayerItem.bind(this);\r\n    }\r\n\r\n    private static getLayerItemKey(layer: LayerState) {\r\n        return layer.id;\r\n    }\r\n\r\n    private static stopPropagation(event) {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    private static capitalizeFirstLetter(string: string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (!this.props.colorMapCategories) {\r\n            this.props.dispatch(actions.loadColorMaps() as any);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let activeView = this.props.activeView;\r\n        if (!activeView || activeView.type !== 'world') {\r\n            return NO_LAYERS_NO_VIEW;\r\n        }\r\n\r\n        return (\r\n            <div style={{width: '100%'}}>\r\n                <ContentWithDetailsPanel showDetails={this.props.showLayerDetails}\r\n                                         onShowDetailsChange={this.handleShowDetailsChanged}\r\n                                         isSplitPanel={true}\r\n                                         contentHeight={this.props.layerListHeight}\r\n                                         onContentHeightChange={this.handleListHeightChanged}\r\n                                         actionComponent={this.renderActionButtonRow()}>\r\n                    <div>\r\n                        {this.renderBackgroundMapSelector()}\r\n                        {this.renderLayersList()}\r\n                    </div>\r\n                    {this.renderLayerDetails()}\r\n                </ContentWithDetailsPanel>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleShowDetailsChanged(value: boolean) {\r\n        this.props.dispatch(actions.setSessionProperty('showLayerDetails', value));\r\n    }\r\n\r\n    private handleListHeightChanged(value: number) {\r\n        this.props.dispatch(actions.setSessionProperty('layerListHeight', value));\r\n    }\r\n\r\n    private handleAddLayerButtonClicked() {\r\n        this.props.dispatch(actions.showDialog('layerSourcesDialog'));\r\n    }\r\n\r\n    private handleRemoveLayerButtonClicked() {\r\n        this.props.dispatch(actions.removeLayer(this.props.activeView.id, this.props.selectedLayerId));\r\n    }\r\n\r\n    private handleMoveLayerUpButtonClicked() {\r\n        this.props.dispatch(actions.moveLayerUp(this.props.activeView.id, this.props.selectedLayerId));\r\n    }\r\n\r\n    private handleMoveLayerDownButtonClicked() {\r\n        this.props.dispatch(actions.moveLayerDown(this.props.activeView.id, this.props.selectedLayerId));\r\n    }\r\n\r\n    private handleChangedLayerVisibility(layer: LayerState, visible: boolean) {\r\n        this.props.dispatch(actions.updateLayer(this.props.activeView.id, layer, {visible}) as any);\r\n    }\r\n\r\n    private handleChangedLayerSplitMode(event) {\r\n        this.props.dispatch(actions.setLayerSplitMode(this.props.activeView.id,\r\n                                                      this.props.selectedLayerId,\r\n                                                      event.target.value));\r\n    }\r\n\r\n    private handleChangedLayerSelection(newSelection: string[]) {\r\n        const selectedLayerId = newSelection.length ? newSelection[0] : null;\r\n        this.props.dispatch(actions.setSelectedLayerId(this.props.activeView.id, selectedLayerId));\r\n    }\r\n\r\n    private handleChangedBaseMap(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.props.dispatch(actions.setBaseMap(this.props.activeView.id, event.target.value) as any);\r\n    }\r\n\r\n    private renderLayerItem(layer: LayerState) {\r\n        return (\r\n            <div style={LayersPanel.LAYER_DIV_STYLE}>\r\n                <Icon style={{marginRight: '4px'}} icon={layer.visible ? 'eye-open': 'eye-off'} />\r\n                <Checkbox\r\n                    style={LayersPanel.LAYER_CHECKBOX_STYLE}\r\n                    checked={layer.visible}\r\n                    onClick={LayersPanel.stopPropagation}\r\n                    onChange={(event: any) => {\r\n                        this.handleChangedLayerVisibility(layer, event.target.checked)\r\n                    }}/>\r\n                <Icon style={LayersPanel.LAYER_LABEL_ELEMENT_STYLE} icon={getLayerTypeIconName(layer)} iconSize={12}/>\r\n                <span style={LayersPanel.LAYER_LABEL_ELEMENT_STYLE}>{getLayerDisplayName(layer)}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderActionButtonRow() {\r\n        const layerCount = this.props.layers ? this.props.layers.length : 0;\r\n        const selectedLayerIndex = this.props.selectedLayerIndex;\r\n        const selectedLayer = this.props.selectedLayer;\r\n        const canRemoveLayer = selectedLayer && selectedLayer.id !== AUTO_LAYER_ID;\r\n        const canMoveLayerUp = selectedLayerIndex > 0;\r\n        const canMoveLayerDown = selectedLayerIndex >= 0 && selectedLayerIndex < layerCount - 1;\r\n        return (\r\n            <ButtonGroup>\r\n                <ToolButton\r\n                    tooltipContent=\"Add a new layer\"\r\n                    intent={Intent.PRIMARY}\r\n                    onClick={this.handleAddLayerButtonClicked}\r\n                    icon=\"add\"\r\n                    tooltipPosition={'top'}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"Remove selected layer\"\r\n                    disabled={!canRemoveLayer}\r\n                    onClick={this.handleRemoveLayerButtonClicked}\r\n                    icon=\"remove\"\r\n                    tooltipPosition={'top'}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"Move layer up\"\r\n                    disabled={!canMoveLayerUp}\r\n                    onClick={this.handleMoveLayerUpButtonClicked}\r\n                    icon=\"arrow-up\"\r\n                    tooltipPosition={'top'}\r\n                />\r\n                <ToolButton\r\n                    tooltipContent=\"Move layer down\"\r\n                    disabled={!canMoveLayerDown}\r\n                    onClick={this.handleMoveLayerDownButtonClicked}\r\n                    icon=\"arrow-down\"\r\n                    tooltipPosition={'top'}\r\n                />\r\n                <LayerSourcesDialog/>\r\n            </ButtonGroup>\r\n        );\r\n    }\r\n\r\n    private renderBackgroundMapSelector() {\r\n        return (\r\n            <div style={LayersPanel.BG_MAP_CONTAINER_STYLE}>\r\n                <div style={LayersPanel.BG_MAP_LABEL_STYLE}>Base map:</div>\r\n                <div style={LayersPanel.BG_MAP_VALUE_STYLE}>\r\n                    <HTMLSelect\r\n                        disabled={this.props.offlineMode}\r\n                        value={this.props.offlineMode ? 'natural_offline' : this.props.baseMapId}\r\n                        onChange={this.handleChangedBaseMap}\r\n                    >\r\n                        {this.props.baseMaps.map(bgMap => (\r\n                            <option key={bgMap.id} value={bgMap.id}>\r\n                                {bgMap.title}\r\n                            </option>)\r\n                        )}\r\n                    </HTMLSelect>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderLayersList() {\r\n        const layers = this.props.layers;\r\n        if (!layers || !layers.length) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ScrollablePanelContent>\r\n                <ListBox\r\n                    items={layers}\r\n                    getItemKey={LayersPanel.getLayerItemKey}\r\n                    renderItem={this.renderLayerItem}\r\n                    selectionMode={ListBoxSelectionMode.SINGLE}\r\n                    selection={this.props.selectedLayerId}\r\n                    onSelection={this.handleChangedLayerSelection}\r\n                />\r\n            </ScrollablePanelContent>\r\n        );\r\n    }\r\n\r\n    private renderLayerDetails() {\r\n        const layers = this.props.layers;\r\n        if (!layers || !layers.length) {\r\n            return NO_LAYERS_EMPTY_VIEW;\r\n        }\r\n\r\n        if (!this.props.selectedLayer) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Label style={{height: '20px'}}> </Label>\r\n                    {NO_LAYER_SELECTED}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        if (this.props.selectedImageLayer) {\r\n            return (\r\n                <div>\r\n                    {this.renderDataSelectionSection()}\r\n                    {this.renderSplitModeSection()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    private renderDataSelectionSection() {\r\n        const layer = this.props.selectedVariableImageLayer;\r\n        const variable = this.props.selectedVariable;\r\n        if (!layer || !variable || variable.numDims <= 2) {\r\n            return null;\r\n        }\r\n\r\n        const handleChangedLayerVarIndex = (i: number, value: number) => {\r\n            const varIndex = layer.varIndex.slice();\r\n            varIndex[i] = value;\r\n            this.props.dispatch(actions.updateLayer(this.props.activeView.id, layer, {varIndex}) as any);\r\n        };\r\n\r\n        const n = variable.numDims - 2;\r\n        const dimensionRows = [];\r\n        for (let i = 0; i < n; i++) {\r\n            const dimension = variable.dimNames[i];\r\n            const max = variable.shape[i] - 1;\r\n            if (max > 0) {\r\n                const value = layer.varIndex[i];\r\n                dimensionRows.push(\r\n                    <Label key={dimension + '_index'} className=\"bp3-inline\" style={{display: 'flex'}}>\r\n                        <span\r\n                            style={LayersPanel.LABEL_SPAN_STYLE_100}>{LayersPanel.capitalizeFirstLetter(dimension) + ' index'}</span>\r\n                        <div style={{\r\n                            ...LayersPanel.SLIDER_DIV_STYLE_10,\r\n                            width: undefined,\r\n                            flex: 'auto 1',\r\n                            margin: 'auto 0'\r\n                        }}>\r\n                            <Slider min={0}\r\n                                    max={max}\r\n                                    stepSize={1}\r\n                                    labelStepSize={max}\r\n                                    value={value}\r\n                                    onChange={(value: number) => handleChangedLayerVarIndex(i, value)}\r\n                            />\r\n                        </div>\r\n                    </Label>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (dimensionRows.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <SubPanelHeader title=\"DATA SELECTION\"/>\r\n                {dimensionRows}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    private renderSplitModeSection() {\r\n        const splitMode = this.props.selectedImageLayer.splitMode || SPLIT_MODE_OFF;\r\n        return (\r\n            <React.Fragment>\r\n                <SubPanelHeader title=\"LAYER SPLIT\"/>\r\n                <RadioGroup\r\n                    key=\"layerSplit\"\r\n                    inline={true}\r\n                    onChange={this.handleChangedLayerSplitMode}\r\n                    selectedValue={splitMode}\r\n                >\r\n                    <Radio label=\"Show left\" value={SPLIT_MODE_LEFT}/>\r\n                    <Radio label=\"Show right\" value={SPLIT_MODE_RIGHT}/>\r\n                    <Radio label=\"Off\" value={SPLIT_MODE_OFF}/>\r\n                </RadioGroup>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LayersPanel);\r\n\r\n","import { Field, FieldType } from './Field';\r\nimport { INumericFieldProps, validateNumber } from './NumericField';\r\nimport { isUndefinedOrNull } from '../../../common/types';\r\n\r\nexport type NumericRange = [number, number];\r\nexport type NumericRangeFieldType = FieldType<NumericRange>;\r\n\r\nexport interface INumericRangeFieldProps extends INumericFieldProps {\r\n}\r\n\r\n/**\r\n * A NumericRangeField is an input field that provides a numeric range of two number values (x1 and x2 properties).\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class NumericRangeField extends Field<INumericRangeFieldProps> {\r\n\r\n    parseValue(textValue: string): NumericRangeFieldType {\r\n        const pair = parseNumericPair(textValue);\r\n        if (!pair) {\r\n            return null;\r\n        }\r\n        const x1 = pair[0];\r\n        const x2 = pair[1];\r\n        if (x2 < x1) {\r\n            return [x2, x1];\r\n        }\r\n        return pair;\r\n    }\r\n\r\n    validateValue(value: NumericRangeFieldType): void {\r\n        super.validateValue(value);\r\n        if (isUndefinedOrNull(value)) {\r\n            if (!this.props.nullable) {\r\n                throw new Error('Numeric range value expected.');\r\n            }\r\n            return;\r\n        }\r\n        validateNumber(value[0], this.props.nullable, this.props.min, this.props.max, this.props.isInt);\r\n        validateNumber(value[1], this.props.nullable, this.props.min, this.props.max, this.props.isInt);\r\n    }\r\n\r\n    formatValue(value: NumericRangeFieldType | null): string {\r\n        if (!value || value.length < 2) {\r\n            return '';\r\n        }\r\n        return `${value[0]}, ${value[1]}`;\r\n    }\r\n}\r\n\r\nexport function parseNumericPair(textValue: string): [number, number] {\r\n    if (!textValue || textValue.trim() === '') {\r\n        return null;\r\n    }\r\n    const pair = textValue.split(',');\r\n    if (pair.length === 2) {\r\n        let x1 = parseFloat(pair[0]);\r\n        let x2 = parseFloat(pair[1]);\r\n        return [x1, x2];\r\n    } else {\r\n        throw new Error('Value must be a pair of numbers.');\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport { ColorState } from 'react-color';\r\nimport SketchPicker from 'react-color/lib/components/sketch/Sketch';\r\nimport {\r\n    AnchorButton,\r\n    Button,\r\n    Colors,\r\n    ControlGroup,\r\n    HTMLSelect,\r\n    Intent,\r\n    Label,\r\n    NumberRange,\r\n    Popover,\r\n    PopoverInteractionKind,\r\n    PopoverPosition,\r\n    Radio,\r\n    RadioGroup,\r\n    RangeSlider,\r\n    Slider,\r\n    Switch,\r\n    Tooltip\r\n} from '@blueprintjs/core';\r\nimport * as Cesium from 'cesium';\r\n\r\nimport { SimpleStyle } from '../../common/geojson-simple-style';\r\nimport * as actions from '../actions';\r\nimport { FieldValue } from '../components/field/Field';\r\nimport { NumericField } from '../components/field/NumericField';\r\nimport { NumericRangeField } from '../components/field/NumericRangeField';\r\nimport { TextField } from '../components/field/TextField';\r\nimport { ListBox, ListBoxSelectionMode } from '../components/ListBox';\r\nimport { SubPanelHeader } from '../components/SubPanelHeader';\r\nimport { ToolButton } from '../components/ToolButton';\r\nimport { ViewState } from '../components/ViewState';\r\nimport { NO_ENTITY_FOR_STYLE, NO_LAYER_FOR_STYLE } from '../messages';\r\nimport * as selectors from '../selectors';\r\nimport {\r\n    ColorMapCategoryState,\r\n    ColorMapState,\r\n    ImageLayerState,\r\n    LayerState,\r\n    Placemark,\r\n    ResourceState,\r\n    ResourceVectorLayerState,\r\n    State,\r\n    STYLE_CONTEXT_ENTITY,\r\n    STYLE_CONTEXT_LAYER,\r\n    VariableImageLayerState,\r\n    VariableState,\r\n    VectorLayerState\r\n} from '../state';\r\nimport { getLayerDisplayName } from '../state-util';\r\n\r\n\r\nfunction getDisplayFractionDigits(min: number, max: number) {\r\n    const n = Math.round(Math.log10(max - min));\r\n    if (n < 0) {\r\n        return 1 - n;\r\n    } else if (n <= 2) {\r\n        return 2;\r\n    } else if (n <= 3) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction formatNumber(x: number, fractionDigits: number) {\r\n    return fractionDigits < 3 ? x.toFixed(fractionDigits) : x.toExponential(1);\r\n}\r\n\r\ninterface IStylesPanelProps {\r\n    selectedResource: ResourceState | null;\r\n    selectedVariable: VariableState | null,\r\n    activeView: ViewState<any> | null;\r\n    layers: Array<LayerState>;\r\n    selectedLayer: LayerState | null;\r\n    selectedImageLayer: ImageLayerState | null;\r\n    selectedVariableImageLayer: VariableImageLayerState | null;\r\n    selectedVectorLayer: VectorLayerState | null;\r\n    selectedResourceVectorLayer: ResourceVectorLayerState | null;\r\n    selectedEntity: Cesium.Entity | null;\r\n    selectedPlacemark: Placemark | null;\r\n    styleContext: 'entity' | 'layer';\r\n    showLayerDetails: boolean;\r\n    colorMapCategories: Array<ColorMapCategoryState>;\r\n    selectedColorMap: ColorMapState | null;\r\n    displayMinMax: [number, number];\r\n    isComputingVariableStatistics: boolean;\r\n    vectorStyle: SimpleStyle;\r\n}\r\n\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        selectedResource: selectors.selectedResourceSelector(state),\r\n        selectedVariable: selectors.selectedVariableSelector(state),\r\n        activeView: selectors.activeViewSelector(state),\r\n        layers: selectors.layersSelector(state),\r\n        selectedLayer: selectors.selectedLayerSelector(state),\r\n        selectedImageLayer: selectors.selectedImageLayerSelector(state),\r\n        selectedVariableImageLayer: selectors.selectedVariableImageLayerSelector(state),\r\n        selectedVectorLayer: selectors.selectedVectorLayerSelector(state),\r\n        selectedResourceVectorLayer: selectors.selectedResourceVectorLayerSelector(state),\r\n        selectedEntity: selectors.selectedEntitySelector(state),\r\n        selectedPlacemark: selectors.selectedPlacemarkSelector(state),\r\n        styleContext: selectors.styleContextSelector(state),\r\n        showLayerDetails: state.session.showLayerDetails,\r\n        colorMapCategories: selectors.colorMapCategoriesSelector(state),\r\n        selectedColorMap: selectors.selectedColorMapSelector(state),\r\n        displayMinMax: selectors.selectedVariableImageLayerDisplayMinMaxSelector(state),\r\n        isComputingVariableStatistics: selectors.isComputingVariableStatistics(state),\r\n        vectorStyle: selectors.vectorStyleSelector(state),\r\n    };\r\n}\r\n\r\nconst DISPLAY_RANGE_STYLE = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'auto auto auto',\r\n    justifyItems: 'stretch',\r\n    alignItems: 'center',\r\n    columnGap: '0.7em'};\r\n\r\nclass StylesPanel extends React.Component<IStylesPanelProps & DispatchProp<State>, null> {\r\n    static readonly SLIDER_DIV_STYLE_05 = {width: '100%', paddingLeft: '0.5em', paddingRight: '0.5em'};\r\n    static readonly SLIDER_DIV_STYLE_10 = {width: '100%', paddingLeft: '1em', paddingRight: '1em'};\r\n    static readonly SLIDER_DIV_STYLE_15 = {width: '100%', paddingLeft: '1.5em', paddingRight: '1.5em'};\r\n\r\n    static readonly LABEL_SPAN_STYLE_100 = {flexBasis: '100px', paddingLeft: '5px'};\r\n\r\n    static readonly LABEL_BOTTOM_MARGIN = {display: 'flex', margin: '0 0 5px'};\r\n\r\n    constructor(props: IStylesPanelProps) {\r\n        super(props);\r\n        this.handleUpdateDisplayStatistics = this.handleUpdateDisplayStatistics.bind(this);\r\n        this.handleChangedDisplayMinMax = this.handleChangedDisplayMinMax.bind(this);\r\n        this.handleChangedDisplayRange = this.handleChangedDisplayRange.bind(this);\r\n        this.handleChangedDisplayAlphaBlend = this.handleChangedDisplayAlphaBlend.bind(this);\r\n        this.handleChangedColorMapName = this.handleChangedColorMapName.bind(this);\r\n        this.handleChangedStyleContext = this.handleChangedStyleContext.bind(this);\r\n        this.handleChangedFillColor = this.handleChangedFillColor.bind(this);\r\n        this.handleChangedFillColorFromPicker = this.handleChangedFillColorFromPicker.bind(this);\r\n        this.handleChangedFillOpacity = this.handleChangedFillOpacity.bind(this);\r\n        this.handleChangedStrokeWidth = this.handleChangedStrokeWidth.bind(this);\r\n        this.handleChangedStrokeColor = this.handleChangedStrokeColor.bind(this);\r\n        this.handleChangedStrokeColorFromPicker = this.handleChangedStrokeColorFromPicker.bind(this);\r\n        this.handleChangedStrokeOpacity = this.handleChangedStrokeOpacity.bind(this);\r\n        this.handleChangedMarkerColor = this.handleChangedMarkerColor.bind(this);\r\n        this.handleChangedMarkerColorFromPicker = this.handleChangedMarkerColorFromPicker.bind(this);\r\n        this.handleChangedMarkerSize = this.handleChangedMarkerSize.bind(this);\r\n        this.handleChangedMarkerSymbol = this.handleChangedMarkerSymbol.bind(this);\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (!this.props.colorMapCategories) {\r\n            this.props.dispatch(actions.loadColorMaps() as any);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderLayerDetails()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    private renderLayerDetails() {\r\n        let detailsPanel;\r\n        if (this.props.styleContext === STYLE_CONTEXT_ENTITY) {\r\n            if (this.props.selectedEntity) {\r\n                detailsPanel = this.renderVectorLayerDetails();\r\n            } else {\r\n                detailsPanel = NO_ENTITY_FOR_STYLE;\r\n            }\r\n        } else /*if (this.props.styleContext === STYLE_CONTEXT_LAYER)*/ {\r\n            if (this.props.selectedVectorLayer) {\r\n                detailsPanel = this.renderVectorLayerDetails();\r\n            } else if (this.props.selectedImageLayer) {\r\n                detailsPanel = this.renderImageLayerDetails();\r\n            } else {\r\n                detailsPanel = NO_LAYER_FOR_STYLE;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div style={{width: '100%'}}>\r\n                {this.renderStyleContext()}\r\n                {detailsPanel}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderImageLayerDetails() {\r\n        return (\r\n            <React.Fragment>\r\n                <SubPanelHeader title=\"COLOUR MAPPING\"/>\r\n                {this.renderFormAlphaBlending()}\r\n                {this.renderFormDisplayMinMax()}\r\n                {this.renderFormDisplayColorBar()}\r\n                <SubPanelHeader title=\"IMAGE ENHANCEMENTS\"/>\r\n                {this.renderFormImageEnhancement('opacity', 'Opacity', 0., 1.)}\r\n                {this.renderFormImageEnhancement('brightness', 'Brightness', 0., 2.)}\r\n                {this.renderFormImageEnhancement('contrast', 'Contrast', 0., 2.)}\r\n                {this.renderFormImageEnhancement('hue', 'Hue', 0., 1.)}\r\n                {this.renderFormImageEnhancement('saturation', 'Saturation', 0., 2.)}\r\n                {this.renderFormImageEnhancement('gamma', 'Gamma', 1., 2.)}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    private renderFormAlphaBlending() {\r\n        const layer = this.props.selectedVariableImageLayer;\r\n        if (!layer) {\r\n            return null;\r\n        }\r\n        return (\r\n            <Switch key=\"alpha\"\r\n                    checked={layer.alphaBlending}\r\n                    label=\"Alpha blending\"\r\n                    onChange={this.handleChangedDisplayAlphaBlend}/>\r\n        );\r\n    }\r\n\r\n    private renderFormDisplayMinMax() {\r\n        const layer = this.props.selectedVariableImageLayer || this.props.selectedResourceVectorLayer;\r\n        if (!layer) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{width: '100%', marginBottom: '20px'}}>\r\n                <Label key=\"drange\" style={{display: 'flex'}}>\r\n                    <span style={{...StylesPanel.LABEL_SPAN_STYLE_100, margin: 'auto 0'}}>Display range</span>\r\n                    <div style={DISPLAY_RANGE_STYLE}>\r\n                        <NumericRangeField value={this.props.displayMinMax}\r\n                                           style={{flex: 'auto'}}\r\n                                           onChange={this.handleChangedDisplayMinMax}\r\n                                           uncontrolled={true}\r\n                        />\r\n                        <ToolButton\r\n                            tooltipContent=\"Compute valid min/max\"\r\n                            intent={Intent.PRIMARY}\r\n                            icon=\"arrows-horizontal\"\r\n                            tooltipPosition={'top'}\r\n                            style={{flexGrow: 0, margin: 0}}\r\n                            disabled={this.props.isComputingVariableStatistics}\r\n                            onClick={this.handleUpdateDisplayStatistics}\r\n                        />\r\n                    </div>\r\n                </Label>\r\n                <div style={StylesPanel.SLIDER_DIV_STYLE_15}>\r\n                    {this.renderDisplayRangeSlider()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderFormDisplayColorBar() {\r\n        const layer = this.props.selectedVariableImageLayer;\r\n        if (!layer) {\r\n            return null;\r\n        }\r\n\r\n        let colorBarButton;\r\n        if (this.props.colorMapCategories) {\r\n            const popoverContent = this.renderColorBarBox(layer);\r\n            colorBarButton = (\r\n                <Popover content={popoverContent}\r\n                         interactionKind={PopoverInteractionKind.CLICK}\r\n                         popoverClassName=\"bp3-popover-content-sizing cate-color-bars-popover\"\r\n                         position={PopoverPosition.LEFT}>\r\n                    {this.renderColorBarButton(layer, false)}\r\n                </Popover>\r\n            );\r\n        } else {\r\n            colorBarButton = this.renderColorBarButton(layer, true);\r\n        }\r\n\r\n        return (\r\n            <Label key=\"cmap\" className=\"bp3-inline\" style={{display: 'flex'}}>\r\n                <span style={StylesPanel.LABEL_SPAN_STYLE_100}>Colour bar</span>\r\n                {colorBarButton}\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderFormImageEnhancement(key: string, label: string, min: number, max: number) {\r\n        const layer = this.props.selectedVariableImageLayer || this.props.selectedResourceVectorLayer;\r\n        if (!layer || (layer === this.props.selectedResourceVectorLayer && key !== 'opacity')) {\r\n            return null;\r\n        }\r\n\r\n        const handleChangedImageEnhancement = (name: string, value: number) => {\r\n            this.props.dispatch(actions.updateLayer(this.props.activeView.id, layer, {[name]: value}) as any);\r\n        };\r\n\r\n        return (\r\n            <Label key={key} style={{display: 'flex'}}>\r\n                <span style={StylesPanel.LABEL_SPAN_STYLE_100}>{label}</span>\r\n                <div style={{...StylesPanel.SLIDER_DIV_STYLE_10, width: undefined, flex: 'auto 1', margin: 'auto 0'}}>\r\n                    <Slider min={min}\r\n                            max={max}\r\n                            stepSize={(max - min) / 10.}\r\n                            labelRenderer={false}\r\n                            value={layer[key]}\r\n                            onChange={(value: number) => handleChangedImageEnhancement(key, value)}/>\r\n                </div>\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderVectorLayerDetails() {\r\n        return (\r\n            <React.Fragment>\r\n                <SubPanelHeader title=\"FILL\"/>\r\n                {this.renderFillColor()}\r\n                {this.renderFillOpacity()}\r\n                <SubPanelHeader title=\"STROKE\"/>\r\n                {this.renderStrokeWidth()}\r\n                {this.renderStrokeColor()}\r\n                {this.renderStrokeOpacity()}\r\n                <SubPanelHeader title=\"MARKER\"/>\r\n                {this.renderMarkerColor()}\r\n                {this.renderMarkerSize()}\r\n                {this.renderMarkerSymbol()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    private renderStyleContext() {\r\n        const selectedEntity = this.props.selectedEntity;\r\n        const selectedPlacemark = this.props.selectedPlacemark;\r\n        const selectedLayer = this.props.selectedLayer;\r\n\r\n        let entityDisplayName;\r\n        let layerDisplayName;\r\n\r\n        if (selectedPlacemark) {\r\n            const title = selectedPlacemark.properties && selectedPlacemark.properties.title;\r\n            if (title && title !== '') {\r\n                entityDisplayName = `My place ${title}`;\r\n            } else {\r\n                entityDisplayName = 'Selected place';\r\n            }\r\n        } else if (selectedEntity) {\r\n            entityDisplayName = 'Selected entity';\r\n        } else {\r\n            entityDisplayName = 'Selected entity (none)';\r\n        }\r\n\r\n        if (selectedLayer) {\r\n            layerDisplayName = `Layer ${getLayerDisplayName(selectedLayer)}`;\r\n        } else {\r\n            layerDisplayName = 'Selected layer';\r\n        }\r\n\r\n        return (\r\n            <RadioGroup\r\n                key=\"styleContext\"\r\n                label=\"Style context\"\r\n                onChange={this.handleChangedStyleContext}\r\n                selectedValue={this.props.styleContext}\r\n            >\r\n                <Radio label={entityDisplayName} value={STYLE_CONTEXT_ENTITY}/>\r\n                <Radio label={layerDisplayName} value={STYLE_CONTEXT_LAYER}/>\r\n            </RadioGroup>\r\n        );\r\n    }\r\n\r\n    private renderFillColor() {\r\n        return (\r\n            <Label className=\"bp3-inline\" style={StylesPanel.LABEL_BOTTOM_MARGIN}>\r\n                <span style={StylesPanel.LABEL_SPAN_STYLE_100}>Colour</span>\r\n                <ControlGroup style={{lineHeight: '0', flex: 'auto 1'}}>\r\n                    <TextField value={this.props.vectorStyle.fill}\r\n                               style={{flex: 'auto', fontFamily: 'courier', textAlign: 'right', paddingRight: '40px'}}\r\n                               size={8}\r\n                               uncontrolled={true}\r\n                               onChange={this.handleChangedFillColor}\r\n                    />\r\n                    <Popover\r\n                        interactionKind={PopoverInteractionKind.CLICK}\r\n                        popoverClassName=\"bp3-minimal\"\r\n                        position={PopoverPosition.LEFT}\r\n                        className=\"bp3-input-action\"\r\n                    >\r\n                        <Button style={{backgroundColor: this.props.vectorStyle.fill}}/>\r\n                        <SketchPicker\r\n                            color={this.props.vectorStyle.fill}\r\n                            onChange={this.handleChangedFillColorFromPicker}\r\n                            disableAlpha={true}\r\n                        />\r\n                    </Popover>\r\n                </ControlGroup>\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderFillOpacity() {\r\n        return (\r\n            <Label className=\"bp3-inline\" style={StylesPanel.LABEL_BOTTOM_MARGIN}>\r\n                <span style={StylesPanel.LABEL_SPAN_STYLE_100}>Opacity</span>\r\n                <div style={{...StylesPanel.SLIDER_DIV_STYLE_05, width: undefined, flex: 'auto 1', margin: 'auto 0'}}>\r\n                    <Slider min={0.0}\r\n                            max={1.0}\r\n                            stepSize={0.05}\r\n                            labelRenderer={false}\r\n                            value={this.props.vectorStyle.fillOpacity}\r\n                            onChange={this.handleChangedFillOpacity}\r\n                    />\r\n                </div>\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderStrokeWidth() {\r\n        return (\r\n            <Label className=\"bp3-inline\" style={StylesPanel.LABEL_BOTTOM_MARGIN}>\r\n                <span style={StylesPanel.LABEL_SPAN_STYLE_100}>Width</span>\r\n                <NumericField value={this.props.vectorStyle.strokeWidth}\r\n                              style={{flex: 'auto 1', fontFamily: 'courier'}}\r\n                              size={8}\r\n                              min={0}\r\n                              uncontrolled={true}\r\n                              onChange={this.handleChangedStrokeWidth}\r\n                />\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderStrokeColor() {\r\n        return (\r\n            <Label className=\"bp3-inline\" style={StylesPanel.LABEL_BOTTOM_MARGIN}>\r\n                <span style={StylesPanel.LABEL_SPAN_STYLE_100}>Colour</span>\r\n                <ControlGroup style={{lineHeight: '0', flex: 'auto 1'}}>\r\n                    <TextField value={this.props.vectorStyle.stroke}\r\n                               style={{flex: 'auto', fontFamily: 'courier', textAlign: 'right', paddingRight: '40px'}}\r\n                               size={8}\r\n                               uncontrolled={true}\r\n                               onChange={this.handleChangedStrokeColor}\r\n                    />\r\n                    <Popover\r\n                        interactionKind={PopoverInteractionKind.CLICK}\r\n                        popoverClassName=\"bp3-minimal\"\r\n                        position={PopoverPosition.LEFT}\r\n                        className=\"bp3-input-action\"\r\n                    >\r\n                        <Button style={{backgroundColor: this.props.vectorStyle.stroke}}/>\r\n                        <SketchPicker\r\n                            color={this.props.vectorStyle.stroke}\r\n                            onChange={this.handleChangedStrokeColorFromPicker}\r\n                            disableAlpha={true}\r\n                        />\r\n                    </Popover>\r\n                </ControlGroup>\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderStrokeOpacity() {\r\n        return (\r\n            <Label className=\"bp3-inline\" style={StylesPanel.LABEL_BOTTOM_MARGIN}>\r\n                <span style={StylesPanel.LABEL_SPAN_STYLE_100}>Opacity</span>\r\n                <div style={{...StylesPanel.SLIDER_DIV_STYLE_05, width: undefined, flex: 'auto 1', margin: 'auto 0'}}>\r\n                    <Slider min={0.0}\r\n                            max={1.0}\r\n                            stepSize={0.05}\r\n                            labelRenderer={false}\r\n                            value={this.props.vectorStyle.strokeOpacity}\r\n                            onChange={this.handleChangedStrokeOpacity}\r\n                    />\r\n                </div>\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderMarkerColor() {\r\n        return (\r\n            <Label className=\"bp3-inline\" style={StylesPanel.LABEL_BOTTOM_MARGIN}>\r\n                <span style={StylesPanel.LABEL_SPAN_STYLE_100}>Colour</span>\r\n                <ControlGroup style={{lineHeight: '0', flex: 'auto 1'}}>\r\n                    <TextField value={this.props.vectorStyle.markerColor}\r\n                               style={{flex: 'auto', fontFamily: 'courier', textAlign: 'right', paddingRight: '40px'}}\r\n                               size={8}\r\n                               uncontrolled={true}\r\n                               onChange={this.handleChangedMarkerColor}\r\n                    />\r\n                    <Popover\r\n                        interactionKind={PopoverInteractionKind.CLICK}\r\n                        popoverClassName=\"bp3-minimal\"\r\n                        position={PopoverPosition.LEFT}\r\n                        className=\"bp3-input-action\"\r\n                    >\r\n                        <Button style={{backgroundColor: this.props.vectorStyle.markerColor}}/>\r\n                        <SketchPicker\r\n                            color={this.props.vectorStyle.markerColor}\r\n                            onChange={this.handleChangedMarkerColorFromPicker}\r\n                            disableAlpha={true}\r\n                        />\r\n                    </Popover>\r\n                </ControlGroup>\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderMarkerSize() {\r\n        return (\r\n            <Label className=\"bp3-inline\" style={StylesPanel.LABEL_BOTTOM_MARGIN}>\r\n                <span style={StylesPanel.LABEL_SPAN_STYLE_100}>Size</span>\r\n                <HTMLSelect\r\n                    style={{flex: 'auto 1'}}\r\n                    value={this.props.vectorStyle.markerSize}\r\n                    onChange={this.handleChangedMarkerSize}\r\n                >\r\n                    <option value=\"small\">Small</option>\r\n                    <option value=\"medium\">Medium</option>\r\n                    <option value=\"large\">Large</option>\r\n                </HTMLSelect>\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderMarkerSymbol() {\r\n        return (\r\n            <Label className=\"bp3-inline\" style={StylesPanel.LABEL_BOTTOM_MARGIN}>\r\n                <span style={StylesPanel.LABEL_SPAN_STYLE_100}>Symbol</span>\r\n                <TextField value={this.props.vectorStyle.markerSymbol}\r\n                           style={{flex: 'auto', fontFamily: 'courier', textAlign: 'right'}}\r\n                           size={8}\r\n                           uncontrolled={true}\r\n                           onChange={this.handleChangedMarkerSymbol}\r\n                />\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    private renderDisplayRangeSlider() {\r\n        const layer = this.props.selectedVariableImageLayer;\r\n        if (!layer) {\r\n            return null;\r\n        }\r\n\r\n        const statistics = layer.statistics;\r\n        if (!statistics) {\r\n            return <span style={{color: Colors.ORANGE3}}>Missing data min/max</span>;\r\n        }\r\n\r\n        let min = statistics.min;\r\n        let max = statistics.max;\r\n\r\n        if (isNaN(min) || isNaN(max)) {\r\n            return <span style={{color: Colors.ORANGE3}}>All values are NaN</span>;\r\n        }\r\n\r\n        if (min === max) {\r\n            return <span style={{color: Colors.ORANGE3}}>All values are {min}</span>;\r\n        }\r\n\r\n        const fractionDigits = getDisplayFractionDigits(min, max);\r\n\r\n        return (\r\n            <RangeSlider\r\n                min={min}\r\n                max={max}\r\n                stepSize={(max - min) / 100.}\r\n                labelStepSize={max - min}\r\n                labelRenderer={(x: number) => formatNumber(x, fractionDigits)}\r\n                onChange={this.handleChangedDisplayRange}\r\n                value={[layer.displayMin, layer.displayMax]}\r\n            />\r\n        );\r\n    }\r\n\r\n    private renderColorBarButton(layer: VariableImageLayerState, disabled: boolean) {\r\n        const selectedColorMapName = layer.colorMapName;\r\n        const selectedColorMapImage = this.renderColorMapImage(this.props.selectedColorMap);\r\n        const buttonContent = (selectedColorMapImage || (selectedColorMapName || 'Select Color Bar'));\r\n        return (<AnchorButton className=\"bp3-minimal\" style={{width: '100%'}}\r\n                              disabled={disabled}>{buttonContent}</AnchorButton>);\r\n    }\r\n\r\n    private renderColorBarBox(layer: VariableImageLayerState) {\r\n        const children = [];\r\n        for (let cat of this.props.colorMapCategories) {\r\n            const colorMaps = cat.colorMaps;\r\n            children.push(\r\n                <p key={cat.name + '_head'} style={{marginTop: 2, marginBottom: 2}}>\r\n                    <Tooltip content={<div style={{width: \"19em\"}}>{cat.description}</div>}\r\n                             position='top'>\r\n                        {cat.name}\r\n                    </Tooltip>\r\n                </p>\r\n            );\r\n            children.push(\r\n                <ListBox key={cat.name + '_list'}\r\n                         items={colorMaps}\r\n                         getItemKey={(item: ColorMapState) => item.name}\r\n                         renderItem={(item: ColorMapState) => this.renderColorMapImage(item)}\r\n                         selectionMode={ListBoxSelectionMode.SINGLE}\r\n                         selection={layer.colorMapName ? [layer.colorMapName] : []}\r\n                         onSelection={this.handleChangedColorMapName}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <div style={{padding: 5, overflowY: 'auto', height: '87vh'}}>{children}</div>;\r\n    }\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    private renderColorMapImage(colorMap: ColorMapState) {\r\n        if (colorMap) {\r\n            return (\r\n                <Tooltip content={colorMap.name}>\r\n                    <img src={`data:image/png;base64,${colorMap.imageData}`}\r\n                         alt={colorMap.name}\r\n                         style={{width: '100%', height: '1em'}}/>\r\n                </Tooltip>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private handleChangedDisplayAlphaBlend(event: any) {\r\n        const alphaBlending = event.target.checked;\r\n        const layer = this.props.selectedVariableImageLayer;\r\n        this.props.dispatch(actions.updateLayer(this.props.activeView.id, layer, {alphaBlending}) as any);\r\n    }\r\n\r\n    private handleChangedDisplayMinMax(displayMinMax: FieldValue<NumberRange>) {\r\n        const layer = this.props.selectedVariableImageLayer || this.props.selectedResourceVectorLayer;\r\n        if (!displayMinMax.error) {\r\n            const displayMin = displayMinMax.value[0];\r\n            const displayMax = displayMinMax.value[1];\r\n            this.props.dispatch(actions.updateLayer(this.props.activeView.id, layer, {displayMin, displayMax}) as any);\r\n        }\r\n    }\r\n\r\n    private handleUpdateDisplayStatistics() {\r\n        const resource = this.props.selectedResource;\r\n        const variable = this.props.selectedVariable;\r\n        const imageLayer = this.props.selectedVariableImageLayer;\r\n        if (!resource || !variable || !imageLayer) {\r\n            return;\r\n        }\r\n        this.props.dispatch(actions.getWorkspaceVariableStatistics(resource.name, variable.name, imageLayer.varIndex,\r\n                                                                   (statistics) => {\r\n                                                                       return actions.updateLayer(this.props.activeView.id, imageLayer, {\r\n                                                                           displayMin: statistics.min,\r\n                                                                           displayMax: statistics.max,\r\n                                                                           statistics\r\n                                                                       });\r\n                                                                   }\r\n        ) as any);\r\n    }\r\n\r\n    private handleChangedDisplayRange(displayRange: NumberRange) {\r\n        const layer = this.props.selectedVariableImageLayer || this.props.selectedResourceVectorLayer;\r\n        this.props.dispatch(actions.updateLayer(this.props.activeView.id, layer, {\r\n            displayMin: displayRange[0],\r\n            displayMax: displayRange[1]\r\n        }) as any);\r\n    }\r\n\r\n    private handleChangedColorMapName(newSelection: string[]) {\r\n        const layer = this.props.selectedVariableImageLayer || this.props.selectedResourceVectorLayer;\r\n        const colorMapName = newSelection && newSelection.length && newSelection[0];\r\n        if (colorMapName) {\r\n            this.props.dispatch(actions.updateLayer(this.props.activeView.id, layer, {colorMapName}) as any);\r\n        }\r\n    }\r\n\r\n    private handleChangedStyleContext(event: any) {\r\n        this.props.dispatch(actions.setStyleContext(event.target.value));\r\n    }\r\n\r\n    private handleChangedFillColor(value: FieldValue<string>) {\r\n        this.handleChangedVectorStyle({fill: value.value});\r\n    }\r\n\r\n    private handleChangedFillColorFromPicker(color: ColorState) {\r\n        this.handleChangedVectorStyle({fill: color.hex});\r\n    }\r\n\r\n    private handleChangedFillOpacity(fillOpacity: number) {\r\n        this.handleChangedVectorStyle({fillOpacity});\r\n    }\r\n\r\n    private handleChangedStrokeWidth(value: FieldValue<number>) {\r\n        this.handleChangedVectorStyle({strokeWidth: value.value});\r\n    }\r\n\r\n    private handleChangedStrokeColor(value: FieldValue<string>) {\r\n        this.handleChangedVectorStyle({stroke: value.value});\r\n    }\r\n\r\n    private handleChangedStrokeColorFromPicker(color: ColorState) {\r\n        this.handleChangedVectorStyle({stroke: color.hex});\r\n    }\r\n\r\n    private handleChangedStrokeOpacity(strokeOpacity: number) {\r\n        this.handleChangedVectorStyle({strokeOpacity});\r\n    }\r\n\r\n    private handleChangedMarkerSize(event) {\r\n        this.handleChangedVectorStyle({markerSize: event.target.value});\r\n    }\r\n\r\n    private handleChangedMarkerColor(value: FieldValue<string>) {\r\n        this.handleChangedVectorStyle({markerColor: value.value});\r\n    }\r\n\r\n    private handleChangedMarkerColorFromPicker(color: ColorState) {\r\n        this.handleChangedVectorStyle({markerColor: color.hex});\r\n    }\r\n\r\n    private handleChangedMarkerSymbol(value: FieldValue<string>) {\r\n        this.handleChangedVectorStyle({markerSymbol: value.value});\r\n    }\r\n\r\n    private handleChangedVectorStyle(style: SimpleStyle) {\r\n        //style = {...this.props.vectorStyle, ...style};\r\n        if (this.props.styleContext === STYLE_CONTEXT_ENTITY) {\r\n            this.props.dispatch(actions.updateEntityStyle(this.props.activeView,\r\n                                                          this.props.selectedEntity,\r\n                                                          style) as any);\r\n        } else {\r\n            this.props.dispatch(actions.updateLayerStyle(this.props.activeView.id,\r\n                                                         this.props.selectedVectorLayer.id,\r\n                                                         style));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StylesPanel);\r\n","import * as React from 'react';\r\nimport { AnchorButton, ControlGroup, InputGroup, Intent } from '@blueprintjs/core';\r\nimport { DialogState, State } from '../state';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\n\r\n\r\ninterface ISelectWorkspaceDialogState extends DialogState {\r\n    workspaceDir: string | null;\r\n    workspaceName: string;\r\n}\r\n\r\ninterface ISelectWorkspaceDialogOwnProps {\r\n    dialogId: string;\r\n}\r\n\r\ninterface ISelectWorkspaceDialogProps extends ISelectWorkspaceDialogState, ISelectWorkspaceDialogOwnProps {\r\n    isOpen: boolean;\r\n    isNewDialog: boolean;\r\n    isLocalFSAllowed: boolean;\r\n}\r\n\r\nfunction mapStateToProps(state: State, ownProps: ISelectWorkspaceDialogOwnProps): ISelectWorkspaceDialogProps {\r\n    const dialogState = selectors.dialogStateSelector(ownProps.dialogId)(state) as any;\r\n    const isOpen = dialogState.isOpen;\r\n    const dialogId = ownProps.dialogId;\r\n    const isNewDialog = ownProps.dialogId === 'newWorkspaceDialog';\r\n    const isLocalFSAllowed = selectors.isLocalFSAccessAllowedSelector(state);\r\n    let workspaceDir = dialogState.workspaceDir;\r\n    let workspaceName = dialogState.workspaceName;\r\n    // TODO (forman): Fix code duplication with ChooseWorkspaceDialog\r\n    if (isOpen) {\r\n        if (!selectors.isScratchWorkspaceSelector(state)) {\r\n            workspaceDir = workspaceDir || selectors.workspaceDirSelector(state);\r\n            workspaceName = workspaceName || selectors.workspaceNameSelector(state);\r\n        }\r\n        workspaceDir = workspaceDir || selectors.lastWorkspaceDirSelector(state);\r\n    }\r\n    workspaceDir = isLocalFSAllowed ? workspaceDir || '' : null;\r\n    workspaceName = workspaceName || '';\r\n    return {\r\n        workspaceDir,\r\n        workspaceName,\r\n        dialogId,\r\n        isNewDialog,\r\n        isOpen,\r\n        isLocalFSAllowed,\r\n    };\r\n}\r\n\r\n// TODO (forman): Rename to (Get)WorkspaceNameDialog\r\nclass SelectWorkspaceDialog extends React.Component<ISelectWorkspaceDialogProps & ISelectWorkspaceDialogOwnProps & DispatchProp<State>, ISelectWorkspaceDialogState> {\r\n\r\n    // TODO (forman): Remove member\r\n    private localWebAPI: boolean;\r\n\r\n    constructor(props: ISelectWorkspaceDialogProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.state = {workspaceDir: '', workspaceName: ''};\r\n        // TODO (forman): Fix code duplication with ChooseWorkspaceDialog\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.onWorkspaceNameChange = this.onWorkspaceNameChange.bind(this);\r\n        this.onWorkspaceDirChange = this.onWorkspaceDirChange.bind(this);\r\n        this.showDirectorySelectDialog = this.showDirectorySelectDialog.bind(this);\r\n        this.localWebAPI = props.isLocalFSAllowed;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: ISelectWorkspaceDialogProps) {\r\n        this.setState({workspaceDir: nextProps.workspaceDir, workspaceName: nextProps.workspaceName});\r\n    }\r\n\r\n    private onCancel() {\r\n        this.props.dispatch(actions.hideDialog(this.props.dialogId));\r\n    }\r\n\r\n    private canConfirm(): boolean {\r\n        // TODO (SabineEmbacher) validate against existing workspace names\r\n        if ((this.localWebAPI && !this.state.workspaceDir) || !this.state.workspaceName) {\r\n            return false;\r\n        }\r\n        return /^([A-Za-z_\\-\\s0-9.]+)$/.test(this.state.workspaceName);\r\n    }\r\n\r\n    private composeWorkspacePath(): string {\r\n        let workspaceDir = this.state.workspaceDir;\r\n        let workspaceName = this.state.workspaceName;\r\n        if (workspaceDir === null) {\r\n            return workspaceName;\r\n        }\r\n        return workspaceDir + '/' + workspaceName;\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.dispatch(actions.hideDialog(this.props.dialogId, this.state));\r\n        if (this.props.isNewDialog) {\r\n            this.props.dispatch(actions.newWorkspace(this.composeWorkspacePath()) as any);\r\n        } else {\r\n            this.props.dispatch(actions.saveWorkspaceAs(this.composeWorkspacePath()) as any);\r\n        }\r\n    }\r\n\r\n    private onWorkspaceDirChange(ev: any) {\r\n        this.setState({workspaceDir: ev.target.value} as ISelectWorkspaceDialogState);\r\n    }\r\n\r\n    private onWorkspaceNameChange(ev: any) {\r\n        this.setState({workspaceName: ev.target.value} as ISelectWorkspaceDialogState);\r\n    }\r\n\r\n    private showDirectorySelectDialog() {\r\n        let handleClose = (dirPath: string | null) => {\r\n            if (dirPath) {\r\n                this.setState({workspaceDir: dirPath} as ISelectWorkspaceDialogState);\r\n            }\r\n        };\r\n        this.props.dispatch(actions.showDirectorySelectDialog({defaultPath: this.state.workspaceDir},\r\n                                                              handleClose) as any);\r\n    }\r\n\r\n    render() {\r\n        let isOpen = this.props.isOpen;\r\n        if (!isOpen) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ModalDialog\r\n                isOpen={isOpen}\r\n                title={this.props.isNewDialog ? 'New Workspace' : 'Save Workspace As'}\r\n                confirmTitle={this.props.isNewDialog ? 'New' : 'Save As'}\r\n                onCancel={this.onCancel}\r\n                canConfirm={this.canConfirm}\r\n                onConfirm={this.onConfirm}\r\n                renderBody={this.renderBody}\r\n            />);\r\n    }\r\n\r\n    private renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        let directoryChooser = null;\r\n        if (this.props.isLocalFSAllowed) {\r\n            directoryChooser = (\r\n                <React.Fragment>\r\n                    <p style={{marginTop: '1em'}}>Workspace parent directory:</p>\r\n                    <ControlGroup style={{flexGrow: 1, display: 'flex', marginLeft: '1em', width: '100%'}}>\r\n                        <InputGroup\r\n                            type=\"text\"\r\n                            style={{flex: 'auto'}}\r\n                            value={this.state.workspaceDir}\r\n                            onChange={this.onWorkspaceDirChange}\r\n                        />\r\n                        <AnchorButton intent={Intent.PRIMARY} style={{flex: 'none'}}\r\n                                      onClick={this.showDirectorySelectDialog}>...</AnchorButton>\r\n                    </ControlGroup>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {directoryChooser}\r\n                <p style={{marginTop: '1em'}}>Workspace name:</p>\r\n                <InputGroup\r\n                    type=\"text\"\r\n                    style={{width: '100%'}}\r\n                    value={this.state.workspaceName}\r\n                    onChange={this.onWorkspaceNameChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelectWorkspaceDialog);\r\n","import * as React from 'react';\r\nimport SelectWorkspaceDialog from './SelectWorkspaceDialog';\r\n\r\n\r\nexport default function NewWorkspaceDialog() {\r\n    return <SelectWorkspaceDialog dialogId='newWorkspaceDialog'/>\r\n}\r\n\r\n","import * as React from 'react';\r\nimport SelectWorkspaceDialog from './SelectWorkspaceDialog';\r\n\r\n\r\nexport default function SaveWorkspaceAsDialog() {\r\n    return <SelectWorkspaceDialog dialogId='saveWorkspaceAsDialog'/>\r\n}\r\n\r\n","import * as React from 'react';\nimport {\n    AnchorButton,\n    Button,\n    Card,\n    Collapse,\n    ControlGroup,\n    HTMLTable,\n    Intent,\n    Switch,\n    Tab,\n    Tabs\n} from '@blueprintjs/core';\nimport { connect, DispatchProp } from 'react-redux';\n\nimport { SessionState, State, WebAPIServiceInfo } from '../state';\nimport * as actions from '../actions';\nimport { showMessageBox } from '../actions';\nimport * as selectors from '../selectors';\nimport { TextField } from '../components/field/TextField';\nimport deepEqual from 'deep-equal';\nimport { ModalDialog } from '../components/ModalDialog';\nimport { showToast } from '../toast';\nimport { isDefined } from '../../common/types';\nimport { CATE_APP_VERSION } from '../../version';\n\n\ninterface IPreferencesDialogProps {\n    isOpen: boolean;\n    preferences: SessionState;\n    serviceInfo: WebAPIServiceInfo;\n    serviceURL: string;\n}\n\nfunction mapStateToProps(state: State): IPreferencesDialogProps {\n    return {\n        isOpen: selectors.dialogStateSelector(PreferencesDialog.DIALOG_ID)(state).isOpen,\n        preferences: state.session,\n        serviceURL: state.communication.webAPIServiceURL,\n        serviceInfo: state.communication.webAPIServiceInfo,\n    };\n}\n\n\nconst SYSTEM_LABEL_STYLE = {width: '40%'};\nconst SYSTEM_CONTROL_GROUP_STYLE = {width: '100%', marginBottom: '1em'};\nconst SYSTEM_DIV_STYLE = {width: '100%', marginTop: '1em'};\nconst SYSTEM_ITEM_STYLE: React.CSSProperties = {width: '60%', wordWrap: 'break-word'};\n\nclass PreferencesDialog extends React.Component<IPreferencesDialogProps & DispatchProp<State>, SessionState> {\n    static readonly DIALOG_ID = 'preferencesDialog';\n    static readonly DIALOG_TITLE = 'Preferences';\n\n    constructor(props: IPreferencesDialogProps & DispatchProp<State>) {\n        super(props);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.canConfirm = this.canConfirm.bind(this);\n        this.renderBody = this.renderBody.bind(this);\n        this.state = props.preferences;\n    }\n\n    componentWillReceiveProps(nextProps: IPreferencesDialogProps) {\n        this.setState(nextProps.preferences);\n    }\n\n    private onConfirm() {\n        this.props.dispatch(actions.hidePreferencesDialog());\n        if (!deepEqual(this.props.preferences, this.state)) {\n            const backendConfig = this.state.backendConfig;\n            const autoUpdateSoftwareChangeDetected = this.props.preferences.autoUpdateSoftware !== this.state.autoUpdateSoftware;\n            const backendChangesDetected = !deepEqual(this.props.preferences.backendConfig, backendConfig);\n            this.props.dispatch(actions.updateSessionState(this.state));\n            this.props.dispatch(actions.updatePreferences(this.state) as any);\n            if (autoUpdateSoftwareChangeDetected || backendChangesDetected) {\n                this.props.dispatch(actions.storeBackendConfig(backendConfig) as any);\n                this.props.dispatch(showMessageBox({\n                                                       type: 'info',\n                                                       title: PreferencesDialog.DIALOG_TITLE,\n                                                       message: 'Some changes will be effective only after restart.'\n                                                   }) as any);\n            }\n        } else {\n            showToast({\n                          type: 'info',\n                          text: 'No changes detected.'\n                      });\n        }\n    }\n\n    private onCancel() {\n        this.props.dispatch(actions.hidePreferencesDialog());\n    }\n\n    //noinspection JSMethodCanBeStatic\n    private canConfirm() {\n        // TODO (forman): add validation of preferences changes\n        return true;\n    }\n\n    render() {\n        return (\n            <ModalDialog\n                isOpen={this.props.isOpen}\n                title={PreferencesDialog.DIALOG_TITLE}\n                style={{minWidth: '30em'}}\n                icon=\"confirm\"\n                onCancel={this.onCancel}\n                onConfirm={this.onConfirm}\n                canConfirm={this.canConfirm}\n                renderBody={this.renderBody}\n            />\n        );\n    }\n\n    private renderBody() {\n        if (!this.props.isOpen) {\n            return null;\n        }\n\n        return (\n            <Tabs id=\"preferences\">\n                <Tab id=\"g\" title=\"General\" panel={this.renderGeneralPanel()}/>\n                <Tab id=\"dm\" title=\"Data Management\" panel={this.renderDataManagementPanel()}/>\n                <Tab id=\"a\" title=\"System\" panel={this.renderSystemPanel()}/>\n            </Tabs>\n        );\n    }\n\n    private renderGeneralPanel() {\n        // const userRootMode = this.props.serviceInfo.userRootMode;\n        return (\n            <div style={{width: '100%', marginTop: '1em'}}>\n                {this.renderReopenLastWorkspace()}\n                {this.renderAutoShowNewFigures()}\n                {/*Does not work with blueprintjs 3+*//*{this.renderPanelContainerUndockedMode()}*/}\n                {/*For Electron only*/ /*{!userRootMode && this.renderAutoUpdates()}*/}\n                {/*For Electron only*/ /*{!userRootMode && this.renderOfflineMode()}*/}\n            </div>\n        );\n    }\n\n    private renderDataManagementPanel() {\n        const userRootMode = this.props.serviceInfo.userRootMode;\n        return (\n            <div style={{width: '100%', marginTop: '1em'}}>\n                {!userRootMode && this.renderDataStoresPath()}\n                {!userRootMode && this.renderCacheWorkspaceImagery()}\n                {this.renderResourceNamePrefix()}\n            </div>\n        );\n    }\n\n    private renderSystemPanel() {\n        const showProperties = this.getStateValue('showProperties', false);\n        const onShowPropertiesChange = this.getChangeHandler('showProperties', false);\n\n        return (\n            <div style={SYSTEM_DIV_STYLE}>\n                <ControlGroup style={SYSTEM_CONTROL_GROUP_STYLE}>\n                    <span style={SYSTEM_LABEL_STYLE}>Cate UI version:</span>\n                    <span style={SYSTEM_ITEM_STYLE}><code>{CATE_APP_VERSION}</code></span>\n                </ControlGroup>\n                <ControlGroup style={SYSTEM_CONTROL_GROUP_STYLE}>\n                    <span style={SYSTEM_LABEL_STYLE}>Cate API URL:</span>\n                    <span style={SYSTEM_ITEM_STYLE}><code>{this.props.serviceURL}</code></span>\n                </ControlGroup>\n                <ControlGroup style={SYSTEM_CONTROL_GROUP_STYLE}>\n                    <span style={SYSTEM_LABEL_STYLE}>Cate API version:</span>\n                    <span style={SYSTEM_ITEM_STYLE}><code>{this.props.serviceInfo.version}</code></span>\n                </ControlGroup>\n                {this.props.serviceInfo.dependencies && (\n                    <ControlGroup style={SYSTEM_CONTROL_GROUP_STYLE}>\n                        <span style={SYSTEM_LABEL_STYLE}>Cate dependencies:</span>\n                        <div>\n                            <Button\n                                onClick={() => onShowPropertiesChange(!showProperties)}\n                                small={true}\n                                style={{marginBottom: 2}}\n                            >\n                                {\"Click to \" + (showProperties ? \"collapse\" : \"expand\")}\n                            </Button>\n                            <Collapse isOpen={showProperties}>\n                                <Card>\n                                    <HTMLTable condensed={true} small={true} bordered={true}>\n                                        <thead>\n                                        <tr>\n                                            <th>Package</th>\n                                            <th>Version</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {\n                                            Object.getOwnPropertyNames(this.props.serviceInfo.dependencies!).map(\n                                                packageName => {\n                                                    const packageVersion = this.props.serviceInfo.dependencies[packageName];\n                                                    return (\n                                                        <tr>\n                                                            <td>{packageName}</td>\n                                                            <td>{packageVersion}</td>\n                                                        </tr>\n                                                    );\n                                                }\n                                            )\n                                        }\n                                        </tbody>\n                                    </HTMLTable>\n                                </Card>\n                            </Collapse>\n                        </div>\n                    </ControlGroup>\n                )}\n                <ControlGroup style={SYSTEM_CONTROL_GROUP_STYLE}>\n                    <span style={SYSTEM_LABEL_STYLE}>Filesystem access:</span>\n                    <span style={SYSTEM_ITEM_STYLE}>\n                        {this.props.serviceInfo.userRootMode ? 'restricted' : 'unrestricted'}\n                    </span>\n                </ControlGroup>\n            </div>\n        );\n    }\n\n    private renderReopenLastWorkspace() {\n        return this.renderBooleanValue(\n            'reopenLastWorkspace',\n            false,\n            'Reopen last workspace on startup'\n        );\n    }\n\n    // private renderAutoUpdates() {\n    //     return this.renderBooleanValue(\n    //         'autoUpdateSoftware',\n    //         false,\n    //         'Automatic software updates'\n    //     );\n    // }\n\n    private renderAutoShowNewFigures() {\n        return this.renderBooleanValue(\n            'autoShowNewFigures',\n            false,\n            'Open plot view for new Figure resources'\n        );\n    }\n\n    // private renderOfflineMode() {\n    //     return this.renderBooleanValue(\n    //         'offlineMode',\n    //         false,\n    //         'Force offline mode (requires restart)'\n    //     );\n    // }\n\n    // private renderPanelContainerUndockedMode() {\n    //     return this.renderBooleanValue(\n    //         'panelContainerUndockedMode',\n    //         false,\n    //         'Undocked tool panels (experimental)'\n    //     );\n    // }\n\n    private renderDataStoresPath() {\n        return this.renderDirectoryPath(\n            'dataStoresPath',\n            true,\n            'Synchronisation directory for remote data store files'\n        );\n    }\n\n    private renderCacheWorkspaceImagery() {\n        return this.renderBooleanValue(\n            'useWorkspaceImageryCache',\n            true,\n            'Use per-workspace imagery cache (may accelerate image display)'\n        );\n    }\n\n    private renderResourceNamePrefix() {\n        return this.renderStringValue(\n            'resourceNamePattern',\n            true,\n            'Default resource name pattern'\n        );\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Components\n    // Note (forman): could make this React component later\n\n    private renderDirectoryPath(propertyName, isBackend: boolean, label: string) {\n        const initialValue = this.getStateValue(propertyName, isBackend);\n        const onChange = this.getChangeHandler(propertyName, isBackend);\n        return (\n            <div style={{width: '100%', marginBottom: '1em'}}>\n                <p>{label}:</p>\n                <ControlGroup style={{display: 'flex', alignItems: 'center'}}>\n                    <TextField style={{flexGrow: 1}}\n                               value={initialValue}\n                               placeholder=\"Enter directory path\"\n                               onChange={onChange}\n                    />\n                    <AnchorButton\n                        intent={Intent.PRIMARY} style={{flex: 'none'}}\n                        onClick={() => this.showOpenDirectoryDialog(initialValue, onChange)}>\n                        ...\n                    </AnchorButton>\n                </ControlGroup>\n            </div>\n        );\n    }\n\n    private renderStringValue(propertyName: string, isBackend: boolean, label: string) {\n        const value = this.getStateValue(propertyName, isBackend);\n        const onChange = this.getChangeHandler(propertyName, isBackend);\n        return (\n            <ControlGroup style={{width: '100%', marginBottom: '1em', display: 'flex', alignItems: 'center'}}>\n                <span style={{flexGrow: 0.8}}>{label}:</span>\n                <TextField style={{flexGrow: 0.2}}\n                           value={value}\n                           onChange={onChange}\n                />\n            </ControlGroup>\n        );\n    }\n\n    private renderBooleanValue(propertyName: string, isBackend: boolean, label: string) {\n        const value = this.getStateValue(propertyName, isBackend);\n        const onChange = this.getChangeHandler(propertyName, isBackend);\n        return (\n            <div style={{width: '100%', marginBottom: '1em'}}>\n                <Switch checked={value}\n                        label={label}\n                        onChange={(event: any) => onChange(event.target.checked)}/>\n            </div>\n        );\n    }\n\n    private getChangeHandler(propertyName: string, isBackend: boolean) {\n        return (value: any) => {\n            const change = {};\n            change[propertyName] = isDefined(value) ? (isDefined(value.value) ? value.value : value) : null;\n            if (isBackend) {\n                this.setBackendConfig(change);\n            } else {\n                this.setState(change as SessionState);\n            }\n        };\n    }\n\n    private getStateValue(propertyName: string, isBackend: boolean) {\n        return isBackend ? this.state.backendConfig[propertyName] : this.state[propertyName];\n    }\n\n    private setBackendConfig(backendConfigDelta: any) {\n        const backendConfig = Object.assign({}, this.state.backendConfig, backendConfigDelta);\n        this.setState({backendConfig} as SessionState);\n    }\n\n    private showOpenDirectoryDialog(defaultPath: string, onChange: (value) => void) {\n        this.props.dispatch(actions.showDirectorySelectDialog({defaultPath},\n                                                              (dirPath: string | null) => {\n                                                                  if (dirPath) {\n                                                                      onChange(dirPath);\n                                                                  }\n                                                              }) as any);\n    }\n}\n\nexport default connect(mapStateToProps)(PreferencesDialog);\n\n\n\n","import * as React from \"react\";\r\nimport { Colors, HTMLTable, Icon } from '@blueprintjs/core';\r\n\r\nimport { FileFilter } from '../types';\r\nimport { applyFileFilter, compareFileNames, FileNode, getFileNodeIcon, getFileNodePath } from './FileNode';\r\n\r\nconst NAME_CELL_STYLE: React.CSSProperties = {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    alignItems: 'center',\r\n};\r\nconst NAME_ICON_STYLE = {\r\n    marginRight: 5,\r\n};\r\nconst SIZE_CELL_STYLE: React.CSSProperties = {\r\n    width: '100%', textAlign: 'right'\r\n};\r\nconst ROW_DEFAULT_STYLE: React.CSSProperties = {};\r\nconst ROW_SELECTED_STYLE: React.CSSProperties = {\r\n    ...ROW_DEFAULT_STYLE, backgroundColor: Colors.BLUE3\r\n};\r\nconst TABLE_CONTAINER_STYLE: React.CSSProperties = {\r\n    width: '100%',\r\n    height: '100%',\r\n    overflow: 'auto',\r\n    borderColor: Colors.DARK_GRAY2,\r\n    borderStyle: 'solid',\r\n    borderWidth: 1\r\n};\r\nconst TABLE_STYLE: React.CSSProperties = {width: '100%'};\r\n\r\ninterface IFileListProps {\r\n    rootNode: FileNode;\r\n\r\n    fileFilter?: FileFilter | null;\r\n    multiSelections?: boolean;\r\n    openDirectory?: boolean;\r\n\r\n    currentDirPath?: string | null;\r\n    onCurrentDirPathChange?: (selectedDirPath: string) => any;\r\n    selectedPaths?: string[];\r\n    onSelectedPathsChange?: (selectedPaths: string[]) => any;\r\n}\r\n\r\nconst FileList: React.FC<IFileListProps> = (\r\n    {\r\n        rootNode,\r\n        fileFilter,\r\n        multiSelections,\r\n        openDirectory,\r\n        currentDirPath,\r\n        onCurrentDirPathChange,\r\n        selectedPaths,\r\n        onSelectedPathsChange,\r\n    }\r\n) => {\r\n    // const [sortedIndexMap, setSortedIndexMap] = React.useState<number[]>([]);\r\n    const currentFileNodes = getCurrentFileNodes(rootNode, currentDirPath, fileFilter);\r\n    const selectedPathSet = new Set(selectedPaths);\r\n\r\n    const getRowFileNode = (rowIndex: number): FileNode => {\r\n        // TODO (forman): implement sorting\r\n        /*\r\n        const sortedRowIndex = sortedIndexMap[rowIndex];\r\n        if (typeof sortedRowIndex === 'number') {\r\n            rowIndex = sortedRowIndex;\r\n        }\r\n        */\r\n        return currentFileNodes![rowIndex];\r\n    };\r\n\r\n    const getRowPath = (rowIndex: number): string => {\r\n        let node = getRowFileNode(rowIndex);\r\n        let path = node.name;\r\n        if (currentDirPath) {\r\n            path = currentDirPath + '/' + node.name;\r\n        }\r\n        return path;\r\n    };\r\n\r\n    const isRowSelected = (rowIndex: number): boolean => {\r\n        return selectedPathSet.has(getRowPath(rowIndex));\r\n    };\r\n\r\n    const renderFileNodeName = (rowIndex: number) => {\r\n        const node = getRowFileNode(rowIndex);\r\n        return <div style={NAME_CELL_STYLE}><Icon style={NAME_ICON_STYLE} icon={getFileNodeIcon(node)}/><span>{node.name}</span></div>;\r\n    };\r\n\r\n    const renderFileNodeLastModified = (rowIndex: number) => {\r\n        const node = getRowFileNode(rowIndex);\r\n        return node.lastModified;\r\n    };\r\n\r\n    const renderFileNodeSize = (rowIndex: number) => {\r\n        const node = getRowFileNode(rowIndex);\r\n        return <div style={SIZE_CELL_STYLE}>{node.size}</div>;\r\n    };\r\n\r\n    const handleRowClick = (fileNode: FileNode, rowIndex: number, event: React.MouseEvent<HTMLTableRowElement>) => {\r\n        // Disallow directory selection\r\n        const node = getRowFileNode(rowIndex);\r\n        if ((!openDirectory && node.isDir) || (openDirectory && !node.isDir)) {\r\n            return;\r\n        }\r\n        const path = getRowPath(rowIndex);\r\n        const newSelectedPathSet = new Set<string>(selectedPathSet);\r\n        if (newSelectedPathSet.has(path)) {\r\n            newSelectedPathSet.delete(path);\r\n        } else {\r\n            if (multiSelections && event.ctrlKey) {\r\n                newSelectedPathSet.add(path);\r\n            } else {\r\n                newSelectedPathSet.clear();\r\n                newSelectedPathSet.add(path);\r\n            }\r\n        }\r\n        if (onSelectedPathsChange) {\r\n            onSelectedPathsChange(Array.from(newSelectedPathSet));\r\n        }\r\n    };\r\n\r\n    const handleRowDoubleClick = (fileNode: FileNode, rowIndex: number) => {\r\n        if (onCurrentDirPathChange) {\r\n            const node = getRowFileNode(rowIndex);\r\n            if (node.isDir) {\r\n                onCurrentDirPathChange(getRowPath(rowIndex));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={TABLE_CONTAINER_STYLE}>\r\n            <HTMLTable className=\"bp3-html-table-condensed bp3-interactive\" style={TABLE_STYLE}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Last modified</th>\r\n                    <th>Size</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    currentFileNodes && currentFileNodes.map((node, rowIndex) => {\r\n                        return (\r\n                            <tr\r\n                                key={rowIndex}\r\n                                style={isRowSelected(rowIndex) ? ROW_SELECTED_STYLE : ROW_DEFAULT_STYLE}\r\n                                onClick={(e) => handleRowClick(node, rowIndex, e)}\r\n                                onDoubleClick={() => handleRowDoubleClick(node, rowIndex)}\r\n                            >\r\n                                <td>{renderFileNodeName(rowIndex)}</td>\r\n                                <td>{renderFileNodeLastModified(rowIndex)}</td>\r\n                                <td>{renderFileNodeSize(rowIndex)}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n                </tbody>\r\n            </HTMLTable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileList;\r\n\r\n\r\nfunction getCurrentFileNodes(rootNode: FileNode,\r\n                             currentDirPath?: string | null,\r\n                             fileFilter?: FileFilter | null): FileNode[] | undefined {\r\n    let currentFileNodes = rootNode.childNodes;\r\n    if (currentDirPath) {\r\n        const currentFileNodesPath = getFileNodePath(rootNode, currentDirPath);\r\n        if (currentFileNodesPath) {\r\n            if (currentFileNodesPath.length > 0) {\r\n                currentFileNodes = currentFileNodesPath[currentFileNodesPath.length - 1].childNodes;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (currentFileNodes) {\r\n        if (fileFilter) {\r\n            currentFileNodes = applyFileFilter(currentFileNodes, fileFilter);\r\n        }\r\n        currentFileNodes = currentFileNodes.sort(compareFileNames);\r\n    }\r\n\r\n    return currentFileNodes;\r\n}\r\n","import * as React from 'react';\r\nimport { Spinner } from \"@blueprintjs/core\";\r\n\r\nimport { FileNode } from './FileNode';\r\n\r\n\r\nexport interface IRootNodeLoadingProps {\r\n    rootNode: FileNode;\r\n}\r\n\r\nconst RootNodeLoading: React.FC<IRootNodeLoadingProps> = ({rootNode}) => {\r\n    if (!rootNode.childNodes) {\r\n        return (\r\n            <div style={{width: '100%', height: '100%'}}><Spinner size={32}/></div>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default RootNodeLoading;\r\n\r\n\r\n\r\n","import * as React from 'react';\r\nimport { Colors, Icon, ITreeNode, Spinner, Tree } from \"@blueprintjs/core\";\r\n\r\nimport {\r\n    addExpandedDirPath,\r\n    FileNode,\r\n    getFileNodeIcon,\r\n    isPathValidAtIndex,\r\n    removeExpandedDirPath\r\n} from './FileNode';\r\nimport RootNodeLoading from './RootNodeLoading';\r\n\r\nconst TREE_CONTAINER_STYLE: React.CSSProperties = {\r\n    width: '100%',\r\n    height: '100%',\r\n    overflow: 'auto',\r\n    borderColor: Colors.DARK_GRAY2,\r\n    borderStyle: 'solid',\r\n    borderWidth: 1\r\n};\r\n\r\ntype IFileTreeNode = ITreeNode<FileNode>;\r\n\r\nexport interface IFileTreeProps {\r\n    rootNode: FileNode;\r\n\r\n    selectedPath?: string | null;\r\n    onSelectedPathChange?: (selectedPath: string | null) => void;\r\n\r\n    expandedPaths?: string[];\r\n    onExpandedPathsChange?: (expandedPaths: string[]) => void;\r\n\r\n    showFiles?: boolean;\r\n}\r\n\r\nconst FileTree: React.FC<IFileTreeProps> = (\r\n    {\r\n        rootNode,\r\n        selectedPath,\r\n        onSelectedPathChange,\r\n        expandedPaths,\r\n        onExpandedPathsChange,\r\n        showFiles\r\n    }\r\n) => {\r\n    if (!rootNode.childNodes) {\r\n        return <RootNodeLoading rootNode={rootNode}/>;\r\n    }\r\n\r\n    const treeNodes = getTreeNodes(rootNode,\r\n                                   selectedPath || null,\r\n                                   expandedPaths && expandedPaths.length > 0 ? expandedPaths : null,\r\n                                   Boolean(showFiles));\r\n\r\n    const handleNodeClick = (treeNode: IFileTreeNode, nodePath: number[]) => {\r\n        if (onSelectedPathChange) {\r\n            if (treeNode.nodeData!.isDir) {\r\n                const path = getFileNodePath(treeNodes, nodePath);\r\n                onSelectedPathChange(path !== selectedPath ? path : null);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleNodeExpand = (treeNode: IFileTreeNode, nodePath: number[]) => {\r\n        if (onExpandedPathsChange) {\r\n            if (treeNode.nodeData!.isDir) {\r\n                const path = getFileNodePath(treeNodes, nodePath);\r\n                onExpandedPathsChange(addExpandedDirPath(expandedPaths || [], path));\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleNodeCollapse = (treeNode: IFileTreeNode, nodePath: number[]) => {\r\n        if (onExpandedPathsChange) {\r\n            if (treeNode.nodeData!.isDir) {\r\n                const path = getFileNodePath(treeNodes, nodePath);\r\n                onExpandedPathsChange(removeExpandedDirPath(expandedPaths || [], path));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={TREE_CONTAINER_STYLE}>\r\n            <Tree\r\n                contents={treeNodes}\r\n                onNodeClick={handleNodeClick}\r\n                onNodeExpand={handleNodeExpand}\r\n                onNodeCollapse={handleNodeCollapse}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileTree;\r\n\r\n\r\nfunction getTreeNodes(rootNode: FileNode,\r\n                      selectedPath: string | null,\r\n                      expandedPaths: string[] | null,\r\n                      includeFiles: boolean): IFileTreeNode[] {\r\n    if (!rootNode.childNodes) {\r\n        return [];\r\n    }\r\n    const idGen: [number] = [0];\r\n    return _getTreeNodes(rootNode.childNodes,\r\n                         selectedPath ? selectedPath.split('/') : [],\r\n                         expandedPaths ? expandedPaths.map(p => p.split('/')) : [],\r\n                         includeFiles,\r\n                         0,\r\n                         idGen);\r\n}\r\n\r\nfunction _getTreeNodes(fileNodes: FileNode[],\r\n                       selectedPath: string[] | null,\r\n                       expandedPaths: string[][] | null,\r\n                       includeFiles: boolean,\r\n                       depth: number,\r\n                       idGen: [number]): IFileTreeNode[] {\r\n    if (!includeFiles) {\r\n        fileNodes = fileNodes.filter(node => node.isDir);\r\n    }\r\n    return fileNodes.map(node => {\r\n\r\n        let _selectedPath = selectedPath;\r\n        let isSelected = false;\r\n        if (_selectedPath && isPathValidAtIndex(_selectedPath, depth, node.name)) {\r\n            isSelected = depth === _selectedPath.length - 1;\r\n        } else {\r\n            _selectedPath = null;\r\n        }\r\n\r\n        let _expandedPaths = expandedPaths;\r\n        let isExpanded = false;\r\n        if (_expandedPaths) {\r\n            _expandedPaths = _expandedPaths.filter(p => isPathValidAtIndex(p, depth, node.name));\r\n            _expandedPaths = _expandedPaths.length > 0 ? _expandedPaths : null;\r\n            isExpanded = _expandedPaths !== null;\r\n        } else {\r\n            _expandedPaths = null;\r\n        }\r\n\r\n        const id = idGen[0];\r\n        idGen[0] = id + 1;\r\n        let childTreeNodes;\r\n        if (node.childNodes) {\r\n            childTreeNodes = _getTreeNodes(node.childNodes,\r\n                                           _selectedPath,\r\n                                           _expandedPaths,\r\n                                           includeFiles,\r\n                                           depth + 1,\r\n                                           idGen);\r\n        }\r\n        let hasCaret: boolean;\r\n        if (includeFiles) {\r\n            hasCaret = node.isDir\r\n                       && (!childTreeNodes || Boolean(childTreeNodes.find(treeNode => treeNode.nodeData!.isDir)));\r\n        } else {\r\n            hasCaret = node.isDir\r\n                       && (!childTreeNodes || childTreeNodes.length > 0);\r\n        }\r\n        let secondaryLabel;\r\n        if (node.status === 'updating') {\r\n            secondaryLabel = <Spinner size={16}/>;\r\n        } else if (node.status === 'error') {\r\n            secondaryLabel = <Icon icon='error' iconSize={16}/>;\r\n        }\r\n        return {\r\n            id,\r\n            icon: getFileNodeIcon(node),\r\n            label: node.name,\r\n            secondaryLabel,\r\n            hasCaret,\r\n            isSelected,\r\n            isExpanded,\r\n            childNodes: childTreeNodes,\r\n            nodeData: node,\r\n        };\r\n    });\r\n}\r\n\r\nfunction getFileNodePath(rootNodes: IFileTreeNode[],\r\n                         nodePath: number[]): string {\r\n    let fileNodePath = null;\r\n    let childNodes = rootNodes;\r\n    for (let depth = 0; depth < nodePath.length; depth++) {\r\n        if (!childNodes) {\r\n            // Weird!\r\n            throw new Error(`internal error: missing childNodes at index ${depth} in node path ${nodePath.join()}`);\r\n        }\r\n        let childIndex = nodePath[depth];\r\n        let childNode = childNodes[childIndex];\r\n\r\n        if (fileNodePath === null) {\r\n            fileNodePath = childNode.nodeData!.name;\r\n        } else {\r\n            fileNodePath += '/' + childNode.nodeData!.name;\r\n        }\r\n\r\n        childNodes = childNode.childNodes;\r\n    }\r\n    return fileNodePath;\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n    Breadcrumbs,\r\n    Button,\r\n    ButtonGroup,\r\n    Classes,\r\n    Colors,\r\n    IBreadcrumbProps,\r\n    MenuItem,\r\n    Tooltip\r\n} from '@blueprintjs/core';\r\nimport { IItemRendererProps, ItemRenderer, Select } from '@blueprintjs/select';\r\n\r\nimport { getBasename, getParentPath, HostOS } from '../../../../common/paths';\r\nimport { ModalDialog } from '../../ModalDialog';\r\nimport { SplitPane } from '../../SplitPane';\r\nimport { FileDialogOptions, FileDialogResult, FileFilter } from '../types';\r\nimport FileList from './FileList';\r\nimport {\r\n    addExpandedDirPath,\r\n    ALL_FILES_FILTER, denormalizePath,\r\n    FileNode,\r\n    fromPathInputValue,\r\n    getFileNode,\r\n    toPathInputValue,\r\n} from './FileNode';\r\nimport FileTree from './FileTree';\r\n\r\n\r\nconst FILE_DIALOG_STYLE: React.CSSProperties = {\r\n    width: '52vw'\r\n};\r\nconst FILE_CONTAINER_STYLE: React.CSSProperties = {\r\n    width: '100%', display: 'flex', flexFlow: 'column nowrap'\r\n};\r\nconst FILE_MGT_ROW_STYLE: React.CSSProperties = {\r\n    flexGrow: 0, display: 'flex', flexFlow: 'row nowrap', marginBottom: 6\r\n};\r\nconst FILE_LIST_ROW_STYLE: React.CSSProperties = {\r\n    height: '40vh', flexGrow: 0\r\n};\r\nconst FILE_INPUT_ROW_STYLE: React.CSSProperties = {\r\n    flexGrow: 0,\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    alignItems: 'center',\r\n    marginTop: 10\r\n};\r\nconst FILE_INPUT_STYLE: React.CSSProperties = {\r\n    flexGrow: 1, marginLeft: 10, overflow: 'hidden'\r\n};\r\nconst INVALID_FILE_INPUT_STYLE: React.CSSProperties = {\r\n    ...FILE_INPUT_STYLE,\r\n    color: '#ffaaaa',\r\n};\r\nconst FILE_NAV_ROW_STYLE: React.CSSProperties = {\r\n    flexGrow: 0, display: 'flex', flexFlow: 'row nowrap', marginBottom: 6\r\n};\r\nconst FILE_NAV_BC_STYLE: React.CSSProperties = {\r\n    flexGrow: 1,\r\n    backgroundColor: Colors.DARK_GRAY5,\r\n    paddingLeft: 10,\r\n    paddingRight: 10\r\n};\r\n\r\n/**\r\n * Various paths used in the UI. All paths have normalized from,\r\n * that is, backslashes on Windows host OS replaced by '/',\r\n * leading and trailing '/' removed, '//' replaced by single '/'.\r\n * All paths are meant absolute with respect to the fle system root `fsRootNode`,\r\n * even if the trailing '/' is removed.\r\n */\r\ninterface PathState {\r\n    /**\r\n     * The actually selected file or directory paths.\r\n     */\r\n    selectedPaths: string[];\r\n    /**\r\n     * Expanded directory paths in the FileTree component.\r\n     */\r\n    expandedPaths: string[];\r\n    /**\r\n     * Selected directory in the FileTree component.\r\n     */\r\n    selectedDirPath: string | null;\r\n    /**\r\n     * Current directory for children shown in FileList component.\r\n     */\r\n    currentDirPath: string;\r\n\r\n}\r\n\r\n/**\r\n * State of the file path input field.\r\n */\r\ninterface InputState {\r\n    /**\r\n     * Current value of the path input field. May not (yet) refer to any valid path at all.\r\n     */\r\n    value: string;\r\n    /**\r\n     * Whether current value is valid.\r\n     */\r\n    isValid: boolean;\r\n}\r\n\r\n\r\nconst FileFilterSelect = Select.ofType<FileFilter>();\r\n\r\n\r\nexport interface IFileDialogProps extends Omit<FileDialogOptions, 'properties'> {\r\n    isOpen?: boolean;\r\n    onClose?: (result: FileDialogResult) => any;\r\n    rootNode: FileNode;\r\n    updateFileNode: (path: string, force: boolean) => any;\r\n    createFileNode?: (path: string, name: string) => any;\r\n    renameFileNode?: (path: string, name: string) => any;\r\n    deleteFileNodes?: (paths: string[]) => any;\r\n    // dialog type\r\n    saveFile?: boolean;\r\n    // from properties\r\n    openFile?: boolean;\r\n    openDirectory?: boolean;\r\n    multiSelections?: boolean;\r\n    showHiddenFiles?: boolean;\r\n    hostOS?: HostOS;\r\n}\r\n\r\nconst FileDialog: React.FC<IFileDialogProps> = (\r\n    {\r\n        isOpen,\r\n        onClose,\r\n        rootNode,\r\n        updateFileNode,\r\n        createFileNode,\r\n        renameFileNode,\r\n        deleteFileNodes,\r\n        title,\r\n        defaultPath,\r\n        buttonLabel,\r\n        filters,\r\n        saveFile,\r\n        openFile,\r\n        openDirectory,\r\n        multiSelections,\r\n        showHiddenFiles,\r\n        hostOS,\r\n    }) => {\r\n\r\n    if ((saveFile && openFile) || (saveFile && openDirectory) || (saveFile && multiSelections)) {\r\n        throw new Error('saveFile flag cannot be used with openFile, openDirectory, multiSelections flags');\r\n    }\r\n    if (showHiddenFiles) {\r\n        // TODO (forman): recognize showHiddenFiles\r\n        console.warn('showHiddenFiles flag ignored (not implemented yet))');\r\n    }\r\n\r\n    // TODO (forman): avoid expensive computation of values, they are only needed initially\r\n    const initSelectedPaths = (defaultPath && fromPathInputValue(defaultPath, '', multiSelections, hostOS)) || [];\r\n    let initExpandedPaths = [];\r\n    initSelectedPaths.forEach(p => {\r\n        initExpandedPaths = addExpandedDirPath(initExpandedPaths, getParentPath(p, hostOS));\r\n    });\r\n    const initSelectedDirPath = initExpandedPaths.length > 0 ? initExpandedPaths[0] : null;\r\n    const initCurrentDirPath = initSelectedDirPath || '';\r\n\r\n    const [pathState, dispatchPathState] = React.useReducer(\r\n        (state: PathState, stateUpdate: Partial<PathState>) => {\r\n            return {...state, ...stateUpdate}\r\n        },\r\n        {\r\n            selectedPaths: initSelectedPaths,\r\n            expandedPaths: initExpandedPaths,\r\n            selectedDirPath: initSelectedDirPath,\r\n            currentDirPath: initCurrentDirPath,\r\n        });\r\n    const [inputState, dispatchInputState] = React.useReducer(\r\n        (state: InputState, stateUpdate: Partial<InputState>) => {\r\n            return {...state, ...stateUpdate}\r\n        },\r\n        {\r\n            value: defaultPath || '',\r\n            isValid: true\r\n        });\r\n\r\n    const [fileTreeWidth, setFileTreeWidth] = React.useState(300);\r\n    const [selectedFileFilter, setSelectedFileFilter] = React.useState(\r\n        filters && filters.length ? filters[0] : null\r\n    );\r\n\r\n    const updateCallback = React.useMemo(() => {\r\n        return (path: string) => {\r\n            updateFileNode(path, false);\r\n        };\r\n    }, [updateFileNode]);\r\n\r\n    React.useEffect(() => {\r\n        if (defaultPath) {\r\n            updateCallback(defaultPath);\r\n        }\r\n    }, [defaultPath, updateCallback]);\r\n\r\n    React.useEffect(() => {\r\n        pathState.expandedPaths.forEach(p => updateCallback(p));\r\n    }, [pathState.expandedPaths, updateCallback]);\r\n\r\n    React.useEffect(() => {\r\n        updateCallback(pathState.currentDirPath);\r\n    }, [pathState.currentDirPath, updateCallback]);\r\n\r\n    if (!isOpen) {\r\n        return null;\r\n    }\r\n\r\n    // console.log(\"FileDialog: pathState=\", pathState);\r\n\r\n    const canConfirm = () => {\r\n        return pathState.selectedPaths.length > 0 && inputState.isValid;\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        if (onClose) {\r\n            onClose({\r\n                        // Make returned path absolute. Note that pathState.selectedPaths are always normalized.\r\n                        filePaths: pathState.selectedPaths.map(p => denormalizePath(p, hostOS)),\r\n                        canceled: false\r\n                    });\r\n        }\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        if (onClose) {\r\n            onClose({\r\n                        filePaths: [],\r\n                        canceled: true\r\n                    });\r\n        }\r\n    }\r\n\r\n    const handleFileTreeWidthChange = (fileTreeWidth: number) => {\r\n        setFileTreeWidth(fileTreeWidth);\r\n    };\r\n\r\n    const canNavigateBack = () => {\r\n        // TODO (forman): implement me!\r\n        return false;\r\n    };\r\n\r\n    const handleNavigateBack = () => {\r\n        if (canNavigateBack()) {\r\n            // TODO (forman): implement me!\r\n        }\r\n    };\r\n\r\n    const canNavigateForward = () => {\r\n        return false;\r\n    };\r\n\r\n    const handleNavigateForward = () => {\r\n        if (canNavigateForward()) {\r\n            // TODO (forman): implement me!\r\n        }\r\n    };\r\n\r\n    const canNavigateUp = () => {\r\n        return pathState.currentDirPath !== '';\r\n    };\r\n\r\n    const handleNavigateUp = () => {\r\n        if (canNavigateUp()) {\r\n            const parentDir = getParentPath(pathState.currentDirPath);\r\n            dispatchPathState({\r\n                                  selectedDirPath: parentDir !== '' ? parentDir : null,\r\n                                  currentDirPath: parentDir,\r\n                              });\r\n        }\r\n    };\r\n\r\n    const canShowRecentDirs = () => {\r\n        // TODO (forman): implement me!\r\n        return false;\r\n    };\r\n\r\n    const handleShowRecentDirs = () => {\r\n        if (canShowRecentDirs()) {\r\n            // TODO (forman): implement me!\r\n        }\r\n    };\r\n\r\n    const canShowRecentPaths = () => {\r\n        // TODO (forman): implement me!\r\n        return false;\r\n    };\r\n\r\n    const handleShowRecentPaths = () => {\r\n        if (canShowRecentPaths()) {\r\n            // TODO (forman): implement me!\r\n        }\r\n    };\r\n\r\n    const canCreateDirectory = () => {\r\n        return Boolean(createFileNode);\r\n    };\r\n\r\n    const handleCreateDirectoryClick = () => {\r\n        if (canCreateDirectory()) {\r\n            // TODO (forman): enter create mode\r\n            // createFileNode!(pathState.selectedDirPath!, name);\r\n        }\r\n    };\r\n\r\n    const canRename = () => {\r\n        return Boolean(renameFileNode) && pathState.selectedPaths.length === 1;\r\n    };\r\n\r\n    const handleRenameClick = () => {\r\n        if (canRename()) {\r\n            // TODO (forman): enter rename mode\r\n            // renameFileNode!(pathState.selectedPaths[0], name);\r\n        }\r\n    };\r\n\r\n    const canDelete = () => {\r\n        return Boolean(deleteFileNodes) && pathState.selectedPaths.length > 0;\r\n    };\r\n\r\n    const handleDeleteClick = () => {\r\n        if (canDelete()) {\r\n            deleteFileNodes!(pathState.selectedPaths);\r\n        }\r\n    };\r\n\r\n    const handleSyncCurrentDir = () => {\r\n        updateFileNode(pathState.currentDirPath, true);\r\n    };\r\n\r\n    const handleSelectedDirChangeInBreadcrumb = (path: string) => {\r\n        handleSelectedDirChangeInTree(path);\r\n    };\r\n\r\n    const handleSelectedDirChangeInTree = (path: string | null) => {\r\n        if (openDirectory) {\r\n            // change selectedPaths/inputValue too\r\n            if (path !== null) {\r\n                const selectedPaths = [path];\r\n                const inputValue = toPathInputValue([getBasename(path)], multiSelections);\r\n                dispatchPathState({\r\n                                      selectedDirPath: path,\r\n                                      currentDirPath: path,\r\n                                      selectedPaths,\r\n                                  });\r\n                dispatchInputState({value: inputValue, isValid: true})\r\n            } else {\r\n                dispatchPathState({\r\n                                      selectedDirPath: null,\r\n                                      selectedPaths: [],\r\n                                  });\r\n                dispatchInputState({value: '', isValid: true})\r\n            }\r\n        } else {\r\n            // do not change selectedPaths/inputValue\r\n            if (path !== null) {\r\n                dispatchPathState({\r\n                                      selectedDirPath: path,\r\n                                      currentDirPath: path\r\n                                  });\r\n            } else {\r\n                dispatchPathState({selectedDirPath: null});\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleExpandedPathsChangeInTree = (paths: string[]) => {\r\n        dispatchPathState({expandedPaths: paths});\r\n    };\r\n\r\n    const handleSelectedPathsChangeInList = (paths: string[]) => {\r\n        dispatchPathState({\r\n                              selectedPaths: paths,\r\n                          });\r\n        dispatchInputState({\r\n                               value: toPathInputValue(paths.map(p => getBasename(p)), multiSelections),\r\n                               isValid: true\r\n                           })\r\n    };\r\n\r\n    const handleCurrentDirPathChangeInList = (path: string) => {\r\n        if (openDirectory && !openFile && !multiSelections) {\r\n            // change selectedPaths/inputValue too\r\n            dispatchPathState({\r\n                                  expandedPaths: addExpandedDirPath(pathState.expandedPaths, path),\r\n                                  selectedDirPath: path,\r\n                                  currentDirPath: path,\r\n                                  selectedPaths: [path],\r\n                              });\r\n            dispatchInputState({\r\n                                   value: toPathInputValue([getBasename(path)], multiSelections),\r\n                                   isValid: true\r\n                               })\r\n        } else {\r\n            dispatchPathState({\r\n                                  expandedPaths: addExpandedDirPath(pathState.expandedPaths, path),\r\n                                  selectedDirPath: path,\r\n                                  currentDirPath: path,\r\n                              });\r\n        }\r\n    };\r\n\r\n    const handleSelectedPathsChangeInTextField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const inputValue = event.target.value || '';\r\n        let isInputValid = true;\r\n        const selectedPaths = fromPathInputValue(inputValue, pathState.currentDirPath, multiSelections, hostOS);\r\n        if (selectedPaths.length) {\r\n            // User entered files / directories\r\n\r\n            // Add parents of selected files to expanded paths\r\n            let expandedPaths = pathState.expandedPaths;\r\n            selectedPaths.forEach(p => {\r\n                const expandedPath = getParentPath(p);\r\n                expandedPaths = addExpandedDirPath(expandedPaths, expandedPath);\r\n            });\r\n            // Check if we have a new current dir\r\n            let currentDirPath = selectedPaths.length > 0 ? getParentPath(selectedPaths[0]) : null;\r\n            if (currentDirPath !== null && getFileNode(rootNode, currentDirPath) === null) {\r\n                currentDirPath = null;\r\n            }\r\n            if (currentDirPath !== null) {\r\n                // New current directory exists\r\n\r\n                dispatchPathState({\r\n                                      selectedDirPath: currentDirPath,\r\n                                      currentDirPath,\r\n                                      expandedPaths,\r\n                                      selectedPaths,\r\n                                  });\r\n\r\n                // Check if selected files / directories exist (yet)\r\n                if (openFile || openDirectory) {\r\n                    isInputValid = !selectedPaths.find(p => getFileNode(rootNode, p) === null);\r\n                }\r\n\r\n            } else {\r\n                // New current directory doe yet exist (yet). But we'll need to update expanded paths.\r\n                dispatchPathState({selectedPaths, expandedPaths});\r\n                isInputValid = false;\r\n            }\r\n        } else {\r\n            // User entered nothing so far\r\n            dispatchPathState({selectedPaths});\r\n        }\r\n        dispatchInputState({value: inputValue, isValid: isInputValid});\r\n    }\r\n\r\n    const getBreadcrumbs = (): IBreadcrumbProps[] => {\r\n        if (pathState.currentDirPath === '') {\r\n            return [];\r\n        }\r\n        let pathComponents = pathState.currentDirPath.split('/');\r\n        return pathComponents.map((dirName, index) => {\r\n            let onClick;\r\n            if (index < pathComponents.length - 1) {\r\n                const path = pathComponents.slice(0, index + 1).join('/');\r\n                onClick = () => handleSelectedDirChangeInBreadcrumb(path);\r\n            }\r\n            return {text: dirName, onClick};\r\n        });\r\n    };\r\n\r\n    let renderActions;\r\n    if (!openFile && !openDirectory && !saveFile) {\r\n        renderActions = () => null;\r\n    }\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            title={title || getDefaultFileActionText(saveFile, openDirectory, openFile)}\r\n            confirmTitle={buttonLabel || getDefaultFileActionText(saveFile, openDirectory, openFile)}\r\n            onConfirm={handleConfirm}\r\n            onCancel={handleCancel}\r\n            canConfirm={canConfirm}\r\n            style={FILE_DIALOG_STYLE}\r\n            renderActions={renderActions}\r\n        >\r\n            <div style={FILE_CONTAINER_STYLE}>\r\n                <div style={FILE_NAV_ROW_STYLE}>\r\n                    <ButtonGroup minimal={true}>\r\n                        <Button\r\n                            disabled={!canNavigateBack()}\r\n                            onClick={handleNavigateBack}\r\n                            icon=\"arrow-left\"\r\n                        />\r\n                        <Button\r\n                            disabled={!canNavigateForward()}\r\n                            onClick={handleNavigateForward}\r\n                            icon=\"arrow-right\"\r\n                        />\r\n                        <Button\r\n                            disabled={!canNavigateUp()}\r\n                            onClick={handleNavigateUp}\r\n                            icon=\"arrow-up\"\r\n                        />\r\n                    </ButtonGroup>\r\n                    <div style={FILE_NAV_BC_STYLE}>\r\n                        <Breadcrumbs className=\"bp3-small\" items={getBreadcrumbs()}/>\r\n                    </div>\r\n                    <ButtonGroup minimal={true}>\r\n                        <Button\r\n                            disabled={!canShowRecentDirs()}\r\n                            onClick={handleShowRecentDirs}\r\n                            icon=\"caret-down\"\r\n                        />\r\n                        <Button\r\n                            onClick={handleSyncCurrentDir}\r\n                            icon=\"refresh\"\r\n                        />\r\n                    </ButtonGroup>\r\n                </div>\r\n                {(Boolean(createFileNode) || Boolean(renameFileNode) || Boolean(deleteFileNodes)) && (\r\n                    <div style={FILE_MGT_ROW_STYLE}>\r\n                        <ButtonGroup minimal={true}>\r\n                            {Boolean(createFileNode) && (\r\n                                <Tooltip\r\n                                    content={canCreateDirectory()\r\n                                             ? `Create new directory in ${pathState.currentDirPath}` : null}>\r\n                                    <Button\r\n                                        disabled={!canCreateDirectory()}\r\n                                        onClick={handleCreateDirectoryClick}\r\n                                        icon=\"folder-new\"\r\n                                        text=\"Create Directory\"\r\n                                    />\r\n                                </Tooltip>\r\n                            )}\r\n                            {Boolean(renameFileNode) && (\r\n                                <Tooltip content={canRename() ? `Rename ${pathState.selectedPaths[0]}` : null}>\r\n                                    <Button\r\n                                        disabled={!canRename()}\r\n                                        onClick={handleRenameClick}\r\n                                        icon=\"edit\"\r\n                                        text=\"Rename\"\r\n                                    />\r\n                                </Tooltip>\r\n                            )}\r\n                            {Boolean(deleteFileNodes) && (\r\n                                <Tooltip content={canDelete()\r\n                                                  ? `Delete ${pathState.selectedPaths[0]}`\r\n                                                    + (pathState.selectedPaths.length > 0 ? ', ...' : '') : null}>\r\n                                    <Button\r\n                                        disabled={!canDelete()}\r\n                                        onClick={handleDeleteClick}\r\n                                        icon=\"trash\"\r\n                                        text=\"Delete Directory\"\r\n                                    />\r\n                                </Tooltip>\r\n                            )}\r\n                        </ButtonGroup>\r\n                    </div>)}\r\n                <div style={FILE_LIST_ROW_STYLE}>\r\n                    <SplitPane dir=\"hor\" initialSize={fileTreeWidth} onChange={handleFileTreeWidthChange}>\r\n                        <FileTree\r\n                            rootNode={rootNode}\r\n                            selectedPath={pathState.selectedDirPath}\r\n                            onSelectedPathChange={handleSelectedDirChangeInTree}\r\n                            expandedPaths={pathState.expandedPaths}\r\n                            onExpandedPathsChange={handleExpandedPathsChangeInTree}\r\n                        />\r\n                        <FileList\r\n                            rootNode={rootNode}\r\n                            currentDirPath={pathState.currentDirPath}\r\n                            onCurrentDirPathChange={handleCurrentDirPathChangeInList}\r\n                            selectedPaths={pathState.selectedPaths}\r\n                            onSelectedPathsChange={handleSelectedPathsChangeInList}\r\n                            fileFilter={selectedFileFilter}\r\n                            multiSelections={multiSelections}\r\n                            openDirectory={openDirectory}\r\n                        />\r\n                    </SplitPane>\r\n                </div>\r\n                <div style={FILE_INPUT_ROW_STYLE}>\r\n                    <span>{openDirectory && !openFile ? 'Directory:' : 'Filename:'}</span>\r\n                    <input\r\n                        className={Classes.INPUT}\r\n                        style={inputState.isValid ? FILE_INPUT_STYLE : INVALID_FILE_INPUT_STYLE}\r\n                        type=\"text\"\r\n                        value={inputState.value}\r\n                        onChange={handleSelectedPathsChangeInTextField}\r\n                    />\r\n                    <ButtonGroup>\r\n                        <Button\r\n                            disabled={!canShowRecentPaths()}\r\n                            onClick={handleShowRecentPaths}\r\n                            icon=\"caret-down\"\r\n                            minimal={true}\r\n                        />\r\n                        {filters &&\r\n                         <FileFilterSelect\r\n                             popoverProps={{minimal: true}}\r\n                             items={filters}\r\n                             filterable={false}\r\n                             itemRenderer={fileFilterItemRenderer}\r\n                             onItemSelect={filter => setSelectedFileFilter(filter)}\r\n                         >\r\n                             <Button\r\n                                 text={getFileFilterText(selectedFileFilter)}\r\n                                 rightIcon=\"caret-down\"\r\n                             />\r\n                         </FileFilterSelect>\r\n                        }\r\n                    </ButtonGroup>\r\n                </div>\r\n            </div>\r\n        </ModalDialog>\r\n    );\r\n};\r\n\r\nexport default FileDialog;\r\n\r\nconst fileFilterItemRenderer: ItemRenderer<FileFilter> = (fileFilter: FileFilter, itemProps: IItemRendererProps) => {\r\n    const {modifiers, handleClick} = itemProps;\r\n    return (\r\n        <MenuItem\r\n            active={modifiers.active}\r\n            disabled={modifiers.disabled}\r\n            key={fileFilter.name}\r\n            text={fileFilter.name}\r\n            label={`(${fileFilter.extensions.map(e => \"*.\" + e).join(\", \")})`}\r\n            onClick={handleClick}\r\n        />\r\n    );\r\n};\r\n\r\nfunction getFileFilterText(fileFilter: FileFilter | null): string {\r\n    fileFilter = fileFilter || ALL_FILES_FILTER;\r\n    return `${fileFilter.name} (${fileFilter.extensions.map(e => \"*.\" + e).join(\", \")})`;\r\n}\r\n\r\nfunction getDefaultFileActionText(saveFile?: boolean, openDirectory?: boolean, openFile?: boolean): string {\r\n    if (saveFile) {\r\n        return 'Save File';\r\n    }\r\n    if (openDirectory && !openFile) {\r\n        return 'Select Directory';\r\n    }\r\n    return 'Open File';\r\n}\r\n","import * as React from 'react';\r\nimport { OpenDialogOptions, OpenDialogResult } from '../types';\r\n\r\nimport FileDialog from './FileDialog';\r\nimport { FileNode } from './FileNode';\r\n\r\n\r\nexport interface IOpenDialogProps extends OpenDialogOptions {\r\n    isOpen?: boolean;\r\n    onClose?: (result: OpenDialogResult) => any;\r\n    rootNode: FileNode;\r\n    updateFileNode: (path: string, force: boolean) => any;\r\n}\r\n\r\nconst OpenDialog: React.FC<IOpenDialogProps> = (props) => {\r\n    const properties = new Set(props.properties);\r\n    return (\r\n        <FileDialog\r\n            {...props}\r\n            saveFile={false}\r\n            // openFile={properties.has('openFile') || !properties.has('openDirectory')}\r\n            openFile={properties.has('openFile')}\r\n            openDirectory={properties.has('openDirectory')}\r\n            multiSelections={properties.has('multiSelections')}\r\n            showHiddenFiles={properties.has('showHiddenFiles')}\r\n        />\r\n    );\r\n};\r\n\r\nexport default OpenDialog;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { State } from '../state';\r\nimport OpenDialog, { IOpenDialogProps } from \"../components/desktop/fs/OpenDialog\";\r\nimport * as actions from \"../actions\";\r\n\r\n\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        ...state.control.directorySelectDialog.options,\r\n        isOpen: state.control.directorySelectDialog.isOpen,\r\n        onClose: state.control.directorySelectDialog.onClose,\r\n        rootNode: state.data.fsRootNode,\r\n        hostOS: state.communication.webAPIServiceInfo.hostOS,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateFileNode: actions.updateFileNode,\r\n};\r\n\r\nconst DirectorySelectDialog: React.FC<IOpenDialogProps> = (props) => {\r\n    return (props.isOpen) ? (<OpenDialog {...props}/>) : null;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DirectorySelectDialog);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { State } from '../state';\r\nimport OpenDialog, { IOpenDialogProps } from \"../components/desktop/fs/OpenDialog\";\r\nimport * as actions from \"../actions\";\r\n\r\n\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        ...state.control.fileOpenDialog.options,\r\n        isOpen: state.control.fileOpenDialog.isOpen,\r\n        onClose: state.control.fileOpenDialog.onClose,\r\n        rootNode: state.data.fsRootNode,\r\n        hostOS: state.communication.webAPIServiceInfo.hostOS,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateFileNode: actions.updateFileNode,\r\n};\r\n\r\nconst FileOpenDialog: React.FC<IOpenDialogProps> = (props) => {\r\n    return (props.isOpen) ? (<OpenDialog {...props}/>) : null;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileOpenDialog);\r\n","import * as React from 'react';\r\nimport { FileNode } from './FileNode';\r\n\r\nimport FileDialog from './FileDialog';\r\nimport { FileDialogResult, SaveDialogOptions, SaveDialogResult } from '../types';\r\n\r\n\r\nexport interface ISaveDialogProps extends SaveDialogOptions {\r\n    isOpen?: boolean;\r\n    onClose?: (result: SaveDialogResult) => any;\r\n    rootNode: FileNode;\r\n    updateFileNode: (path: string, force: boolean) => any;\r\n}\r\n\r\nconst SaveDialog: React.FC<ISaveDialogProps> = ({onClose, ...props}) => {\r\n    const properties = new Set(props.properties);\r\n    const handleClose = (result: FileDialogResult) => {\r\n        onClose({\r\n                    canceled: result.canceled,\r\n                    filePath: !result.canceled && result.filePaths.length > 0 ? result.filePaths[0] : null\r\n                });\r\n    };\r\n    return (\r\n        <FileDialog\r\n            {...props}\r\n            onClose={handleClose}\r\n            saveFile={true}\r\n            openFile={false}\r\n            openDirectory={false}\r\n            multiSelections={false}\r\n            showHiddenFiles={properties.has(\"showHiddenFiles\")}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SaveDialog;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { State } from '../state';\r\nimport SaveDialog, { ISaveDialogProps } from \"../components/desktop/fs/SaveDialog\";\r\nimport * as actions from \"../actions\";\r\n\r\n\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        ...state.control.fileSaveDialog.options,\r\n        isOpen: state.control.fileSaveDialog.isOpen,\r\n        onClose: state.control.fileSaveDialog.onClose,\r\n        rootNode: state.data.fsRootNode,\r\n        hostOS: state.communication.webAPIServiceInfo.hostOS,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateFileNode: actions.updateFileNode,\r\n};\r\n\r\nconst FileSaveDialog: React.FC<ISaveDialogProps> = (props) => {\r\n    return (props.isOpen) ? (<SaveDialog {...props}/>) : null;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileSaveDialog);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { State } from '../state';\r\nimport OpenDialog, { IOpenDialogProps } from \"../components/desktop/fs/OpenDialog\";\r\nimport * as actions from \"../actions\";\r\n\r\n\r\nfunction mapStateToProps(state: State) {\r\n    return {\r\n        ...state.control.fileBrowseDialog.options,\r\n        isOpen: state.control.fileBrowseDialog.isOpen,\r\n        onClose: state.control.fileBrowseDialog.onClose,\r\n        rootNode: state.data.fsRootNode,\r\n        hostOS: state.communication.webAPIServiceInfo.hostOS,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateFileNode: actions.updateFileNode,\r\n};\r\n\r\nconst FileBrowseDialog: React.FC<IOpenDialogProps> = (props) => {\r\n    let properties = props.properties;\r\n    if (properties) {\r\n        const propSet = new Set(properties);\r\n        propSet.delete(\"openFile\");\r\n        propSet.delete(\"openDirectory\");\r\n        properties = Array.from(propSet);\r\n    } else {\r\n        properties = [];\r\n    }\r\n    return (props.isOpen) ? (<OpenDialog title=\"Browse Files\" {...props} properties={properties}/>) : null;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileBrowseDialog);\r\n","import * as React from 'react';\r\nimport { Button, Checkbox, Intent } from '@blueprintjs/core';\r\nimport { IconNames } from '@blueprintjs/icons';\r\n\r\nimport { isDefined } from '../../../common/types';\r\nimport { ModalDialog } from '../ModalDialog';\r\nimport { MessageBoxOptions, MessageBoxResult } from './types';\r\n\r\n\r\nexport interface IMessageBoxProps extends MessageBoxOptions {\r\n    isOpen?: boolean;\r\n    onClose?: (result: MessageBoxResult | null) => any;\r\n}\r\n\r\nconst icons = {\r\n    none: undefined,\r\n    info: IconNames.INFO_SIGN,\r\n    error: IconNames.ERROR,\r\n    question: IconNames.CONFIRM,\r\n    warning: IconNames.WARNING_SIGN,\r\n}\r\n\r\nexport const MessageBox: React.FC<IMessageBoxProps> = (\r\n    {\r\n        isOpen,\r\n        onClose,\r\n        type,\r\n        title,\r\n        message,\r\n        detail,\r\n        buttons,\r\n        checkboxLabel,\r\n        checkboxChecked,\r\n        defaultId,\r\n        cancelId,\r\n    }) => {\r\n    const [_checkboxChecked, setCheckboxChecked] = React.useState<boolean>((isDefined(checkboxChecked) && checkboxChecked));\r\n    const hasCheckbox = Boolean(checkboxLabel);\r\n    if (!isOpen) {\r\n        return null;\r\n    }\r\n    const handleButtonClick = (buttonIndex: number) => {\r\n        if (onClose) {\r\n            onClose({buttonIndex, checkboxChecked: _checkboxChecked});\r\n        }\r\n    }\r\n    const handleCancel = () => {\r\n        if (onClose) {\r\n            onClose(null);\r\n        }\r\n    }\r\n\r\n    const renderActions = () => {\r\n        const actions = (buttons || [\"OK\"]).map(\r\n            (buttonText, buttonIndex) => {\r\n                const intent = buttonIndex === defaultId ? Intent.PRIMARY : Intent.NONE;\r\n                if (buttonIndex === cancelId) {\r\n                    return <Button intent={intent} onClick={handleCancel}>{buttonText}</Button>;\r\n                } else {\r\n                    return <Button intent={intent} onClick={() => handleButtonClick(buttonIndex)}>{buttonText}</Button>;\r\n                }\r\n            }\r\n        );\r\n        return actions;\r\n    }\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        setCheckboxChecked(event.target.checked);\r\n    }\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            title={title}\r\n            icon={icons[type]}\r\n            onCancel={handleCancel}\r\n            renderActions={renderActions}\r\n        >\r\n            <p>{message}</p>\r\n            <p className=\"bp3-text-muted\">{detail}</p>\r\n            {hasCheckbox && <p><Checkbox label={checkboxLabel} onChange={handleCheckboxChange}/></p>}\r\n        </ModalDialog>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { connect, Dispatch } from 'react-redux';\r\n\r\nimport { State } from '../state';\r\nimport { IMessageBoxProps, MessageBox } from '../components/desktop/MessageBox';\r\n\r\n\r\ninterface IDispatch {\r\n    dispatch: Dispatch<State>;\r\n}\r\n\r\nfunction mapStateToProps(state: State): IMessageBoxProps {\r\n    if (state.control.messageBox) {\r\n        return {\r\n            isOpen: state.control.messageBox.isOpen,\r\n            onClose: state.control.messageBox.onClose,\r\n            ...state.control.messageBox.options,\r\n        };\r\n    } else {\r\n        return {\r\n            isOpen: false,\r\n            message: '',\r\n        };\r\n    }\r\n}\r\n\r\nconst _MessageBox: React.FC<IMessageBoxProps & IDispatch> = (props) => {\r\n    return (<MessageBox {...props}/>);\r\n};\r\n\r\nexport default connect(mapStateToProps)(_MessageBox);\r\n","import { IconName } from '@blueprintjs/icons';\r\nimport * as React from 'react'\r\nimport { CSSProperties } from 'react'\r\nimport { Colors, Icon, PopoverPosition, Tooltip, } from '@blueprintjs/core';\r\nimport { Splitter } from './Splitter';\r\n\r\n\r\nexport interface PanelContainerLayout {\r\n    horPos: number;\r\n    verPos: number;\r\n}\r\n\r\nexport interface IPanelContainerProps {\r\n    position?: 'left' | 'right';\r\n    selectedTopPanelId?: string | null;\r\n    selectedBottomPanelId?: string | null;\r\n    onSelectedTopPanelChange?: (panelId: string | null) => void;\r\n    onSelectedBottomPanelChange?: (panelId: string | null) => void;\r\n    layout: PanelContainerLayout;\r\n    onLayoutChange?: (layout: PanelContainerLayout) => void;\r\n    undockedMode?: boolean;\r\n}\r\n\r\nexport interface IPanelContainerState {\r\n    selectedTopPanelId: string | null;\r\n    selectedBottomPanelId: string | null;\r\n    layout: PanelContainerLayout;\r\n}\r\n\r\n/**\r\n * A PanelContainer comprises Panels.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class PanelContainer extends React.PureComponent<IPanelContainerProps, IPanelContainerState> {\r\n\r\n    static readonly PANEL_ICON_SIZE = 20; // ==> because bp3-icon-large = 20px\r\n    static readonly PANEL_ICON_PADDING = 8;\r\n    static readonly PANEL_BAR_SIZE = 2 * PanelContainer.PANEL_ICON_PADDING + PanelContainer.PANEL_ICON_SIZE;\r\n    static readonly PANEL_BAR_PADDING = 8;\r\n    static readonly PANEL_PANE_PADDING = 4;\r\n    static readonly PANEL_BODY_PADDING = 2;\r\n\r\n\r\n    constructor(props: IPanelContainerProps) {\r\n        super(props);\r\n        this.onTopPanelSelected = this.onTopPanelSelected.bind(this);\r\n        this.onBottomPanelSelected = this.onBottomPanelSelected.bind(this);\r\n        this.onTopPanelClose = this.onTopPanelClose.bind(this);\r\n        this.onBottomPanelClose = this.onBottomPanelClose.bind(this);\r\n        this.onVerSplitterPosChange = this.onVerSplitterPosChange.bind(this);\r\n        this.onHorSplitterPosChange = this.onHorSplitterPosChange.bind(this);\r\n        this.state = PanelContainer.mapPropsToState(props);\r\n    }\r\n\r\n    componentWillReceiveProps(props: IPanelContainerProps) {\r\n        this.setState(PanelContainer.mapPropsToState(props));\r\n    }\r\n\r\n    static mapPropsToState(props: IPanelContainerProps): IPanelContainerState {\r\n        return {\r\n            selectedTopPanelId: props.selectedTopPanelId,\r\n            selectedBottomPanelId: props.selectedBottomPanelId,\r\n            layout: props.layout,\r\n        };\r\n    }\r\n\r\n    private onTopPanelSelected(panelId: string) {\r\n        const isCurrent = this.state.selectedTopPanelId === panelId;\r\n        this.setState({selectedTopPanelId: isCurrent ? null : panelId} as any, () => {\r\n            if (this.props.onSelectedTopPanelChange) {\r\n                this.props.onSelectedTopPanelChange(this.state.selectedTopPanelId);\r\n            }\r\n        });\r\n    }\r\n\r\n    private onBottomPanelSelected(panelId: string) {\r\n        const isCurrent = this.state.selectedBottomPanelId === panelId;\r\n        this.setState({selectedBottomPanelId: isCurrent ? null : panelId} as any, () => {\r\n            if (this.props.onSelectedBottomPanelChange) {\r\n                this.props.onSelectedBottomPanelChange(this.state.selectedBottomPanelId);\r\n            }\r\n        });\r\n    }\r\n\r\n    private onTopPanelClose() {\r\n        this.onTopPanelSelected(null);\r\n    }\r\n\r\n    private onBottomPanelClose() {\r\n        this.onBottomPanelSelected(null);\r\n    }\r\n\r\n    private onVerSplitterPosChange(delta: number) {\r\n        let verPos = this.state.layout.verPos + delta;\r\n        this.setLayout({...this.state.layout, verPos});\r\n    }\r\n\r\n    private onHorSplitterPosChange(delta: number) {\r\n        let horPos = this.state.layout.horPos;\r\n        if ((this.props.position || 'left') === 'left') {\r\n            horPos += delta;\r\n        } else {\r\n            horPos -= delta;\r\n        }\r\n        this.setLayout({...this.state.layout, horPos});\r\n    }\r\n\r\n    private setLayout(layout: PanelContainerLayout) {\r\n        this.setState({layout} as any, () => {\r\n            if (this.props.onLayoutChange) {\r\n                this.props.onLayoutChange(layout);\r\n            }\r\n        });\r\n    }\r\n\r\n    private getSelectedTopPanel(): JSX.Element | null {\r\n        return this.findPanel(this.state.selectedTopPanelId);\r\n    }\r\n\r\n    private getSelectedBottomPanel(): JSX.Element | null {\r\n        return this.findPanel(this.state.selectedBottomPanelId);\r\n    }\r\n\r\n    private findPanel(id: string): JSX.Element | null {\r\n        if (!id) {\r\n            return null;\r\n        }\r\n        let selectedPanel: JSX.Element | null = null;\r\n        React.Children.forEach(this.props.children, (child: React.ReactChild) => {\r\n            const panel = child as JSX.Element;\r\n            if (panel.props && panel.props.id === id) {\r\n                selectedPanel = panel;\r\n            }\r\n        });\r\n        return selectedPanel;\r\n    }\r\n\r\n    render() {\r\n        const panelBar = <PanelBar panels={React.Children.toArray(this.props.children) as JSX.Element[]}\r\n                                   position={this.props.position}\r\n                                   selectedTopPanelId={this.state.selectedTopPanelId}\r\n                                   selectedBottomPanelId={this.state.selectedBottomPanelId}\r\n                                   onTopPanelSelected={this.onTopPanelSelected}\r\n                                   onBottomPanelSelected={this.onBottomPanelSelected}/>;\r\n\r\n        const selectedTopPanel = this.getSelectedTopPanel();\r\n        const selectedBottomPanel = this.getSelectedBottomPanel();\r\n\r\n        const panelPaneWidth = this.state.layout.horPos;\r\n        let panelPaneHeight: string | number = '100%';\r\n\r\n        let topPanelPane;\r\n        if (selectedTopPanel) {\r\n            if (selectedTopPanel && selectedBottomPanel) {\r\n                panelPaneHeight = this.state.layout.verPos;\r\n            }\r\n            const topPanelPaneStyle = {\r\n                width: panelPaneWidth,\r\n                //maxWidth: panelPaneWidth,\r\n                height: panelPaneHeight,\r\n                //maxHeight: panelPaneHeight,\r\n            };\r\n            topPanelPane = this.renderPanelPane(selectedTopPanel, topPanelPaneStyle, this.onTopPanelClose);\r\n        }\r\n\r\n        let bottomPanelPane;\r\n        if (selectedBottomPanel) {\r\n            if (selectedTopPanel && selectedBottomPanel) {\r\n                panelPaneHeight = `calc(100% - ${this.state.layout.verPos + 4}px)`;\r\n            }\r\n            const bottomPanelPaneStyle = {\r\n                width: panelPaneWidth,\r\n                //maxWidth: panelPaneWidth,\r\n                height: panelPaneHeight,\r\n                //maxHeight: panelPaneHeight,\r\n            };\r\n            bottomPanelPane = this.renderPanelPane(selectedBottomPanel, bottomPanelPaneStyle, this.onBottomPanelClose);\r\n        }\r\n\r\n        let panelPane;\r\n        if (topPanelPane && bottomPanelPane) {\r\n            panelPane = this.renderTwoPanelsPane(topPanelPane, bottomPanelPane);\r\n        } else if (topPanelPane) {\r\n            panelPane = topPanelPane;\r\n        } else if (bottomPanelPane) {\r\n            panelPane = bottomPanelPane;\r\n        }\r\n\r\n        let resizablePanelPane;\r\n        if (panelPane) {\r\n            resizablePanelPane = this.renderResizablePanelPane(panelPane);\r\n        }\r\n\r\n        // Important: panelContainerStyle must have flex=\"none\"\r\n        const panelContainerStyle = {\r\n            display: 'flex',\r\n            flexFlow: 'row nowrap',\r\n            flex: 'none',\r\n            maxHeight: '100%',\r\n            //opacity: .5,\r\n        };\r\n\r\n        const position = this.props.position || 'left';\r\n        if (position === 'left') {\r\n            return (\r\n                <div style={panelContainerStyle}>\r\n                    {panelBar}\r\n                    {resizablePanelPane}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={panelContainerStyle}>\r\n                    {resizablePanelPane}\r\n                    {panelBar}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    private renderPanelPane(panel: JSX.Element, style: any, onClose: (panelId: string) => void) {\r\n        return (<PanelPane panel={panel}\r\n                           onClose={onClose}\r\n                           position={this.props.position}\r\n                           style={style}/>);\r\n    }\r\n\r\n    private renderTwoPanelsPane(topPanelPane, bottomPanelPane) {\r\n        const verSplitter = <Splitter dir=\"ver\" onChange={this.onVerSplitterPosChange}/>;\r\n        return (\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                {topPanelPane}\r\n                {verSplitter}\r\n                {bottomPanelPane}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderResizablePanelPane(panelPane) {\r\n        const undockedMode = this.props.undockedMode || false;\r\n        const position = this.props.position || 'left';\r\n\r\n        let undockedModeStyle;\r\n        if (undockedMode) {\r\n            if (position === 'left') {\r\n                undockedModeStyle = {\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: PanelContainer.PANEL_BAR_SIZE,\r\n                    backgroundColor: PANEL_UNDOCKED_BACKGROUND_COLOR,\r\n                    zIndex: 5,\r\n                };\r\n            } else {\r\n                undockedModeStyle = {\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    right: PanelContainer.PANEL_BAR_SIZE,\r\n                    backgroundColor: PANEL_UNDOCKED_BACKGROUND_COLOR,\r\n                    zIndex: 5,\r\n                };\r\n            }\r\n        }\r\n\r\n        const resizablePanelPaneStyle = {\r\n            paddingTop: PanelContainer.PANEL_PANE_PADDING,\r\n            paddingLeft: position === 'left' ? PanelContainer.PANEL_PANE_PADDING : 0,\r\n            paddingRight: position === 'left' ? 0 : PanelContainer.PANEL_PANE_PADDING,\r\n            flex: 'auto',\r\n            display: 'flex',\r\n            flexFlow: 'row nowrap',\r\n            maxHeight: '100%',\r\n            ...undockedModeStyle\r\n        };\r\n\r\n        const horSplitter = <Splitter dir=\"hor\" onChange={this.onHorSplitterPosChange}/>;\r\n\r\n        if (position === 'left') {\r\n            return (\r\n                <div style={resizablePanelPaneStyle}>\r\n                    {panelPane}\r\n                    {horSplitter}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={resizablePanelPaneStyle}>\r\n                    {horSplitter}\r\n                    {panelPane}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\ninterface IPanelHeaderProps {\r\n    id: string;\r\n    icon: IconName;\r\n    title: string;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction PanelHeader(props: IPanelHeaderProps): JSX.Element | null {\r\n    const panelIcon = <Icon icon={props.icon} className={'cate-panel-header-item'}/>;\r\n    const panelTitle = <span className={'cate-panel-text cate-panel-header-item'}>{props.title.toUpperCase()}</span>;\r\n\r\n    const panelCloseIcon = (\r\n        <Icon icon={'cross'} className={'cate-icon-small cate-panel-header-item'} onClick={props.onClose}/>\r\n    );\r\n\r\n    return (\r\n        <div className=\"cate-panel-header\" style={{flex: 'none'}}>\r\n            {panelIcon}\r\n            {panelTitle}\r\n            {/*{panelMenuIcon}*/}\r\n            {panelCloseIcon}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PANEL_BAR_ITEM_BASE_STYLE = {padding: PanelContainer.PANEL_ICON_PADDING};\r\nconst PANEL_BAR_ITEM_NORMAL_STYLE = {...PANEL_BAR_ITEM_BASE_STYLE, color: Colors.GRAY4};\r\nconst PANEL_BAR_ITEM_SELECTED_STYLE = {\r\n    ...PANEL_BAR_ITEM_BASE_STYLE,\r\n    color: Colors.WHITE,\r\n    backgroundColor: Colors.DARK_GRAY5\r\n};\r\n\r\n// This is Colors.DARK_GRAY5 with 0.5 opacity\r\nconst PANEL_UNDOCKED_BACKGROUND_COLOR = 'rgba(57, 75, 89, 0.5)';\r\n\r\nconst TOP_PANEL_BAR_STYLE = {flex: 'none', listStyleType: 'none', padding: 0, margin: 0, border: 'none'};\r\nconst BOTTOM_PANEL_BAR_STYLE = {flex: 'none', listStyleType: 'none', padding: 0, margin: 0, border: 'none'};\r\nconst SPACER_STYLE = {flex: 'auto'};\r\nconst CONTAINER_STYLE: CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 'none',\r\n    maxHeight: '100%',\r\n    minWidth: PanelContainer.PANEL_BAR_SIZE,\r\n    overflow: 'hidden',\r\n    backgroundColor: Colors.DARK_GRAY2,\r\n    paddingTop: PanelContainer.PANEL_BAR_PADDING,\r\n    paddingBottom: PanelContainer.PANEL_BAR_PADDING,\r\n};\r\nconst PANEL_BUTTON_STYLE: CSSProperties = {textAlign: 'center', verticalAlign: 'middle'};\r\n\r\nconst PANEL_BODY_CONTAINER_STYLE: CSSProperties = {\r\n    flex: 1,\r\n    padding: PanelContainer.PANEL_BODY_PADDING,\r\n    overflow: 'auto',\r\n};\r\n\r\n\r\ninterface IPanelBarProps {\r\n    panels: JSX.Element[];\r\n    selectedTopPanelId: string | null;\r\n    selectedBottomPanelId: string | null;\r\n    onTopPanelSelected: (panelId: string) => void;\r\n    onBottomPanelSelected: (panelId: string) => void;\r\n    position: 'left' | 'right';\r\n}\r\n\r\nfunction PanelBar(props: IPanelBarProps) {\r\n    const position = props.position || 'left';\r\n    const tooltipPos = position === 'left' ? PopoverPosition.RIGHT : PopoverPosition.LEFT;\r\n    const panels = props.panels || [];\r\n\r\n    function renderPanelButton(panel, selectedPanelId: string) {\r\n        const panelId: string = panel.props.id;\r\n        const panelTitle: string = panel.props.title;\r\n        const panelIcon: IconName = panel.props.icon as IconName;\r\n        const selected = panelId === selectedPanelId;\r\n        const style = selected ? PANEL_BAR_ITEM_SELECTED_STYLE : PANEL_BAR_ITEM_NORMAL_STYLE;\r\n        const panelPosition: string = panel.props.position || 'top';\r\n        const onClick = () => panelPosition === 'top' ? props.onTopPanelSelected(panelId) : props.onBottomPanelSelected(panelId);\r\n        return (\r\n            <li key={panelId}\r\n                onClick={onClick}\r\n                style={style}>\r\n                <Tooltip content={panelTitle} position={tooltipPos} hoverOpenDelay={1500}>\r\n                    <span style={PANEL_BUTTON_STYLE}><Icon icon={panelIcon} iconSize={PanelContainer.PANEL_ICON_SIZE}/></span>\r\n                </Tooltip>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    //noinspection JSMismatchedCollectionQueryUpdate\r\n    const topPanelButtons: JSX.Element[] = [];\r\n    //noinspection JSMismatchedCollectionQueryUpdate\r\n    const bottomPanelButtons: JSX.Element[] = [];\r\n    for (let panel of panels) {\r\n        if (!panel.props || !panel.props.id) {\r\n            console.error('PanelBar children must be of type Panel');\r\n            continue;\r\n        }\r\n        const panelPosition: string = panel.props.position || 'top';\r\n        if (panelPosition === 'top') {\r\n            topPanelButtons.push(renderPanelButton(panel, props.selectedTopPanelId));\r\n        } else {\r\n            bottomPanelButtons.push(renderPanelButton(panel, props.selectedBottomPanelId));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={CONTAINER_STYLE}>\r\n            <ul style={TOP_PANEL_BAR_STYLE}>\r\n                {topPanelButtons}\r\n            </ul>\r\n            <div style={SPACER_STYLE}/>\r\n            <ul style={BOTTOM_PANEL_BAR_STYLE}>\r\n                {bottomPanelButtons}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface IPanelPaneProps {\r\n    position: 'left' | 'right';\r\n    style?: { [key: string]: any };\r\n    panel: JSX.Element | null;\r\n    onClose: (panelId: string) => void;\r\n}\r\n\r\nfunction PanelPane(props: IPanelPaneProps) {\r\n    const panel = props.panel;\r\n    if (!panel || !panel.props || !panel.props.body) {\r\n        return null;\r\n    }\r\n\r\n    const panelId = panel.props.id;\r\n    const panelBody = panel.props.body;\r\n\r\n    let panelParentStyle: CSSProperties = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch',\r\n        ...props.style,\r\n    };\r\n\r\n    return (\r\n        <div style={panelParentStyle}>\r\n            <PanelHeader\r\n                id={panelId}\r\n                title={panel.props.title}\r\n                icon={panel.props.icon}\r\n                onClose={() => props.onClose(panelId)}\r\n            />\r\n            <div style={PANEL_BODY_CONTAINER_STYLE}>\r\n                {panelBody}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { IconName } from '@blueprintjs/icons';\r\nimport * as React from 'react'\r\n\r\nexport interface IPanelProps {\r\n    id: string;\r\n    title: string;\r\n    icon: IconName;\r\n    body?: JSX.Element | null;\r\n    position?: 'top' | 'bottom';\r\n}\r\n\r\n/**\r\n * A Panel is a child element of a PanelContainer.\r\n *\r\n * @author Norman Fomferra\r\n */\r\nexport class Panel extends React.PureComponent<IPanelProps> {\r\n\r\n    //noinspection JSMethodCanBeStatic\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { Colors, Icon, IconName, Menu, MenuItem, NonIdealState, Popover, PopoverPosition, } from '@blueprintjs/core';\r\nimport { SplitDir, Splitter } from './Splitter';\r\nimport {\r\n    findMoveTargetViewIds,\r\n    isViewSplitState,\r\n    ViewLayoutState,\r\n    ViewPanelState,\r\n    ViewPath,\r\n    ViewRenderer,\r\n    ViewSplitState,\r\n    ViewState\r\n} from './ViewState';\r\n\r\n/**\r\n * Mapping from view type name to ViewRenderer\r\n */\r\nexport type ViewRenderMap = { [viewType: string]: ViewRenderer<any> };\r\n/**\r\n * Mapping from view id to ViewState\r\n */\r\nexport type ViewMap = { [viewId: string]: ViewState<any> };\r\n\r\ninterface IViewManagerProps {\r\n    viewRenderMap: ViewRenderMap;\r\n    viewLayout: ViewLayoutState;\r\n    views: ViewState<any>[];\r\n    activeView: ViewState<any> | null;\r\n    noViewsDescription?: string | null;\r\n    noViewsAction?: JSX.Element | null;\r\n    noViewsVisual?: IconName | JSX.Element;\r\n    onSelectView: (viewPath: ViewPath, viewId: string) => void;\r\n    onCloseView: (viewPath: ViewPath, viewId: string) => void;\r\n    onCloseAllViews: (viewPath: ViewPath) => void;\r\n    onMoveView: (sourceViewId: string, placement: 'before' | 'after', targetViewId: string) => void;\r\n    onSplitViewPanel: (viewPath: ViewPath, dir: SplitDir, pos: number) => void;\r\n    onChangeViewSplitPos: (viewPath: ViewPath, delta: number) => void;\r\n}\r\n\r\ninterface IViewManagerState {\r\n}\r\n\r\nexport class ViewManager extends React.PureComponent<IViewManagerProps, IViewManagerState> {\r\n    static readonly NO_VIEW_CONTAINER_STYLE = {\r\n        width: '100%',\r\n        height: '100%',\r\n        flex: 'auto'\r\n    };\r\n    static readonly HOR_SPLIT_CONTAINER_STYLE = {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexFlow: 'row nowrap',\r\n        flex: 'auto',\r\n        boxSizing: 'border-box',\r\n    };\r\n    static readonly VER_SPLIT_CONTAINER_STYLE = {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        flex: 'auto',\r\n        boxSizing: 'border-box',\r\n    };\r\n\r\n    private viewMap: ViewMap;\r\n\r\n    constructor(props: IViewManagerProps) {\r\n        super(props);\r\n        this.viewMap = ViewManager.createViewMap(this.props.views);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IViewManagerProps): void {\r\n        this.viewMap = ViewManager.createViewMap(nextProps.views);\r\n    }\r\n\r\n    static createViewMap(views: ViewState<any>[]) {\r\n        const map = {};\r\n        views.forEach(view => {\r\n            map[view.id] = view;\r\n        });\r\n        return map;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.views.length) {\r\n            return this.renderNoViews();\r\n        }\r\n        if (isViewSplitState(this.props.viewLayout)) {\r\n            return this.renderViewSplit(this.props.viewLayout as ViewSplitState, '');\r\n        } else {\r\n            return this.renderViewPanel(this.props.viewLayout as ViewPanelState, '');\r\n        }\r\n    }\r\n\r\n    renderNoViews() {\r\n        return (\r\n            <div style={ViewManager.NO_VIEW_CONTAINER_STYLE}>\r\n                <NonIdealState\r\n                    title=\"No views\"\r\n                    description={this.props.noViewsDescription}\r\n                    action={this.props.noViewsAction}\r\n                    icon={this.props.noViewsVisual}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderViewSplit(viewSplit: ViewSplitState, viewPath: ViewPath) {\r\n\r\n        let renderedLayout1;\r\n        let layout1 = viewSplit.layouts[0];\r\n        if (isViewSplitState(layout1)) {\r\n            renderedLayout1 = this.renderViewSplit(layout1 as ViewSplitState, viewPath + '0');\r\n        } else {\r\n            renderedLayout1 = this.renderViewPanel(layout1 as ViewPanelState, viewPath + '0');\r\n        }\r\n\r\n        let renderedLayout2;\r\n        let layout2 = viewSplit.layouts[1];\r\n        if (isViewSplitState(layout2)) {\r\n            renderedLayout2 = this.renderViewSplit(layout2 as ViewSplitState, viewPath + '1');\r\n        } else {\r\n            renderedLayout2 = this.renderViewPanel(layout2 as ViewPanelState, viewPath + '1');\r\n        }\r\n\r\n        if (renderedLayout1 && renderedLayout2) {\r\n            let containerStyle;\r\n            let childContainer1Style;\r\n            let childContainer2Style;\r\n            const splitterSize = 4; // px\r\n            if (viewSplit.dir === 'hor') {\r\n                containerStyle = ViewManager.HOR_SPLIT_CONTAINER_STYLE;\r\n                let width1 = viewSplit.pos;\r\n                let width2 = `calc(100% - ${width1 + splitterSize}px)`;\r\n                childContainer1Style = {flex: 'none', width: width1, height: '100%'};\r\n                childContainer2Style = {flex: 'auto', width: width2, height: '100%'};\r\n            } else {\r\n                containerStyle = ViewManager.VER_SPLIT_CONTAINER_STYLE;\r\n                let height1 = viewSplit.pos;\r\n                let height2 = `calc(100% - ${height1 + splitterSize}px)`;\r\n                childContainer1Style = {flex: 'none', width: '100%', height: height1};\r\n                childContainer2Style = {flex: 'auto', width: '100%', height: height2};\r\n            }\r\n\r\n            return (\r\n                <div style={containerStyle}>\r\n                    <div style={childContainer1Style}>\r\n                        {renderedLayout1}\r\n                    </div>\r\n                    <Splitter dir={viewSplit.dir}\r\n                              onChange={(delta: number) => this.props.onChangeViewSplitPos(viewPath, delta)}/>\r\n                    <div style={childContainer2Style}>\r\n                        {renderedLayout2}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (renderedLayout1) {\r\n            return renderedLayout1;\r\n        } else if (renderedLayout2) {\r\n            return renderedLayout2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderViewPanel(viewPanel: ViewPanelState, viewPath: ViewPath) {\r\n        return (\r\n            <ViewPanel\r\n                viewLayout={this.props.viewLayout}\r\n                viewRenderMap={this.props.viewRenderMap}\r\n                viewMap={this.viewMap}\r\n                activeView={this.props.activeView}\r\n                viewPath={viewPath}\r\n                viewIds={viewPanel.viewIds}\r\n                selectedViewId={viewPanel.selectedViewId}\r\n                onSelectView={this.props.onSelectView}\r\n                onCloseView={this.props.onCloseView}\r\n                onCloseAllViews={this.props.onCloseAllViews}\r\n                onMoveView={this.props.onMoveView}\r\n                onSplitViewPanel={this.props.onSplitViewPanel}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// ViewPanel\r\n\r\ninterface IViewPanelProps {\r\n    viewLayout: ViewLayoutState;\r\n    viewRenderMap: ViewRenderMap;\r\n    viewMap: ViewMap;\r\n    activeView: ViewState<any> | null;\r\n    viewPath: ViewPath;\r\n    viewIds: string[];\r\n    selectedViewId: string | null;\r\n    onSelectView: (viewPath: ViewPath, viewId: string) => void;\r\n    onCloseView: (viewPath: ViewPath, viewId: string) => void;\r\n    onCloseAllViews: (viewPath: ViewPath) => void;\r\n    onMoveView: (sourceViewId: string, placement: 'before' | 'after', targetViewId: string) => void;\r\n    onSplitViewPanel: (viewPath: ViewPath, dir: SplitDir, pos: number) => void;\r\n}\r\n\r\nclass ViewPanel extends React.PureComponent<IViewPanelProps, null> {\r\n\r\n    static readonly SELECTED_BG_COLOR = Colors.DARK_GRAY1;\r\n    static readonly TAB_STYLE_SELECTED: CSSProperties = {\r\n        padding: 2,\r\n        flex: 'none',\r\n        color: Colors.WHITE,\r\n        backgroundColor: ViewPanel.SELECTED_BG_COLOR\r\n    };\r\n    static readonly TAB_STYLE_NORMAL: CSSProperties = {padding: 2, color: Colors.LIGHT_GRAY1};\r\n\r\n    static readonly TITLE_STYLE_BASE: CSSProperties = {paddingLeft: 4, paddingRight: 4};\r\n    static readonly TITLE_STYLE_ACTIVE: CSSProperties = {...ViewPanel.TITLE_STYLE_BASE, color: Colors.BLUE5};\r\n    static readonly TITLE_STYLE_SELECTED: CSSProperties = ViewPanel.TITLE_STYLE_BASE;\r\n    static readonly TITLE_STYLE_NORMAL: CSSProperties = ViewPanel.TITLE_STYLE_BASE;\r\n\r\n    static readonly CLOSE_ICON_STYLE_SELECTED: CSSProperties = {marginLeft: 6, fontSize: 12};\r\n    static readonly CLOSE_ICON_STYLE_NORMAL: CSSProperties = {marginLeft: 6, fontSize: 12};\r\n\r\n    static readonly MENU_ICON_STYLE: CSSProperties = {color: Colors.GRAY5, marginLeft: 5, fontSize: 12};\r\n\r\n    static readonly TABS_STYLE: CSSProperties = {flex: 'none', display: 'flex', flexDirection: 'row'};\r\n    static readonly SPACER_STYLE: CSSProperties = {flex: 'auto'};\r\n    static readonly MENU_STYLE: CSSProperties = {flex: 'none', height: '100%'};\r\n\r\n    static readonly VIEW_HEADER_STYLE: CSSProperties = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flex: 'none',\r\n        width: '100%',\r\n        marginTop: 2,\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: 2,\r\n        borderBottomColor: ViewPanel.SELECTED_BG_COLOR,\r\n        boxSizing: 'border-box',\r\n        overflow: 'hidden',\r\n    };\r\n\r\n    static readonly VIEW_BODY_STYLE: CSSProperties = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 'auto',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    };\r\n\r\n    static readonly CONTAINER_STYLE: CSSProperties = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    };\r\n\r\n\r\n    private contentElement: HTMLDivElement;\r\n\r\n    constructor(props: IViewPanelProps) {\r\n        super(props);\r\n        this.onSplitHor = this.onSplitHor.bind(this);\r\n        this.onSplitVer = this.onSplitVer.bind(this);\r\n        this.onContentDivRef = this.onContentDivRef.bind(this);\r\n    }\r\n\r\n    onSplitHor() {\r\n        this.props.onSplitViewPanel(this.props.viewPath, 'hor', 0.5 * this.contentElement.clientWidth);\r\n    }\r\n\r\n    onSplitVer() {\r\n        this.props.onSplitViewPanel(this.props.viewPath, 'ver', 0.5 * this.contentElement.clientHeight);\r\n    }\r\n\r\n    onContentDivRef(contentElement: HTMLDivElement) {\r\n        this.contentElement = contentElement;\r\n    }\r\n\r\n    render() {\r\n        const viewIds = this.props.viewIds;\r\n        if (!viewIds || !viewIds.length) {\r\n            return null;\r\n        }\r\n\r\n        const selectedViewId = this.props.selectedViewId;\r\n        const views = [];\r\n        let selectedView = null;\r\n        viewIds.forEach(id => {\r\n            const view = this.props.viewMap[id];\r\n            if (view) {\r\n                if (selectedViewId && id === selectedViewId) {\r\n                    selectedView = view;\r\n                }\r\n                views.push(view);\r\n            }\r\n        });\r\n\r\n        let renderedViewContent;\r\n        const tabItems = [];\r\n        for (let i = 0; i < views.length; i++) {\r\n            let view = views[i];\r\n            let viewId = view.id;\r\n            let viewTitle = view.title;\r\n            let viewIconName = view.icon;\r\n            let tabStyle;\r\n            let titleStyle;\r\n            let closeIconStyle;\r\n            if (selectedView && selectedView.id === viewId) {\r\n                let viewRenderer = this.props.viewRenderMap[view.type];\r\n                renderedViewContent = viewRenderer(view);\r\n                tabStyle = ViewPanel.TAB_STYLE_SELECTED;\r\n                titleStyle = (selectedView === this.props.activeView) ? ViewPanel.TITLE_STYLE_ACTIVE : ViewPanel.TITLE_STYLE_SELECTED;\r\n                closeIconStyle = ViewPanel.CLOSE_ICON_STYLE_SELECTED;\r\n            } else {\r\n                tabStyle = ViewPanel.TAB_STYLE_NORMAL;\r\n                titleStyle = ViewPanel.TITLE_STYLE_NORMAL;\r\n                closeIconStyle = ViewPanel.CLOSE_ICON_STYLE_NORMAL;\r\n            }\r\n\r\n            const onClose = () => {\r\n                this.props.onCloseView(this.props.viewPath, viewId);\r\n            };\r\n            const onSelect = () => {\r\n                this.props.onSelectView(this.props.viewPath, viewId);\r\n            };\r\n\r\n            let iconSpan;\r\n            if (viewIconName && viewIconName !== '') {\r\n                iconSpan = <Icon icon={viewIconName} style={titleStyle} onClick={onSelect}/>;\r\n            }\r\n            tabItems.push(\r\n                <div key={viewId} style={tabStyle}>\r\n                    {iconSpan}\r\n                    <span style={titleStyle} onClick={onSelect}>{viewTitle}</span>\r\n                    <Icon style={closeIconStyle} icon=\"cross\" onClick={onClose}/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const tabs = (<div style={ViewPanel.TABS_STYLE}>{tabItems}</div>);\r\n        const spacer = (<div key=\"spacer\" style={ViewPanel.SPACER_STYLE}/>);\r\n\r\n        const menuIconStyle = ViewPanel.MENU_ICON_STYLE;\r\n\r\n        let splitHorEntry;\r\n        let splitVerEntry;\r\n\r\n        if (views.length > 1) {\r\n            splitHorEntry = (\r\n                <Icon key=\"splitHor\" style={menuIconStyle} icon=\"add-column-right\"\r\n                      onClick={this.onSplitHor}/>\r\n            );\r\n            splitVerEntry = (\r\n                <Icon key=\"splitVer\" style={menuIconStyle} icon=\"add-row-bottom\"\r\n                      onClick={this.onSplitVer}/>\r\n            );\r\n        }\r\n\r\n        let moreMenuEntry;\r\n        if (selectedView) {\r\n            const result = findMoveTargetViewIds(this.props.viewLayout, selectedViewId);\r\n            const viewMap = this.props.viewMap;\r\n            const moveBeforeMenuItems = result.before.map(viewId => {\r\n                const view = viewMap[viewId];\r\n                const onClick = () => this.props.onMoveView(selectedViewId, 'before', view.id);\r\n                return (<MenuItem key={viewId} onClick={onClick} text={view.title}/>);\r\n            });\r\n            const moveAfterMenuItems = result.after.map(viewId => {\r\n                const view = viewMap[viewId];\r\n                const onClick = () => this.props.onMoveView(selectedViewId, 'after', view.id);\r\n                return (<MenuItem key={viewId} onClick={onClick} text={view.title}/>);\r\n            });\r\n\r\n            let moveBeforeMenuItem;\r\n            if (moveBeforeMenuItems.length) {\r\n                moveBeforeMenuItem = (\r\n                    <MenuItem key=\"before\" text=\"Move Before\">{moveBeforeMenuItems}</MenuItem>\r\n                );\r\n            }\r\n            let moveAfterMenuItem;\r\n            if (moveAfterMenuItems.length) {\r\n                moveAfterMenuItem = (\r\n                    <MenuItem key=\"after\" text=\"Move After\">{moveAfterMenuItems}</MenuItem>\r\n                );\r\n            }\r\n            if (moveBeforeMenuItem || moveAfterMenuItem) {\r\n                const moreMenu = (<Menu>{moveBeforeMenuItem}{moveAfterMenuItem}</Menu>);\r\n                moreMenuEntry = (\r\n                    <Popover content={moreMenu} position={PopoverPosition.BOTTOM}>\r\n                        <Icon key=\"more\" style={menuIconStyle} icon=\"more\"/>\r\n                    </Popover>\r\n                );\r\n            }\r\n        }\r\n\r\n        const menu = (\r\n            <div style={ViewPanel.MENU_STYLE}>\r\n                {splitHorEntry}\r\n                {splitVerEntry}\r\n                {moreMenuEntry}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div style={ViewPanel.CONTAINER_STYLE}>\r\n                <div style={ViewPanel.VIEW_HEADER_STYLE}>\r\n                    {tabs}\r\n                    {spacer}\r\n                    {menu}\r\n                </div>\r\n                <div style={ViewPanel.VIEW_BODY_STYLE}\r\n                     ref={this.onContentDivRef}>\r\n                    {renderedViewContent}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import * as React from 'react';\nimport { Button, Collapse } from '@blueprintjs/core';\n\nconst CONTAINER_STYLE: React.CSSProperties = {\n    marginTop: '0.75em',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end'\n};\n\nconst DETAILS_STYLE: React.CSSProperties = {\n    overflow: 'auto',\n};\n\n\ninterface IMessageDetailsProps {\n    details: string;\n    onCopyDetails?: (details: string) => any;\n    width?: number | string;\n    height?: number | string;\n}\n\nconst MessageDetails: React.FC<IMessageDetailsProps> = ({\n                                                            details,\n                                                            onCopyDetails,\n                                                            width,\n                                                            height\n                                                        }) => {\n\n    const [showDetails, setShowDetails] = React.useState(false);\n    return (\n        <div style={CONTAINER_STYLE}>\n            <div>\n                {onCopyDetails && (\n                    <Button\n                        onClick={() => onCopyDetails(details)}\n                        icon={'clipboard'}\n                        small={true}\n                        style={{marginRight: 6}}\n                    />\n                )}\n                <Button\n                    onClick={() => setShowDetails(!showDetails)}\n                    rightIcon={showDetails ? 'chevron-up' : 'chevron-down'}\n                    small={true}\n                >\n                    {showDetails ? 'Hide Details' : 'Show Details'}\n                </Button>\n            </div>\n            <Collapse\n                isOpen={showDetails}\n            >\n                <pre className=\"user-selectable\"\n                     style={{\n                         ...DETAILS_STYLE,\n                         width: width || '32em',\n                         height: height || '20em'\n                     }}\n                >\n                    {details}\n                </pre>\n            </Collapse>\n        </div>\n    );\n};\n\nexport default MessageDetails;\n","import { Checkbox, Icon, IconName, Intent } from '@blueprintjs/core';\r\nimport * as React from 'react';\r\nimport { connect, DispatchProp } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport MessageDetails from '../components/MessageDetails';\r\n\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport * as selectors from '../selectors';\r\nimport { State } from '../state';\r\nimport { getJobFailureIconName, getJobFailureTitle, isDeveloperError, isUserError, JobFailure } from '../webapi';\r\n\r\n\r\ninterface IJobFailureDialogProps {\r\n    isOpen: boolean;\r\n    jobTitle: string;\r\n    jobFailure: JobFailure;\r\n}\r\n\r\ninterface IJobFailureDialogState {\r\n    copyReport: boolean;\r\n}\r\n\r\nfunction mapStateToProps(state: State): IJobFailureDialogProps {\r\n    const dialogState = selectors.dialogStateSelector(JobFailureDialog.DIALOG_ID)(state) as any;\r\n    return {\r\n        isOpen: dialogState.isOpen,\r\n        jobTitle: dialogState.jobTitle,\r\n        jobFailure: dialogState.jobFailure,\r\n    };\r\n}\r\n\r\nconst ERROR_MESSAGE_STYLE: React.CSSProperties = {wordBreak: 'break-all'};\r\n\r\nclass JobFailureDialog extends React.Component<DispatchProp<State> & IJobFailureDialogProps, IJobFailureDialogState> {\r\n\r\n    static readonly DIALOG_ID = 'jobFailureDialog';\r\n    // BlueprintJS Dialog width is 500px by default\r\n    private static readonly DIALOG_STYLE: React.CSSProperties = {width: '600px'};\r\n\r\n    constructor(props: IJobFailureDialogProps) {\r\n        super(props);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.handleConfirm = this.handleConfirm.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleCopyReport = this.handleCopyReport.bind(this);\r\n        this.state = {copyReport: false};\r\n    }\r\n\r\n    handleConfirm() {\r\n        if (this.state.copyReport) {\r\n            let title = this.props.jobTitle;\r\n            let failure = this.props.jobFailure;\r\n            let report = `Job: ${title}\\nMessage: ${failure.message}\\n`;\r\n            report += `Code: ${failure.code}\\n`;\r\n            if (failure.data) {\r\n                if (failure.data.method) {\r\n                    report += `Method: ${failure.data.method}\\n`;\r\n                }\r\n                if (failure.data.exception) {\r\n                    report += `Exception: ${failure.data.exception}\\n`;\r\n                }\r\n                if (failure.data.traceback) {\r\n                    report += `\\n${failure.data.traceback}\\n`;\r\n                }\r\n            }\r\n            actions.copyTextToClipboard(report);\r\n        }\r\n        this.props.dispatch(actions.hideDialog(JobFailureDialog.DIALOG_ID));\r\n    }\r\n\r\n    handleCancel() {\r\n        this.props.dispatch(actions.hideDialog(JobFailureDialog.DIALOG_ID));\r\n    }\r\n\r\n    handleCopyReport(event) {\r\n        this.setState({copyReport: event.target.checked});\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isOpen || !this.props.jobFailure) {\r\n            return null;\r\n        }\r\n        const title = getJobFailureTitle(this.props.jobFailure);\r\n        return (\r\n            <ModalDialog isOpen={this.props.isOpen}\r\n                         icon={'error'}\r\n                         title={title}\r\n                         onConfirm={this.handleConfirm}\r\n                         onCancel={this.handleCancel}\r\n                         noCancelButton={true}\r\n                         renderBody={this.renderBody}\r\n                         style={JobFailureDialog.DIALOG_STYLE}/>\r\n        );\r\n    }\r\n\r\n    renderBody() {\r\n        if (!this.props.isOpen) {\r\n            return null;\r\n        }\r\n\r\n        let messageText = this.props.jobFailure.message;\r\n        if (!messageText) {\r\n            messageText = `An unknown error occurred (code ${this.props.jobFailure.code}).`;\r\n        }\r\n        let messageDiv = (\r\n            <div style={ERROR_MESSAGE_STYLE}>\r\n                <p>Oops, Cate couldn't carry out the request</p>\r\n                <em><p className=\"user-selectable\">{this.props.jobTitle}</p></em>\r\n                <div>Reason:</div>\r\n                <div className=\"user-selectable\">{messageText}</div>\r\n            </div>\r\n        );\r\n\r\n        let traceback;\r\n        if (!isUserError(this.props.jobFailure)\r\n            && this.props.jobFailure.data && this.props.jobFailure.data.traceback) {\r\n            traceback = <MessageDetails details={this.props.jobFailure.data.traceback} width={'36em'}/>;\r\n        }\r\n\r\n        let reporting;\r\n        if (isDeveloperError(this.props.jobFailure)) {\r\n            reporting = (\r\n                <div style={{marginTop: '1em'}}>\r\n                    <span className=\"bp3-text-muted\">Please consider reporting this issue in Cate's <a\r\n                        href=\"https://github.com/CCI-Tools/cate/issues\" target=\"_blank\" rel=\"noopener noreferrer\">issue tracker</a>.</span>\r\n                    <Checkbox label='Copy error report to clipboard'\r\n                              checked={this.state.copyReport}\r\n                              onChange={this.handleCopyReport}/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const icon = getJobFailureIconName(this.props.jobFailure) as IconName;\r\n        let iconIntent;\r\n        if (isUserError(this.props.jobFailure)) {\r\n            iconIntent = Intent.PRIMARY;\r\n        } else {\r\n            iconIntent = Intent.WARNING;\r\n        }\r\n\r\n        return (\r\n            <div style={{display: 'flex'}}>\r\n                <div style={{fontSize: '4em', flex: '0 1 1em'}}>\r\n                    <Icon icon={icon} intent={iconIntent} iconSize={48}/>\r\n                </div>\r\n                <div style={{flex: '1 1 90%', marginLeft: '1em'}}>\r\n                    {messageDiv}\r\n                    {traceback}\r\n                    {reporting}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(JobFailureDialog);\r\n","import * as React from 'react';\r\nimport { AnchorButton, ControlGroup, Intent } from \"@blueprintjs/core\";\r\nimport { connect, DispatchProp } from 'react-redux';\r\n\r\nimport { DialogState, State } from '../state';\r\nimport { ModalDialog } from '../components/ModalDialog';\r\nimport * as actions from '../actions';\r\nimport * as selectors from '../selectors';\r\nimport { showFileOpenDialog } from \"../actions\";\r\nimport { OpenDialogResult } from \"../components/desktop/types\";\r\n\r\n\r\nconst DIV_STYLE = {width: '100%', marginBottom: '2em', display: 'flex', flexGrow: 1};\r\nconst BUTTON_STYLE = {flex: 'none'};\r\n\r\n\r\ninterface IFileDownloadDialogProps {\r\n    dialogId: string;\r\n    isOpen: boolean;\r\n}\r\n\r\ninterface IFileDownloadDialogState extends DialogState {\r\n    filePaths?: string[];\r\n}\r\n\r\nfunction mapStateToProps(state: State): IFileDownloadDialogProps {\r\n    const dialogState = selectors.dialogStateSelector(FileDownloadDialog.DIALOG_ID)(state);\r\n    return {\r\n        isOpen: dialogState.isOpen,\r\n        dialogId: 'fileDownloadDialog'\r\n    };\r\n}\r\n\r\nclass FileDownloadDialog extends React.Component<IFileDownloadDialogProps & DispatchProp<State>, IFileDownloadDialogState> {\r\n    static readonly DIALOG_ID = 'fileDownloadDialog';\r\n\r\n    constructor(props: IFileDownloadDialogProps & DispatchProp<State>) {\r\n        super(props);\r\n        this.state = {filePaths: []};\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.canConfirm = this.canConfirm.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IFileDownloadDialogProps) {\r\n        this.setState({filePaths: []});\r\n    }\r\n\r\n    private onCancel() {\r\n        this.props.dispatch(actions.hideDialog(FileDownloadDialog.DIALOG_ID));\r\n    }\r\n\r\n    private canConfirm(): boolean {\r\n        return this.state.filePaths.length > 0;\r\n    }\r\n\r\n    private onConfirm() {\r\n        this.props.dispatch(actions.hideDialog(FileDownloadDialog.DIALOG_ID, this.state));\r\n        this.props.dispatch(actions.downloadFiles(this.state.filePaths) as any);\r\n    }\r\n\r\n    render() {\r\n        let isOpen = this.props.isOpen;\r\n        if (!isOpen) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ModalDialog\r\n                isOpen={isOpen}\r\n                title=\"Download Files\"\r\n                icon=\"download\"\r\n                confirmTitle=\"Download\"\r\n                confirmIconName=\"download\"\r\n                confirmTooltip=\"Download files.\"\r\n                onCancel={this.onCancel}\r\n                canConfirm={this.canConfirm}\r\n                onConfirm={this.onConfirm}\r\n                renderBody={this.renderBody}\r\n            />);\r\n    }\r\n\r\n    handleOpenFilesOnClose = (result: OpenDialogResult) => {\r\n        if (!result.canceled) {\r\n            this.setState({...this.state, filePaths: result.filePaths});\r\n        }\r\n    };\r\n\r\n    handleOpenFilesOpen = () => {\r\n        this.props.dispatch(\r\n            showFileOpenDialog({\r\n                                   title: 'Select Files',\r\n                                   properties: ['openFile', 'multiSelections']\r\n                               },\r\n\r\n                               this.handleOpenFilesOnClose) as any);\r\n    };\r\n\r\n    private renderBody() {\r\n        if (!this.state.filePaths) {\r\n            return null;\r\n        }\r\n        const files = this.state.filePaths.map(path => (\r\n            <li key={path}>\r\n                {path}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <div>\r\n                File download:\r\n                <ControlGroup style={DIV_STYLE} fill={true}>\r\n                    <AnchorButton intent={Intent.PRIMARY} style={BUTTON_STYLE}\r\n                                  onClick={this.handleOpenFilesOpen}>Select Remote Files...</AnchorButton>\r\n\r\n                </ControlGroup>\r\n                <aside>\r\n                    {files.length > 0 ? (<h4>Files</h4>) : ''}\r\n                    <ul>{files}</ul>\r\n                </aside>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FileDownloadDialog);\r\n","import * as React from 'react';\nimport { CSSProperties } from 'react';\nimport { connect, Dispatch } from 'react-redux';\nimport { useMatomo } from '@datapunt/matomo-tracker-react'\n\nimport GdprBanner from './GdprBanner';\nimport { isElectron } from '../electron';\nimport { FileSystemAPI } from '../webapi';\nimport AppBar from './AppBar';\nimport ChooseWorkspaceDialog, { DELETE_WORKSPACE_DIALOG_ID, OPEN_WORKSPACE_DIALOG_ID } from './ChooseWorkspaceDialog';\nimport GlobeView from './GlobeView'\nimport FigureView from './FigureView';\nimport ServiceAutoShutdownDialog from './ServiceAutoShutdownDialog';\nimport ServiceShutdownDialog from './ServiceShutdownDialog';\nimport TableView from './TableView';\nimport DataSourcesPanel from './DataSourcesPanel';\nimport OperationsPanel from './OperationsPanel';\nimport WebAPIStatusBox from './WebAPIStatusBox';\nimport WorkspacePanel from './WorkspacePanel';\nimport VariablePanel from './VariablesPanel';\nimport PlacemarksPanel from './PlacemarksPanel';\nimport ViewPanel from './ViewPanel';\nimport TaskPanel from './TasksPanel';\nimport StatusBar from './StatusBar';\nimport LayersPanel from './LayersPanel';\nimport StylesPanel from './StylesPanel';\nimport NewWorkspaceDialog from './NewWorkspaceDialog';\nimport SaveWorkspaceAsDialog from './SaveWorkspaceAsDialog';\nimport PreferencesDialog from './PreferencesDialog';\nimport DirectorySelectDialog from './DirectorySelectDialog';\nimport FileOpenDialog from './FileOpenDialog';\nimport FileSaveDialog from \"./FileSaveDialog\";\nimport FileBrowseDialog from \"./FileBrowseDialog\";\nimport MessageBox from './MessageBox';\nimport { PanelContainer, PanelContainerLayout } from '../components/PanelContainer';\nimport { Panel } from '../components/Panel';\nimport {\n    AnimationViewDataState,\n    FigureViewDataState,\n    State,\n    TableViewDataState,\n    WorldViewDataState\n} from '../state';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\nimport { ViewManager, ViewRenderMap } from '../components/ViewManager';\nimport { SplitDir, ViewLayoutState, ViewPath, ViewState } from '../components/ViewState';\nimport OperationStepDialog from './OperationStepDialog';\nimport { NEW_CTX_OPERATION_STEP_DIALOG_ID } from './operation-step-dialog-ids';\nimport AnimationView from './AnimationView';\nimport JobFailureDialog from './JobFailureDialog';\nimport desktopActions from '../components/desktop/actions';\nimport FileUploadDialog from \"./FileUploadDialog\";\nimport FileDownloadDialog from \"./FileDownloadDialog\";\n\ntype AppServiceMode = 'local' | 'cloud';\n\nfunction renderWorldView(view: ViewState<WorldViewDataState>) {\n    // See #390, Drop 2D map view https://github.com/CCI-Tools/cate/issues/390.\n    // See tag \"1.1.0.dev1-with-ol\".\n    // return view.data.viewMode === \"3D\" ? (<GlobeView view={view}/>) : (<MapView view={view}/>);\n    return <GlobeView view={view}/>;\n}\n\nfunction renderFigureView(view: ViewState<FigureViewDataState>) {\n    return <FigureView view={view}/>;\n}\n\nfunction renderAnimationView(view: ViewState<AnimationViewDataState>) {\n    return <AnimationView view={view}/>;\n}\n\nfunction renderTableView(view: ViewState<TableViewDataState>) {\n    return <TableView view={view}/>;\n}\n\nconst VIEW_TYPE_RENDERERS: ViewRenderMap = {\n    world: renderWorldView,\n    figure: renderFigureView,\n    animation: renderAnimationView,\n    table: renderTableView,\n};\n\ninterface IDispatch {\n    dispatch: Dispatch<State>;\n}\n\ninterface IApplicationPageProps {\n    forceAppBar?: boolean;\n    fileSystemAPI: FileSystemAPI | null;\n    appServiceMode: AppServiceMode;\n    appServiceURL: string;\n    appServiceHostOS: string;\n    appServiceVersion: string;\n}\n\nfunction mapStateToPropsApplication(state: State): IApplicationPageProps {\n    return {\n        forceAppBar: state.session.forceAppBar,\n        fileSystemAPI: selectors.fileSystemAPISelector(state),\n        appServiceMode: window.location.pathname.indexOf(\"/proxy/\") > 0 ? 'cloud' : 'local',\n        appServiceURL: state.communication.webAPIServiceURL,\n        appServiceHostOS: state.communication.webAPIServiceInfo && state.communication.webAPIServiceInfo.hostOS,\n        appServiceVersion: state.communication.webAPIServiceInfo && state.communication.webAPIServiceInfo.version,\n    };\n}\n\nconst ROOT_DIV_STYLE: CSSProperties = {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden'\n};\n\nconst MAIN_DIV_STYLE: CSSProperties = {\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    flex: 'auto',\n    height: '100%',\n    overflow: 'hidden'\n};\n\nconst _AppMainPage: React.FC<IApplicationPageProps & IDispatch> = (\n    {\n        forceAppBar,\n        fileSystemAPI,\n        appServiceMode,\n        appServiceURL,\n        appServiceHostOS,\n        appServiceVersion,\n        dispatch\n    }) => {\n\n    const {trackPageView} = useMatomo();\n\n    // Track page view\n    React.useEffect(() => {\n        const customDimensions = [\n            {id: 1, value: appServiceMode},\n            {id: 2, value: appServiceURL},\n            {id: 3, value: appServiceHostOS},\n            {id: 4, value: appServiceVersion},\n        ];\n        console.log(\"Tracking:\", customDimensions);\n        trackPageView({customDimensions});\n    }, [trackPageView, appServiceMode, appServiceURL, appServiceHostOS, appServiceVersion]);\n\n    React.useEffect(() => {\n        dispatch(actions.installGlobalHandlers() as any);\n    }, [dispatch]);\n\n    let appBar;\n    if (!isElectron() || !!forceAppBar) {\n        appBar = <AppBar/>;\n    }\n\n    return (\n        <div className={'bp3-dark'} style={ROOT_DIV_STYLE}>\n            <GdprBanner/>\n            <WebAPIStatusBox/>\n            {appBar}\n            <div style={MAIN_DIV_STYLE}>\n                <LeftPanel/>\n                <CenterPanel/>\n                <RightPanel/>\n            </div>\n            <StatusBar/>\n            <PreferencesDialog/>\n            <NewWorkspaceDialog/>\n            <FileUploadDialog/>\n            <FileDownloadDialog/>\n            <SaveWorkspaceAsDialog/>\n            <ServiceShutdownDialog/>\n            <ServiceAutoShutdownDialog/>\n            <ChooseWorkspaceDialog dialogId={OPEN_WORKSPACE_DIALOG_ID}/>\n            <ChooseWorkspaceDialog dialogId={DELETE_WORKSPACE_DIALOG_ID}/>\n            <OperationStepDialog id={NEW_CTX_OPERATION_STEP_DIALOG_ID}/>\n            <JobFailureDialog/>\n            {!desktopActions.isNativeUI && fileSystemAPI !== null && (<DirectorySelectDialog/>)}\n            {!desktopActions.isNativeUI && fileSystemAPI !== null && (<FileOpenDialog/>)}\n            {!desktopActions.isNativeUI && fileSystemAPI !== null && (<FileSaveDialog/>)}\n            {!desktopActions.isNativeUI && fileSystemAPI !== null && (<FileBrowseDialog/>)}\n            {!desktopActions.isNativeUI && <MessageBox/>}\n        </div>\n    );\n}\n\nconst AppMainPage = connect(mapStateToPropsApplication)(_AppMainPage);\nexport default AppMainPage;\n\ninterface ILeftPanelProps {\n    panelContainerUndockedMode: boolean;\n    leftPanelContainerLayout: PanelContainerLayout;\n    selectedLeftTopPanelId?: string;\n    selectedLeftBottomPanelId?: string;\n}\n\nfunction mapStateToPropsLeft(state: State): ILeftPanelProps {\n    return {\n        panelContainerUndockedMode: selectors.panelContainerUndockedModeSelector(state),\n        leftPanelContainerLayout: selectors.leftPanelContainerLayoutSelector(state),\n        selectedLeftTopPanelId: selectors.selectedLeftTopPanelIdSelector(state),\n        selectedLeftBottomPanelId: selectors.selectedLeftBottomPanelIdSelector(state),\n    };\n}\n\nclass _LeftPanel extends React.PureComponent<ILeftPanelProps & IDispatch, null> {\n\n    constructor(props: ILeftPanelProps & IDispatch) {\n        // noinspection DuplicatedCode\n        super(props);\n        this.onLeftPanelContainerLayoutChange = this.onLeftPanelContainerLayoutChange.bind(this);\n        this.onRightPanelContainerLayoutChange = this.onRightPanelContainerLayoutChange.bind(this);\n        this.onSelectedLeftTopPanelChange = this.onSelectedLeftTopPanelChange.bind(this);\n        this.onSelectedLeftBottomPanelChange = this.onSelectedLeftBottomPanelChange.bind(this);\n    }\n\n    onLeftPanelContainerLayoutChange(layout: PanelContainerLayout) {\n        this.props.dispatch(actions.setLeftPanelContainerLayout(layout));\n    }\n\n    onRightPanelContainerLayoutChange(layout: PanelContainerLayout) {\n        this.props.dispatch(actions.setRightPanelContainerLayout(layout));\n    }\n\n    onSelectedLeftTopPanelChange(id: string | null) {\n        this.props.dispatch(actions.setSelectedLeftTopPanelId(id));\n    }\n\n    onSelectedLeftBottomPanelChange(id: string | null) {\n        this.props.dispatch(actions.setSelectedLeftBottomPanelId(id));\n    }\n\n    render() {\n        return (\n            <PanelContainer\n                position=\"left\"\n                undockedMode={this.props.panelContainerUndockedMode}\n                layout={this.props.leftPanelContainerLayout}\n                onLayoutChange={this.onLeftPanelContainerLayoutChange}\n                selectedTopPanelId={this.props.selectedLeftTopPanelId}\n                selectedBottomPanelId={this.props.selectedLeftBottomPanelId}\n                onSelectedTopPanelChange={this.onSelectedLeftTopPanelChange}\n                onSelectedBottomPanelChange={this.onSelectedLeftBottomPanelChange}\n            >\n                <Panel id=\"dataSources\" position=\"top\" icon=\"database\" title=\"Data Sources\"\n                       body={<DataSourcesPanel/>}/>\n                <Panel id=\"operations\" position=\"bottom\" icon=\"function\" title=\"Operations\"\n                       body={<OperationsPanel/>}/>\n            </PanelContainer>\n        );\n    }\n}\n\nconst LeftPanel = connect(mapStateToPropsLeft)(_LeftPanel);\n\ninterface IRightPanelProps {\n    panelContainerUndockedMode: boolean;\n    rightPanelContainerLayout: PanelContainerLayout;\n    selectedRightTopPanelId?: string;\n    selectedRightBottomPanelId?: string;\n}\n\nfunction mapStateToPropsRight(state: State): IRightPanelProps {\n    return {\n        panelContainerUndockedMode: selectors.panelContainerUndockedModeSelector(state),\n        rightPanelContainerLayout: selectors.rightPanelContainerLayoutSelector(state),\n        selectedRightTopPanelId: selectors.selectedRightTopPanelIdSelector(state),\n        selectedRightBottomPanelId: selectors.selectedRightBottomPanelIdSelector(state),\n    };\n}\n\nclass _RightPanel extends React.PureComponent<IRightPanelProps & IDispatch, null> {\n\n    constructor(props: IRightPanelProps & IDispatch) {\n        super(props);\n        this.onRightPanelContainerLayoutChange = this.onRightPanelContainerLayoutChange.bind(this);\n        this.onSelectedRightTopPanelChange = this.onSelectedRightTopPanelChange.bind(this);\n        this.onSelectedRightBottomPanelChange = this.onSelectedRightBottomPanelChange.bind(this);\n    }\n\n    onRightPanelContainerLayoutChange(layout: PanelContainerLayout) {\n        this.props.dispatch(actions.setRightPanelContainerLayout(layout));\n    }\n\n    onSelectedRightTopPanelChange(id: string | null) {\n        this.props.dispatch(actions.setSelectedRightTopPanelId(id));\n    }\n\n    onSelectedRightBottomPanelChange(id: string | null) {\n        this.props.dispatch(actions.setSelectedRightBottomPanelId(id));\n    }\n\n    render() {\n        return (\n            <PanelContainer\n                position=\"right\"\n                undockedMode={this.props.panelContainerUndockedMode}\n                layout={this.props.rightPanelContainerLayout}\n                onLayoutChange={this.onRightPanelContainerLayoutChange}\n                selectedTopPanelId={this.props.selectedRightTopPanelId}\n                selectedBottomPanelId={this.props.selectedRightBottomPanelId}\n                onSelectedTopPanelChange={this.onSelectedRightTopPanelChange}\n                onSelectedBottomPanelChange={this.onSelectedRightBottomPanelChange}\n            >\n                <Panel id=\"workspace\" position=\"top\" icon=\"flows\" title=\"Workspace\"\n                       body={<WorkspacePanel/>}/>\n                <Panel id=\"layers\" position=\"top\" icon=\"layers\" title=\"Layers\"\n                       body={<LayersPanel/>}/>\n                <Panel id=\"placemarks\" position=\"top\" icon=\"map-marker\" title=\"Places\"\n                       body={<PlacemarksPanel/>}/>\n                <Panel id=\"variables\" position=\"bottom\" icon=\"variable\" title=\"Variables\"\n                       body={<VariablePanel/>}/>\n                <Panel id=\"style\" position=\"bottom\" icon=\"style\" title=\"Styles\"\n                       body={<StylesPanel/>}/>\n                <Panel id=\"view\" position=\"bottom\" icon=\"eye-open\" title=\"View\"\n                       body={<ViewPanel/>}/>\n                <Panel id=\"tasks\" position=\"bottom\" icon=\"play\" title=\"Tasks\"\n                       body={<TaskPanel/>}/>\n            </PanelContainer>\n        );\n    }\n}\n\nconst RightPanel = connect(mapStateToPropsRight)(_RightPanel);\n\ninterface IViewManagerPanelProps {\n    viewLayout: ViewLayoutState;\n    views: ViewState<any>[];\n    activeView: ViewState<any> | null;\n}\n\nfunction mapStateToPropsView(state: State): IViewManagerPanelProps {\n    return {\n        viewLayout: selectors.viewLayoutSelector(state),\n        views: selectors.viewsSelector(state),\n        activeView: selectors.activeViewSelector(state),\n    };\n}\n\nclass _CenterPanel extends React.PureComponent<IViewManagerPanelProps & IDispatch, null> {\n    static readonly DIV_STYLE: CSSProperties = {flex: 'auto', height: '100%', overflow: 'hidden'};\n\n    constructor(props: IViewManagerPanelProps & IDispatch) {\n        super(props);\n        this.onSelectView = this.onSelectView.bind(this);\n        this.onCloseView = this.onCloseView.bind(this);\n        this.onCloseAllViews = this.onCloseAllViews.bind(this);\n        this.onMoveView = this.onMoveView.bind(this);\n        this.onChangeViewSplitPos = this.onChangeViewSplitPos.bind(this);\n        this.onSplitViewPanel = this.onSplitViewPanel.bind(this);\n    }\n\n    onSelectView(viewPath: ViewPath, viewId: string) {\n        this.props.dispatch(actions.selectView(viewPath, viewId));\n    }\n\n    onCloseView(viewPath: ViewPath, viewId: string) {\n        this.props.dispatch(actions.closeView(viewPath, viewId));\n    }\n\n    onCloseAllViews(viewPath: ViewPath) {\n        this.props.dispatch(actions.closeAllViews(viewPath));\n    }\n\n    onMoveView(sourceViewId: string, placement: 'before' | 'after', targetViewId: string) {\n        this.props.dispatch(actions.moveView(sourceViewId, placement, targetViewId));\n    }\n\n    onSplitViewPanel(viewPath: ViewPath, dir: SplitDir, pos: number) {\n        this.props.dispatch(actions.splitViewPanel(viewPath, dir, pos));\n    }\n\n    onChangeViewSplitPos(viewPath: ViewPath, delta: number) {\n        this.props.dispatch(actions.changeViewSplitPos(viewPath, delta));\n    }\n\n    render() {\n        return (\n            <div style={_CenterPanel.DIV_STYLE}>\n                <ViewManager\n                    viewRenderMap={VIEW_TYPE_RENDERERS}\n                    viewLayout={this.props.viewLayout}\n                    views={this.props.views}\n                    activeView={this.props.activeView}\n                    noViewsDescription=\"You can create new views from the VIEW panel.\"\n                    noViewsVisual=\"eye-open\"\n                    onSelectView={this.onSelectView}\n                    onCloseView={this.onCloseView}\n                    onCloseAllViews={this.onCloseAllViews}\n                    onMoveView={this.onMoveView}\n                    onChangeViewSplitPos={this.onChangeViewSplitPos}\n                    onSplitViewPanel={this.onSplitViewPanel}\n                />\n            </div>\n        );\n    }\n}\n\nconst CenterPanel = connect(mapStateToPropsView)(_CenterPanel);\n\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { MatomoProvider, createInstance } from '@datapunt/matomo-tracker-react';\r\nimport MatomoTracker from '@datapunt/matomo-tracker-js';\r\n\r\nimport { State } from '../state';\r\nimport AppMainPage from './AppMainPage';\r\n\r\n\r\ninterface IAppMainPageWrapperProps {\r\n    trackingConsentObtained: boolean;\r\n}\r\n\r\n// noinspection JSUnusedLocalSymbols\r\nfunction mapStateToProps(state: State): IAppMainPageWrapperProps {\r\n    return {\r\n        trackingConsentObtained: state.session.trackingConsentObtained,\r\n    };\r\n}\r\n\r\nconst AppMainPageWrapper: React.FC<IAppMainPageWrapperProps> = (\r\n    {\r\n        trackingConsentObtained,\r\n    }\r\n) => {\r\n\r\n    const [matomoInstance, setMatomoInstance] = React.useState<MatomoTracker | null>(null);\r\n\r\n    React.useEffect(() => {\r\n        if (matomoInstance === null) {\r\n            const instance = createInstance(\r\n                {\r\n                    urlBase: 'https://matomo-ext.esa.int/',\r\n                    siteId: 8,\r\n                    // userId: userId, // optional, default value: `undefined`.\r\n                    // trackerUrl: 'https://LINK.TO.DOMAIN/tracking.php', // optional, default value: `${urlBase}matomo.php`\r\n                    // srcUrl: 'https://LINK.TO.DOMAIN/tracking.js', // optional, default value: `${urlBase}matomo.js`\r\n                    disabled: !trackingConsentObtained, // optional, false by default. Makes all tracking calls no-ops if set to true.\r\n                    heartBeat: { // optional, enabled by default\r\n                        active: true, // optional, default value: true\r\n                        seconds: 10 // optional, default value: `15\r\n                    },\r\n                    linkTracking: false, // optional, default value: true\r\n                    configurations: { // optional, default value: {}\r\n                        // any valid matomo configuration, all below are optional\r\n                        disableCookies: !trackingConsentObtained,\r\n                        setSecureCookie: true,\r\n                        setRequestMethod: 'POST'\r\n                    }\r\n                }\r\n            );\r\n            setMatomoInstance(instance);\r\n        }\r\n    }, [trackingConsentObtained, matomoInstance]);\r\n\r\n    return (\r\n        <MatomoProvider value={matomoInstance}>\r\n            <AppMainPage/>\r\n        </MatomoProvider>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps)(AppMainPageWrapper);\r\n","import { main } from './renderer/main';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/table/lib/css/table.css';\nimport '@blueprintjs/datetime/lib/css/blueprint-datetime.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport '@blueprintjs/select/lib/css/blueprint-select.css';\nimport './renderer/resources/fonts/stylesheet.css';\nimport './index.css';\n\ndeclare global {\n    // noinspection JSUnusedGlobalSymbols\n    interface Window {\n        CESIUM_BASE_URL?: string;\n    }\n}\n\nwindow.CESIUM_BASE_URL = './cesium';\n\nmain();\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider as StoreProvider } from 'react-redux';\nimport { applyMiddleware, createStore, Middleware, Store } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nimport * as actions from './actions'\nimport { stateReducer } from './reducers';\nimport { State } from './state';\nimport AppMainPageWrapper from './containers/AppMainPageWrapper';\nimport { connectWebAPIService } from './actions';\nimport { DEFAULT_SERVICE_URL } from './initial-state';\n\n\nfunction getServiceUrl() {\n    let serviceUrl: string = DEFAULT_SERVICE_URL;\n    const search = new URLSearchParams(window.location.search);\n    if (search.has('serviceUrl')) {\n        serviceUrl = search.get('serviceUrl');\n    } else {\n        const origin = window.location.origin;\n        const path = window.location.pathname;\n        if (path.endsWith('/app')) {\n            serviceUrl = origin + path.substring(0, path.length - 4);\n        } else if (path.endsWith('/app/')) {\n            serviceUrl = origin + path.substring(0, path.length - 5);\n        }\n    }\n    return serviceUrl;\n}\n\nexport function main() {\n    const middlewares: Middleware[] = [thunkMiddleware];\n\n    if (process.env.NODE_ENV === 'development') {\n        const nonLoggedActionTypes = new Set([\n                                                 // Too much noise:\n                                                 actions.SET_GLOBE_MOUSE_POSITION,\n                                                 actions.SET_GLOBE_VIEW_POSITION,\n                                                 actions.SET_GLOBE_VIEW_POSITION,\n                                                 actions.UPDATE_MOUSE_IDLE_STATE,\n                                                 actions.UPDATE_SESSION_STATE,\n                                             ]);\n        const loggerOptions = {\n            level: 'info',\n            collapsed: true,\n            diff: true,\n            predicate: (getState, action) => !nonLoggedActionTypes.has(action.type)\n        };\n        middlewares.push(createLogger(loggerOptions));\n    }\n\n    const middleware = applyMiddleware(...middlewares);\n    const store = createStore(stateReducer, middleware) as Store<State>;\n    store.dispatch(connectWebAPIService(getServiceUrl()) as any);\n\n    ReactDOM.render(\n        (\n          <StoreProvider store={store}>\n              <AppMainPageWrapper/>\n          </StoreProvider>\n        ),\n        document.getElementById('root')\n    );\n}\n","import { FieldValue } from '../../components/field/Field';\r\n\r\n\r\nexport interface InputAssignment {\r\n    constantValue: FieldValue<any> | any;\r\n    resourceName: string;\r\n    isValueUsed: boolean;\r\n}\r\n\r\nexport type InputAssignments = { [inputName: string]: InputAssignment };\r\nexport type InputAssignmentMap = { [dialogId: string]: InputAssignments };\r\n\r\nexport function isInputAssigned(inputAssignments: InputAssignments, inputName: string): boolean {\r\n    return !!inputAssignments[inputName];\r\n}\r\n\r\nexport function assignConstantValueInput(inputAssignments: InputAssignments, inputName: string, constantValue: any): InputAssignments {\r\n    return {...inputAssignments, [inputName]: {isValueUsed: true, constantValue, resourceName: null}};\r\n}\r\n\r\nexport function assignResourceNameInput(inputAssignments: InputAssignments, inputName: string, resourceName: string): InputAssignments {\r\n    return {...inputAssignments, [inputName]: {isValueUsed: false, constantValue: null, resourceName}};\r\n}\r\n\r\n","import * as Cesium from 'cesium';\nimport copyToClipboard from 'copy-to-clipboard';\nimport * as d3 from 'd3-fetch';\nimport { DirectGeometryObject } from 'geojson';\nimport * as redux from 'redux';\n\nimport * as assert from '../common/assert';\nimport { isAssignableFrom, VAR_NAME_LIKE_TYPE, VAR_NAMES_LIKE_TYPE } from '../common/cate-types';\nimport { SimpleStyle } from '../common/geojson-simple-style';\nimport { updateObject } from '../common/objutil';\nimport { isDefined, isNumber } from '../common/types';\nimport { getEntityByEntityId } from './components/cesium/cesium-util';\nimport { GeometryToolType } from './components/cesium/geometry-tool';\nimport desktopActions from './components/desktop/actions';\nimport { FileNode, getFileNode } from './components/desktop/fs/FileNode';\nimport {\n    MessageBoxOptions,\n    MessageBoxResult,\n    OpenDialogOptions,\n    OpenDialogResult,\n    SaveDialogOptions,\n    SaveDialogResult\n} from './components/desktop/types';\nimport { PanelContainerLayout } from './components/PanelContainer';\nimport { SplitDir } from './components/Splitter';\nimport { ViewPath, ViewState } from './components/ViewState';\nimport { DELETE_WORKSPACE_DIALOG_ID, OPEN_WORKSPACE_DIALOG_ID } from './containers/ChooseWorkspaceDialog';\nimport {\n    assignConstantValueInput,\n    assignResourceNameInput,\n    InputAssignments,\n    isInputAssigned\n} from './containers/editor/value-editor-assign';\nimport { FILE_UPLOAD_DIALOG_ID } from './containers/FileUploadDialog';\nimport { reloadEntityWithOriginalGeometry } from './containers/globe-view-layers';\nimport { requireElectron } from './electron';\nimport * as selectors from './selectors';\nimport {\n    BackendConfigState,\n    ColorMapCategoryState,\n    ControlState,\n    DatasetDescriptor,\n    DataSourceState,\n    DataStoreState,\n    GeographicPosition,\n    HubStatus,\n    ImageStatisticsState,\n    LayerState,\n    MessageState,\n    OperationKWArgs,\n    OperationState,\n    Placemark,\n    ResourceState,\n    SavedLayers,\n    SessionState,\n    SplitMode,\n    State,\n    StyleContext,\n    TaskState,\n    VariableLayerBase,\n    VariableState,\n    WebAPIAutoStopInfo,\n    WebAPIServiceInfo,\n    WebAPIStatus,\n    WorkspaceState,\n    WorldViewMode\n} from './state';\nimport {\n    AUTO_LAYER_ID,\n    findDataSource,\n    findResourceByName,\n    genSimpleId,\n    getCsvUrl,\n    getFeatureUrl,\n    getHtmlUrl,\n    getLockForGetWorkspaceVariableStatistics,\n    getLockForLoadDataSources,\n    getNonSpatialIndexers,\n    getWorldViewVectorLayerForEntity,\n    isAnimationResource,\n    isFigureResource,\n    MY_PLACES_LAYER_ID,\n    newVariableLayer,\n    PLACEMARK_ID_PREFIX\n} from './state-util';\nimport { showToast } from './toast';\nimport {\n    ERROR_CODE_CANCELLED,\n    ERROR_CODE_INVALID_PARAMS,\n    JobFailure,\n    JobProgress,\n    JobProgressHandler,\n    JobPromise,\n    JobStatusEnum,\n    newWebAPIClient,\n    WebAPIClient\n} from './webapi';\nimport { ServiceInfoAPI } from './webapi/apis/ServiceInfoAPI';\nimport { HttpError } from './webapi/HttpError';\n\n\nconst electron = requireElectron();\n\n/**\n * The fundamental Action type as it is used here.\n * All actions must have a \"type\" and a \"payload\" property.\n * Basic structure (i.e. the \"type\" property) is prescribed by \"redux\" module.\n */\nexport interface Action extends redux.Action {\n    type: string;\n    payload?: any;\n}\n\n/**\n * Signature of the Action dispatcher as used here.\n * Basic call interface is prescribed by \"redux\" module.\n */\nexport type Dispatch = (action: Action | ThunkAction) => void;\n\n/**\n * Signature of a function that returns the current application state object.\n * Call interface is prescribed by \"redux\" module.\n */\nexport type GetState = () => State;\n\n/**\n * Signature of a \"thunk\" action function as used here.\n * A thunk is piece of code that is executed later.\n * Basic call interface is prescribed by \"redux-thunk\" module.\n */\nexport type ThunkAction = (dispatch: Dispatch, getState: GetState) => any;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Application-level actions\n\nexport const UPDATE_INITIAL_STATE = 'UPDATE_INITIAL_STATE';\nexport const SET_WEBAPI_STATUS = 'SET_WEBAPI_STATUS';\nexport const SET_WEBAPI_AUTO_STOP_INFO = 'SET_WEBAPI_AUTO_STOP_INFO';\nexport const SET_WEBAPI_CLIENT = 'SET_WEBAPI_CLIENT';\nexport const SET_WEBAPI_SERVICE_URL = 'SET_WEBAPI_SERVICE_URL';\nexport const SET_WEBAPI_SERVICE_INFO = 'SET_WEBAPI_SERVICE_INFO';\nexport const UPDATE_HUB_STATUS = 'UPDATE_HUB_STATUS';\nexport const UPDATE_DIALOG_STATE = 'UPDATE_DIALOG_STATE';\nexport const UPDATE_TASK_STATE = 'UPDATE_TASK_STATE';\nexport const REMOVE_TASK_STATE = 'REMOVE_TASK_STATE';\nexport const UPDATE_CONTROL_STATE = 'UPDATE_CONTROL_STATE';\nexport const UPDATE_SESSION_STATE = 'UPDATE_SESSION_STATE';\nexport const INVOKE_CTX_OPERATION = 'INVOKE_CTX_OPERATION';\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE';\n\n\nexport function setWebAPIStatus(webAPIStatus: WebAPIStatus): Action {\n    return {type: SET_WEBAPI_STATUS, payload: {webAPIStatus}};\n}\n\nexport function setWebAPIAutoStopInfo(webAPIAutoStopInfo: WebAPIAutoStopInfo): Action {\n    return {type: SET_WEBAPI_AUTO_STOP_INFO, payload: {webAPIAutoStopInfo}};\n}\n\nexport function setWebAPIClient(webAPIClient: WebAPIClient): Action {\n    return {type: SET_WEBAPI_CLIENT, payload: {webAPIClient}};\n}\n\nfunction setWebAPIServiceURL(webAPIServiceURL: string): Action {\n    return {type: SET_WEBAPI_SERVICE_URL, payload: {webAPIServiceURL}};\n}\n\nexport function setWebAPIServiceInfo(webAPIServiceInfo: WebAPIServiceInfo): Action {\n    return {type: SET_WEBAPI_SERVICE_INFO, payload: {webAPIServiceInfo}};\n}\n\nexport function connectWebAPIService(webAPIServiceURL: string): ThunkAction {\n    return async (dispatch: Dispatch, getState: GetState) => {\n        console.debug(\"webAPIServiceURL =\", webAPIServiceURL);\n\n        dispatch(setWebAPIServiceURL(webAPIServiceURL));\n        dispatch(setWebAPIStatus('connecting'));\n\n        let serviceInfo: WebAPIServiceInfo;\n        try {\n            serviceInfo = await new ServiceInfoAPI().getServiceInfo(webAPIServiceURL);\n        } catch (error) {\n            handleFetchError(error, 'Failed to retrieve service information');\n            dispatch(setWebAPIStatus('error'));\n            return;\n        }\n\n        // TODO: check if serviceInfo.version is in expected version range (#30), otherwise error\n        console.log(`Cate WebAPI server version ${serviceInfo.version}`);\n\n        dispatch(setWebAPIServiceInfo(serviceInfo));\n\n        const webAPIClient = newWebAPIClient(selectors.apiWebSocketsUrlSelector(getState()));\n\n        const formatMessage = (message: string, event: any): string => {\n            if (event.message) {\n                return `${message} (${event.message})`;\n            } else {\n                return message;\n            }\n        };\n\n        /**\n         * Called to inform backend we are still alive.\n         * Hopefully avoids closing WebSocket connection, see issue #150.\n         */\n        const keepAlive = () => {\n            if (webAPIClient.isOpen) {\n                webAPIClient\n                    .call('keep_alive', [])\n                    .then((result: any) => {\n                        if (result) {\n                            const info: WebAPIAutoStopInfo = {\n                                availableTime: result.available_time,\n                                inactivityTime: result.inactivity_time,\n                                remainingTime: result.remaining_time,\n                            }\n                            dispatch(setWebAPIAutoStopInfo(info));\n                        }\n                    });\n            }\n        };\n\n        let keepAliveTimer = null;\n        let keepAliveSeconds = (process.env.NODE_ENV === 'development') ? 1 : 5;\n\n        webAPIClient.onOpen = () => {\n            dispatch(setWebAPIClient(webAPIClient));\n            dispatch(loadBackendConfig());\n            dispatch(loadColorMaps());\n            dispatch(loadPreferences());\n            dispatch(loadOperations());\n            keepAliveTimer = setInterval(keepAlive, keepAliveSeconds * 1000);\n        };\n\n        webAPIClient.onClose = (event: CloseEvent) => {\n            if (keepAliveTimer !== null) {\n                clearInterval(keepAliveTimer);\n            }\n            const webAPIStatus = getState().communication.webAPIStatus;\n            if (webAPIStatus === 'shuttingDown' || webAPIStatus === 'loggingOut') {\n                // When we are logging off, the webAPIClient is expected to close.\n                return;\n            }\n            // When we end up here, the connection closed unintentionally.\n            console.error('webAPIClient.onClose:', event);\n            const closeDetails = `reason=${event.reason}, code=${event.code}, clean=${event.wasClean}`;\n            showToast(\n                {\n                    type: 'notification',\n                    text: formatMessage(`Connection to Cate service closed: ${closeDetails}`, event)\n                },\n                120 * 1000\n            );\n            dispatch(setWebAPIStatus('closed'));\n        };\n\n        webAPIClient.onError = (event: ErrorEvent) => {\n            console.error('webAPIClient.onError:', event);\n            dispatch(setWebAPIStatus('error'));\n            showToast(\n                {\n                    type: 'error',\n                    text: formatMessage('Error connecting to Cate service', event)\n                }\n            );\n        };\n\n        webAPIClient.onWarning = (event: Event) => {\n            console.warn('webAPIClient.onWarning:', event);\n            showToast(\n                {\n                    type: 'warning',\n                    text: formatMessage('Warning from Cate service', event)\n                }\n            );\n        };\n    };\n}\n\nexport function updateHubStatus(hubStatus: HubStatus): Action {\n    return {type: UPDATE_HUB_STATUS, payload: hubStatus};\n}\n\nexport function updateInitialState(initialState: Object): Action {\n    return {type: UPDATE_INITIAL_STATE, payload: initialState};\n}\n\nexport function updateDialogState(dialogId: string, ...dialogState: any): Action {\n    return {type: UPDATE_DIALOG_STATE, payload: {dialogId, dialogState: Object.assign({}, ...dialogState)}};\n}\n\nexport function showDialog(dialogId: string, dialogState?: any): Action {\n    return updateDialogState(dialogId, dialogState, {isOpen: true});\n}\n\nexport function hideDialog(dialogId: string, dialogState?: any): Action {\n    return updateDialogState(dialogId, dialogState, {isOpen: false});\n}\n\nexport function updateTaskState(jobId: number, taskState: TaskState): Action {\n    return {type: UPDATE_TASK_STATE, payload: {jobId, taskState}};\n}\n\nexport function removeTaskState(jobId: number): Action {\n    return {type: REMOVE_TASK_STATE, payload: {jobId}};\n}\n\nexport function setControlProperty(propertyName: keyof ControlState, value: any): Action {\n    return updateControlState({[propertyName]: value});\n}\n\nexport function invokeCtxOperation(operation: OperationState, inputAssignments: InputAssignments): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n\n        const resource = selectors.selectedResourceSelector(getState());\n        if (resource) {\n            for (let input of operation.inputs) {\n                if (!isInputAssigned(inputAssignments, input.name)\n                    && isAssignableFrom(input.dataType, resource.dataType)) {\n                    inputAssignments = assignResourceNameInput(inputAssignments, input.name, resource.name);\n                    break;\n                }\n            }\n        }\n\n        const variable = selectors.selectedVariableSelector(getState());\n        if (variable) {\n            for (let input of operation.inputs) {\n                if (!isInputAssigned(inputAssignments, input.name)\n                    && (input.dataType === VAR_NAME_LIKE_TYPE || input.dataType === VAR_NAMES_LIKE_TYPE)) {\n                    inputAssignments = assignConstantValueInput(inputAssignments, input.name, variable.name);\n                    break;\n                }\n            }\n        }\n\n        dispatch(invokeCtxOperationImpl(operation.name, inputAssignments));\n    };\n}\n\nexport function invokeCtxOperationImpl(selectedCtxOperationName: string, inputAssignments: InputAssignments): Action {\n    return {type: INVOKE_CTX_OPERATION, payload: {selectedCtxOperationName, inputAssignments}};\n}\n\nexport function updateControlState(controlState: Partial<ControlState>): Action {\n    return {type: UPDATE_CONTROL_STATE, payload: controlState};\n}\n\nexport function loadPreferences(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call() {\n            return selectors.remoteStorageAPISelector(getState()).loadPreferences();\n        }\n\n        function action(session: Partial<SessionState>) {\n            dispatch(updateSessionState(session));\n            dispatch(loadDataStores());\n            dispatch(loadInitialWorkspace(\n                getState().session.reopenLastWorkspace,\n                getState().session.lastWorkspacePath));\n        }\n\n        function planB(jobFailure: JobFailure) {\n            dispatch(showMessageBox({\n                                        type: 'error',\n                                        title: 'Loading Preferences',\n                                        message: 'Failed to load preferences.',\n                                        detail: jobFailure.message\n                                    }));\n        }\n\n        callAPI({\n                    title: `Loading Preferences`,\n                    dispatch, call, action, planB, requireDoneNotification: true\n                });\n    }\n}\n\n\nexport function savePreferences(postAction?: Action | ThunkAction): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        dispatch(updatePreferences(getState().session, postAction))\n    }\n}\n\nexport function updatePreferences(session: Partial<SessionState>,\n                                  postAction?: Action | ThunkAction): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call() {\n            return selectors.remoteStorageAPISelector(getState()).updatePreferences(session);\n        }\n\n        function action() {\n            if (postAction) {\n                dispatch(postAction);\n            }\n        }\n\n        function planB(jobFailure: JobFailure) {\n            dispatch(showMessageBox({\n                                        type: 'error',\n                                        title: 'Update Preferences',\n                                        message: 'Failed to update preferences.',\n                                        detail: jobFailure.message\n                                    }));\n            if (postAction) {\n                dispatch(postAction);\n            }\n        }\n\n        callAPI({\n                    title: `Update Preferences`,\n                    dispatch, call, action, planB, requireDoneNotification: true\n                });\n    }\n}\n\n\nexport function setSessionProperty(propertyName: keyof SessionState, value: any): Action {\n    return updateSessionState({[propertyName]: value});\n}\n\nexport function updateSessionState(sessionState: Partial<SessionState>): Action {\n    return {type: UPDATE_SESSION_STATE, payload: sessionState};\n}\n\nexport function loadBackendConfig(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call() {\n            // Get state from the Python back-end\n            return selectors.backendConfigAPISelector(getState()).getBackendConfig();\n        }\n\n        function action(backendConfig: BackendConfigState) {\n            dispatch(updateBackendConfig(backendConfig));\n        }\n\n        callAPI({title: 'Load configuration', dispatch, call, action});\n    };\n}\n\nexport function updateBackendConfig(backendConfig: BackendConfigState): Action {\n    return updateSessionState({backendConfig});\n}\n\nexport function storeBackendConfig(backendConfig: BackendConfigState): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call() {\n            // Store state changes to the Python back-end\n            return selectors.backendConfigAPISelector(getState()).setBackendConfig(backendConfig);\n        }\n\n        callAPI({title: 'Store configuration', dispatch, call});\n    };\n}\n\nexport function cancelJob(jobId: number): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const webAPIClient = selectors.webAPIClientSelector(getState());\n        webAPIClient.cancel(jobId);\n    }\n}\n\nfunction jobSubmitted(jobId: number, jobTitle: string, requestLock?: string): Action {\n    return updateTaskState(jobId, {status: JobStatusEnum.SUBMITTED, title: jobTitle, requestLock: requestLock});\n}\n\nfunction jobProgress(progress: JobProgress): Action {\n    return updateTaskState(progress.id, {status: JobStatusEnum.IN_PROGRESS, progress});\n}\n\nfunction jobDone(jobId: number): Action {\n    return updateTaskState(jobId, {status: JobStatusEnum.DONE});\n}\n\nfunction jobFailed(jobId: number,\n                   jobTitle: string,\n                   failure: JobFailure,\n                   dispatch: (action: Action) => void,\n                   notificationDisabled: boolean): void {\n    const status = failure.code === ERROR_CODE_CANCELLED ? JobStatusEnum.CANCELLED : JobStatusEnum.FAILED;\n    let type, text, action;\n    if (status === JobStatusEnum.CANCELLED) {\n        type = 'notification';\n        text = `Cancelled: ${jobTitle}`;\n    } else {\n        type = 'error';\n        text = failure.message || `Failed: ${jobTitle}`;\n        action = {\n            text: 'Details',\n            onClick: () => {\n                dispatch(showJobFailureDetails(jobTitle, failure));\n            }\n        };\n    }\n    dispatch(updateTaskState(jobId, {status, failure}));\n    if (!notificationDisabled) {\n        if (failure.code === ERROR_CODE_INVALID_PARAMS) {\n            dispatch(showJobFailureDetails(jobTitle, failure));\n        } else {\n            showToast({type, text, action} as MessageState);\n        }\n    }\n}\n\nexport function showJobFailureDetails(jobTitle: string, jobFailure: JobFailure): Action {\n    return showDialog('jobFailureDialog', {jobTitle, jobFailure});\n}\n\nexport type JobPromiseFactory<T> = (jobProgressHandler: JobProgressHandler) => JobPromise<T>;\nexport type JobPromiseAction<T> = (jobResult?: T) => void;\nexport type JobPromisePlanB = (jobFailure: JobFailure) => void;\n\ninterface CallAPIOptions<T> {\n    /** The actual API call. */\n    call: JobPromiseFactory<T>;\n    /** A human-readable title for the job that is being created. */\n    title: string;\n    /** Redux' dispatch() function. */\n    dispatch: (action: Action) => void;\n    /** The action to be performed when the API call succeeds. */\n    action?: JobPromiseAction<T>;\n    /** A lock to prevent multiple invocations. */\n    requestLock?: string;\n    /** The action to be performed when the API call fails. */\n    planB?: JobPromisePlanB;\n    /** If true, no notifications about job status will be delivered, except errors. */\n    disableNotifications?: boolean;\n    /** If true, a notification is shown when done even when no start notification was shown (due to startToastDelay). */\n    requireDoneNotification?: boolean;\n    /** Delay in milliseconds before a toast is shown. */\n    startToastDelay?: number;\n}\n\n/**\n * Call some (remote) API asynchronously.\n *\n * @param options Options that control the API call.\n */\nexport function callAPI<T>(options: CallAPIOptions<T>): void {\n    const {\n        call,\n        title,\n        dispatch,\n        action,\n        requestLock,\n        planB,\n        disableNotifications = false,\n        requireDoneNotification = false,\n        startToastDelay = 500,\n    } = options;\n\n    const onProgress = (progress: JobProgress) => {\n        if (!disableNotifications) {\n            dispatch(jobProgress(progress));\n        }\n    };\n    const jobPromise = call(onProgress);\n\n    let startToastShown = false;\n    let startToastTimeoutHandler: any;\n    if (!disableNotifications) {\n        startToastTimeoutHandler = setTimeout(() => {\n            showToast({type: 'notification', text: 'Started: ' + title});\n            startToastShown = true;\n        }, startToastDelay);\n        dispatch(jobSubmitted(jobPromise.getJobId(), title, requestLock));\n    }\n\n    const onDone = (jobResult: T) => {\n        if (!disableNotifications) {\n            clearTimeout(startToastTimeoutHandler);\n            if (startToastShown || requireDoneNotification) {\n                showToast({type: 'success', text: 'Done: ' + title});\n            }\n            dispatch(jobDone(jobPromise.getJobId()));\n        }\n        if (action) {\n            action(jobResult);\n        }\n    };\n    const onFailure = (jobFailure: JobFailure) => {\n        if (!disableNotifications) {\n            if (!startToastShown) {\n                clearTimeout(startToastTimeoutHandler);\n            }\n        }\n        // Always show errors in TASKS panel\n        jobFailed(jobPromise.getJobId(), title, jobFailure, dispatch, disableNotifications);\n        if (planB) {\n            planB(jobFailure);\n        }\n    };\n\n    jobPromise.then(onDone, onFailure);\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Globe State\n\nexport const SET_GLOBE_MOUSE_POSITION = 'SET_GLOBE_MOUSE_POSITION';\nexport const SET_GLOBE_VIEW_POSITION = 'SET_GLOBE_VIEW_POSITION';\n\nexport function setGlobeMousePosition(position: GeographicPosition): Action {\n    return {type: SET_GLOBE_MOUSE_POSITION, payload: {position}};\n}\n\n\nfunction setGlobeViewPositionImpl(position: GeographicPosition | null,\n                                  positionData: { [varName: string]: number } | null): Action {\n    return {type: SET_GLOBE_VIEW_POSITION, payload: {position, positionData}};\n}\n\nexport function setGlobeViewPosition(position: GeographicPosition): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        if (position) {\n            // TODO: using selectedRightBottomPanelID is no good indicator for checking VARIABLES panel visibility.\n            const selectedRightBottomPanelID = selectors.selectedRightBottomPanelIdSelector(getState());\n            if (selectedRightBottomPanelID === 'variables') {\n                const baseDir = selectors.workspaceBaseDirSelector(getState());\n                if (!baseDir) {\n                    // Workspace not yet ready, that's ok.\n                    return;\n                }\n                const resource = selectors.selectedResourceSelector(getState());\n                const layer = selectors.selectedVariableImageLayerSelector(getState());\n                if (layer && resource) {\n                    const indexers = getNonSpatialIndexers(resource, layer);\n\n                    const call = () => {\n                        return selectors.datasetAPISelector(getState()).extractPixelValues(baseDir,\n                                                                                           resource.name,\n                                                                                           [position.longitude, position.latitude],\n                                                                                           indexers);\n                    };\n\n                    const action = (positionData: { [varName: string]: number }) => {\n                        dispatch(setGlobeViewPositionImpl(position, positionData));\n                    };\n\n                    callAPI({title: 'Load cell values', dispatch, call, action, disableNotifications: true});\n                    return;\n                }\n            }\n        } else {\n            dispatch(setGlobeViewPositionImpl(null, null));\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// File-system actions\n\nexport const UPDATE_FS_ROOT_NODE = 'UPDATE_FS_ROOT_NODE';\n\nfunction updateFsRootNode(path: string, updatedFileNode: FileNode): Action {\n    return {type: UPDATE_FS_ROOT_NODE, payload: {path, updatedFileNode}};\n}\n\nexport function updateFileNode(path: string, force: boolean): ThunkAction {\n    const pathComponents = path.split('/');\n\n    return (dispatch: Dispatch, getState: GetState) => {\n        const api = selectors.fileSystemAPISelector(getState());\n        if (api === null) {\n            console.error('fileSystemAPI not ready');\n            return;\n        }\n        // Get all the subPaths of path that must be updated:\n        const subPathsToBeUpdated: string[] = [];\n        pathComponents.forEach((name, depth) => {\n            const subPath = pathComponents.slice(0, depth + 1).join('/');\n            if (subPathsToBeUpdated.length === 0) {\n                const subNode = getFileNode(getState().data.fsRootNode, subPath);\n                if (!subNode) {\n                    subPathsToBeUpdated.push('');\n                    subPathsToBeUpdated.push(subPath);\n                } else if (!subNode.status || force) {\n                    subPathsToBeUpdated.push(subPath);\n                }\n            } else {\n                // Also add all sub-paths\n                subPathsToBeUpdated.push(subPath);\n            }\n        });\n        dispatch(updateSubPathFileNode(subPathsToBeUpdated, force));\n    }\n}\n\nfunction updateSubPathFileNode(subPaths: string[], force: boolean): ThunkAction {\n\n    return (dispatch: Dispatch, getState: GetState) => {\n        if (subPaths.length === 0) {\n            return;\n        }\n\n        const api = selectors.fileSystemAPISelector(getState());\n        if (api === null) {\n            console.error('fileSystemAPI not ready');\n            return;\n        }\n\n        const subPath = subPaths[0];\n        const subNode = getFileNode(getState().data.fsRootNode, subPath);\n        if (!subNode) {\n            console.error(`sub-path not found in file system root node: \"${subPath}\"`);\n            return;\n        }\n\n        if (subNode.status && !force) {\n            return;\n        }\n\n        dispatch(updateFsRootNode(subPath, {...subNode, status: 'updating'}));\n\n        const call = () => {\n            return api.updateFileNode(subPath);\n        };\n\n        const action = (updatedFileNode: FileNode) => {\n            dispatch(updateFsRootNode(subPath, updatedFileNode));\n            if (subPaths.length > 1) {\n                dispatch(updateSubPathFileNode(subPaths.slice(1), force));\n            }\n        };\n\n        const planB = (jobFailure: JobFailure) => {\n            dispatch(showMessageBox({\n                                        type: 'error',\n                                        title: 'File System Update',\n                                        message: 'Failed updating file in file system.',\n                                        detail: jobFailure.message\n                                    }));\n        };\n\n        callAPI({\n                    title: `Updating Files`,\n                    dispatch, call, action, planB, requireDoneNotification: false\n                });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// (User) Placemark actions\n\nexport const ACTIVATE_NEW_PLACEMARK_TOOL = 'ACTIVATE_NEW_PLACEMARK_TOOL';\nexport const ADD_PLACEMARK = 'ADD_PLACEMARK';\nexport const REMOVE_PLACEMARK = 'REMOVE_PLACEMARK';\nexport const UPDATE_PLACEMARK_GEOMETRY = 'UPDATE_PLACEMARK_GEOMETRY';\nexport const UPDATE_PLACEMARK_PROPERTIES = 'UPDATE_PLACEMARK_PROPERTIES';\nexport const UPDATE_PLACEMARK_STYLE = 'UPDATE_PLACEMARK_STYLE';\n\nexport function activateNewPlacemarkTool(newPlacemarkToolType: GeometryToolType) {\n    return {type: ACTIVATE_NEW_PLACEMARK_TOOL, payload: {newPlacemarkToolType}};\n}\n\nexport function addPlacemark(placemark: Placemark): Action {\n    return {type: ADD_PLACEMARK, payload: {placemark}};\n}\n\nexport function addPointPlacemark(longitude: number, latitude: number, properties: any): Action {\n    const placemark = {\n        id: genSimpleId(PLACEMARK_ID_PREFIX),\n        type: 'Feature',\n        geometry: {\n            type: 'Point',\n            coordinates: [longitude, latitude]\n        },\n        properties,\n    };\n    return addPlacemark(placemark as any);\n}\n\nexport function removePlacemark(placemarkId: string): Action {\n    return {type: REMOVE_PLACEMARK, payload: {placemarkId}};\n}\n\nexport function updatePlacemarkGeometry(placemarkId: string, geometry: DirectGeometryObject | any): Action {\n    return {type: UPDATE_PLACEMARK_GEOMETRY, payload: {placemarkId, geometry}};\n}\n\nexport function updatePlacemarkProperties(placemarkId: string, properties: any): Action {\n    return {type: UPDATE_PLACEMARK_PROPERTIES, payload: {placemarkId, properties}};\n}\n\nexport function updatePlacemarkStyle(placemarkId: string, style: SimpleStyle): Action {\n    return {type: UPDATE_PLACEMARK_STYLE, payload: {placemarkId, style}};\n}\n\nexport function locatePlacemark(placemarkId: string): ThunkAction {\n    return async (dispatch: Dispatch, getState: GetState) => {\n        let viewer = selectors.selectedWorldViewViewerSelector(getState());\n        if (viewer) {\n            let selectedEntity = getEntityByEntityId(viewer, placemarkId);\n            if (selectedEntity) {\n                let headingPitchRange;\n                if (selectedEntity.position) {\n                    let heading = 0, pitch = -3.14159 / 2, range = 2500000;\n                    headingPitchRange = new Cesium.HeadingPitchRange(heading, pitch, range);\n                }\n                await viewer.zoomTo(selectedEntity, headingPitchRange);\n            }\n        }\n    };\n}\n\nexport function setSelectedPlacemarkId(selectedPlacemarkId: string | null): Action {\n    return updateSessionState({selectedPlacemarkId});\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Data stores / data sources actions\n\nexport const UPDATE_DATA_STORES = 'UPDATE_DATA_STORES';\nexport const UPDATE_DATA_SOURCES = 'UPDATE_DATA_SOURCES';\nexport const UPDATE_DATA_SOURCE_META_INFO = 'UPDATE_DATA_SOURCE_META_INFO';\n\n/**\n * Asynchronously load the available Cate data stores.\n * Called only a single time on app initialisation.\n *\n * @returns a Redux thunk action\n */\nexport function loadDataStores(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call() {\n            return selectors.datasetAPISelector(getState()).getDataStores();\n        }\n\n        function action(dataStores: DataStoreState[]) {\n            const offlineMode = selectors.offlineModeSelector(getState());\n            if (offlineMode) {\n                dataStores = dataStores.filter(ds => ds.isLocal);\n            }\n            dispatch(updateDataStores(dataStores));\n\n            if (dataStores && dataStores.length) {\n                let selectedDataStoreId = selectors.selectedDataStoreIdSelector(getState());\n                const selectedDataStore = dataStores.find(dataStore => dataStore.id === selectedDataStoreId);\n                selectedDataStoreId = selectedDataStore ? selectedDataStore.id : dataStores[0].id;\n                dispatch(setSelectedDataStoreId(selectedDataStoreId));\n            }\n        }\n\n        callAPI({title: 'Loading data stores', dispatch, call, action});\n    }\n}\n\n\nexport function updateDataStores(dataStores: Array<DataStoreState>): Action {\n    return {type: UPDATE_DATA_STORES, payload: {dataStores}};\n}\n\n/**\n * Asynchronously load data sources for given data store ID.\n *\n * @param dataStoreId\n * @param setSelection\n * @returns a Redux thunk action\n */\nexport function loadDataSources(dataStoreId: string, setSelection: boolean): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const requestLock = getLockForLoadDataSources(dataStoreId);\n        if (selectors.activeRequestLocksSelector(getState()).has(requestLock)) {\n            return;\n        }\n\n        function call(onProgress) {\n            return selectors.datasetAPISelector(getState()).getDataSources(dataStoreId, onProgress);\n        }\n\n        function action(dataSources: DataSourceState[]) {\n            dispatch(updateDataSources(dataStoreId, dataSources));\n            if (setSelection) {\n                let selectedDataSourceId = selectors.selectedDataSourceIdSelector(getState());\n                if (dataSources && dataSources.length) {\n                    const selectedDataSource = dataSources.find(dataSource => dataSource.id === selectedDataSourceId);\n                    selectedDataSourceId = selectedDataSource ? selectedDataSource.id : selectedDataSourceId;\n                }\n                dispatch(setSelectedDataSourceId(selectedDataSourceId));\n            }\n        }\n\n        const dataStore = getState().data.dataStores.find(dataStore => dataStore.id === dataStoreId);\n        callAPI({\n                    title: `Load data sources for store \"${dataStore ? dataStore.id : '?'}\"`,\n                    dispatch,\n                    call,\n                    action,\n                    requestLock\n                });\n    }\n}\n\nexport function updateDataSources(dataStoreId: string, dataSources): Action {\n    return {type: UPDATE_DATA_SOURCES, payload: {dataStoreId, dataSources}};\n}\n\nexport function setSelectedDataStoreId(selectedDataStoreId: string | null, force: boolean = false): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        dispatch(setSelectedDataStoreIdImpl(selectedDataStoreId));\n        if (selectedDataStoreId !== null) {\n            const dataStore = getState().data.dataStores.find(dataStore => dataStore.id === selectedDataStoreId);\n            if (force || !dataStore.dataSources) {\n                dispatch(loadDataSources(selectedDataStoreId, true));\n            }\n        }\n    }\n}\n\nexport function refreshLocalDataStore(): ThunkAction {\n    return (dispatch: Dispatch) => {\n        dispatch(setSelectedDataStoreId(\"local\", true));\n    }\n}\n\nexport function setSelectedDataStoreIdImpl(selectedDataStoreId: string | null) {\n    return updateSessionState({selectedDataStoreId});\n}\n\nexport function setSelectedDataSourceId(selectedDataSourceId: string): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        dispatch(updateSessionState({selectedDataSourceId}));\n        const dataStoreId = getState().session.selectedDataStoreId;\n        if (dataStoreId && selectedDataSourceId) {\n            dispatch(loadDataSourceMetaInfo(dataStoreId, selectedDataSourceId));\n        }\n    }\n}\n\nexport function setDataSourceFilterExpr(dataSourceFilterExpr: string) {\n    return updateSessionState({dataSourceFilterExpr});\n}\n\nexport function loadDataSourceMetaInfo(dataStoreId: string, dataSourceId: string): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const dataStores = getState().data.dataStores;\n        if (!dataStores) {\n            return;\n        }\n        const dataSource = findDataSource(dataStores, dataStoreId, dataSourceId);\n        if (!dataSource || dataSource.metaInfoStatus !== 'init') {\n            return;\n        }\n\n        dispatch(updateDataSourceMetaInfo(dataStoreId, dataSourceId, undefined, 'loading'));\n\n        function call(onProgress) {\n            return selectors.datasetAPISelector(getState()).getDataSourceMetaInfo(dataStoreId, dataSourceId, onProgress);\n        }\n\n        function action(metaInfo: DatasetDescriptor) {\n            dispatch(updateDataSourceMetaInfo(dataStoreId, dataSourceId, metaInfo, 'ok'));\n        }\n\n        function planB() {\n            dispatch(updateDataSourceMetaInfo(dataStoreId, dataSourceId, undefined, 'error'));\n        }\n\n        callAPI({title: `Loading metadata for ${dataSourceId}`, dispatch, call, action, planB});\n    };\n}\n\nexport function updateDataSourceMetaInfo(dataStoreId: string,\n                                         dataSourceId: string,\n                                         metaInfo: DatasetDescriptor | undefined,\n                                         metaInfoStatus: 'loading' | 'ok' | 'error' = 'ok'): Action {\n    return {type: UPDATE_DATA_SOURCE_META_INFO, payload: {dataStoreId, dataSourceId, metaInfo, metaInfoStatus}};\n}\n\nexport function openDataset(dataStoreId: string, dataSourceId: string, args: any, updateLocalDataSources: boolean): ThunkAction {\n    return (dispatch: Dispatch) => {\n\n        const opName = 'open_dataset';\n        const opArgs = {\n            ds_id: dataSourceId,\n            data_store_id: dataStoreId,\n            ...args\n        };\n\n        // Wrap the opArgs into a new OpArgs object where each value is indicated by a \"value\" key.\n        // The reason is that an opArg could also refer to a resource, the \"source\" key would be used instead.\n        //\n        const wrappedOpArgs = {};\n        Object.keys(opArgs).forEach(name => {\n            wrappedOpArgs[name] = {value: opArgs[name]};\n        });\n        let postAction;\n        if (updateLocalDataSources) {\n            postAction = (dispatch: Dispatch) => {\n                dispatch(loadDataSources('local', false));\n            }\n        }\n\n        dispatch(setWorkspaceResource(opName,\n                                      wrappedOpArgs,\n                                      null,\n                                      false,\n                                      `Opening data source \"${dataSourceId}\"`, postAction));\n    }\n}\n\nexport function addLocalDataset(dataSourceId: string, filePathPattern: string): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call(onProgress) {\n            return selectors.datasetAPISelector(getState()).addLocalDataSource(dataSourceId, filePathPattern, onProgress);\n        }\n\n        function action(dataSources: DataSourceState[]) {\n            dispatch(updateDataSources('local', dataSources));\n        }\n\n        callAPI({\n                    title: `Add file data source \"${dataSourceId}\"`,\n                    dispatch, call, action, requireDoneNotification: true\n                });\n    }\n}\n\nexport function removeLocalDataset(dataSourceId: string, removeFiles: boolean): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call(onProgress) {\n            return selectors.datasetAPISelector(getState()).removeLocalDataSource(dataSourceId, removeFiles, onProgress);\n        }\n\n        function action(dataSources: DataSourceState[]) {\n            dispatch(updateDataSources('local', dataSources));\n        }\n\n        callAPI({\n                    title: `Remove copy of file data source \"${dataSourceId}\"`,\n                    dispatch, call, action, requireDoneNotification: true\n                });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Operation actions\n\nexport const UPDATE_OPERATIONS = 'UPDATE_OPERATIONS';\n\nexport function loadOperations(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n\n        function call() {\n            return selectors.operationAPISelector(getState()).getOperations();\n        }\n\n        function action(operations: OperationState[]) {\n            dispatch(updateOperations(operations));\n        }\n\n        callAPI({title: 'Load operations', dispatch, call, action});\n    };\n}\n\nexport function updateOperations(operations): Action {\n    return {type: UPDATE_OPERATIONS, payload: {operations}};\n}\n\nexport function setSelectedOperationName(selectedOperationName: string | null) {\n    return updateSessionState({selectedOperationName});\n}\n\nexport function setOperationFilterTags(operationFilterTags: string[]) {\n    return updateSessionState({operationFilterTags});\n}\n\nexport function setOperationFilterExpr(operationFilterExpr: string) {\n    return updateSessionState({operationFilterExpr});\n}\n\nexport function showOperationStepDialog(dialogId: string) {\n    return showDialog(dialogId);\n}\n\nexport function hideOperationStepDialog(dialogId: string, inputAssignments?): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        if (inputAssignments) {\n            const dialogState = getState().control.dialogs[dialogId] as any;\n            inputAssignments = {...dialogState.inputAssignments, ...inputAssignments};\n        }\n        dispatch(hideDialog(dialogId, {inputAssignments}));\n    };\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Workspace actions\n\nexport const SET_CURRENT_WORKSPACE = 'SET_CURRENT_WORKSPACE';\nexport const UPDATE_WORKSPACE_NAMES = 'UPDATE_WORKSPACE_NAMES';\nexport const RENAME_RESOURCE = 'RENAME_RESOURCE';\nexport const SHOW_FIGURE_VIEW = 'SHOW_FIGURE_VIEW';\nexport const SHOW_ANIMATION_VIEW = 'SHOW_ANIMATION_VIEW';\nexport const SHOW_TABLE_VIEW = 'SHOW_TABLE_VIEW';\n\nexport function updateWorkspaceNames(workspaceNames: string[]): Action {\n    return {type: UPDATE_WORKSPACE_NAMES, payload: {workspaceNames}};\n}\n\n/**\n * Asynchronously load the initial workspace.\n * Called only a single time on app initialisation.\n *\n * @returns a Redux thunk action\n */\nexport function loadInitialWorkspace(reopenLastWorkspace?: boolean, lastWorkspacePath?: string): ThunkAction {\n    return (dispatch: Dispatch) => {\n        if (reopenLastWorkspace && lastWorkspacePath) {\n            dispatch(openWorkspace(lastWorkspacePath));\n        } else {\n            dispatch(newWorkspace(null));\n        }\n    }\n}\n\n/**\n * Asynchronously create a new workspace.\n *\n * @param workspacePath workspace path, if null, a new scratch workspace will be created\n * @returns a Redux thunk action\n */\nexport function newWorkspace(workspacePath: string | null): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call() {\n            return selectors.workspaceAPISelector(getState()).newWorkspace(workspacePath);\n        }\n\n        function action(workspace: WorkspaceState) {\n            dispatch(setCurrentWorkspace(workspace));\n            dispatch(saveWorkspace());\n            if (workspace && workspace.workflow.steps.length > 0) {\n                dispatch(setSelectedWorkspaceResourceName(workspace.workflow.steps[0].id));\n            } else {\n                dispatch(setSelectedWorkspaceResourceName(null));\n            }\n            dispatch(savePreferences());\n        }\n\n        function planB(jobFailure: JobFailure) {\n            dispatch(showMessageBox({\n                                        type: 'error',\n                                        title: 'New Workspace',\n                                        message: 'Failed to create new workspace.',\n                                        detail: jobFailure.message\n                                    }));\n        }\n\n        callAPI({\n                    title: 'New workspace' + (workspacePath ? ` \"${workspacePath}\"` : ''),\n                    dispatch, call, action, planB, requireDoneNotification: true\n                });\n    }\n}\n\n/**\n * Asynchronously open a workspace.\n *\n * @param workspacePath workspace path\n * @returns a Redux thunk action\n */\nexport function openWorkspace(workspacePath?: string | null): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call(onProgress) {\n            return selectors.workspaceAPISelector(getState()).openWorkspace(workspacePath, onProgress);\n        }\n\n        function action(workspace: WorkspaceState) {\n            dispatch(setCurrentWorkspace(workspace));\n            if (workspace && workspace.workflow.steps.length > 0) {\n                dispatch(setSelectedWorkspaceResourceName(workspace.workflow.steps[0].id));\n            } else {\n                dispatch(setSelectedWorkspaceResourceName(null));\n            }\n            dispatch(savePreferences());\n        }\n\n        function planB() {\n            let workspace = getState().data.workspace;\n            if (!workspace) {\n                dispatch(newWorkspace(null));\n            }\n        }\n\n        callAPI({\n                    title: `Open workspace \"${workspacePath}\"`,\n                    dispatch, call, action, planB, requireDoneNotification: true\n                });\n    }\n}\n\n/**\n * Asynchronously close the current workspace.\n *\n * @returns a Redux thunk action\n */\nexport function closeWorkspace(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const baseDir = selectors.workspaceBaseDirSelector(getState());\n        assert.ok(baseDir);\n\n        function call() {\n            return selectors.workspaceAPISelector(getState()).closeWorkspace(baseDir);\n        }\n\n        function action() {\n            dispatch(newWorkspace(null));\n        }\n\n        callAPI({\n                    title: 'Close workspace',\n                    dispatch, call, action, requireDoneNotification: true\n                });\n    }\n}\n\n/**\n * Asynchronously close the current workspace.\n *\n * @returns a Redux thunk action\n */\nexport function saveWorkspace(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        let workspace = getState().data.workspace;\n        assert.ok(workspace);\n\n        if (workspace.isScratch) {\n            return saveWorkspaceAs;\n        }\n\n        const baseDir = workspace.baseDir;\n\n        function call(onProgress) {\n            return selectors.workspaceAPISelector(getState()).saveWorkspace(baseDir, onProgress);\n        }\n\n        function action(workspace: WorkspaceState) {\n            dispatch(setCurrentWorkspace(workspace));\n            dispatch(savePreferences());\n        }\n\n        function planB(jobFailure: JobFailure) {\n            dispatch(showMessageBox({\n                                        type: 'error',\n                                        title: 'Save Workspace',\n                                        message: 'Failed to save workspace.',\n                                        detail: jobFailure.message\n                                    }));\n        }\n\n        callAPI({\n                    title: 'Save workspace',\n                    dispatch, call, action, planB, requireDoneNotification: true\n                });\n    }\n}\n\n/**\n * Asynchronously save the current workspace using a new name.\n *\n * @returns a Redux thunk action\n */\nexport function saveWorkspaceAs(workspacePath: string): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const baseDir = selectors.workspaceBaseDirSelector(getState());\n        assert.ok(baseDir);\n\n        function call(onProgress) {\n            return selectors.workspaceAPISelector(getState()).saveWorkspaceAs(baseDir, workspacePath, onProgress);\n        }\n\n        function action(workspace: WorkspaceState) {\n            dispatch(setCurrentWorkspace(workspace));\n            dispatch(savePreferences());\n        }\n\n        function planB(jobFailure: JobFailure) {\n            dispatch(showMessageBox({\n                                        type: 'error',\n                                        title: 'Save Workspace As',\n                                        message: 'Failed to save workspace.',\n                                        detail: jobFailure.message\n                                    }));\n        }\n\n        callAPI({\n                    title: `Save workspace as \"${workspacePath}\"`,\n                    dispatch, call, action, planB, requireDoneNotification: true\n                });\n    }\n}\n\n/**\n * Asynchronously clean the current workspace.\n *\n * @returns a Redux thunk action\n */\nexport function cleanWorkspace(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        let workspace = getState().data.workspace;\n        assert.ok(workspace);\n        const baseDir = workspace.baseDir;\n\n        function call() {\n            return selectors.workspaceAPISelector(getState()).cleanWorkspace(baseDir);\n        }\n\n        function action(workspace: WorkspaceState) {\n            dispatch(setCurrentWorkspace(workspace));\n        }\n\n        callAPI({\n                    title: `Clean workspace \"${baseDir}\"`,\n                    dispatch, call, action, requireDoneNotification: true\n                });\n    }\n}\n\n\n/**\n * Asynchronously delete the given resource.\n *\n * @returns a Redux thunk action\n */\nexport function deleteResource(resName: string): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        let workspace = getState().data.workspace;\n        assert.ok(workspace);\n        const baseDir = workspace.baseDir;\n\n        function call() {\n            return selectors.workspaceAPISelector(getState()).deleteWorkspaceResource(baseDir, resName);\n        }\n\n        function action(workspace: WorkspaceState) {\n            dispatch(setCurrentWorkspace(workspace));\n        }\n\n        callAPI({\n                    title: `Delete step/resource \"${resName}\"`, dispatch, call, action,\n                    requireDoneNotification: true\n                });\n    }\n}\n\n/**\n * Asynchronously delete the workspace with the given name.\n *\n * @returns a Redux thunk action\n */\nexport function deleteWorkspace(workspaceName: string, deleteEntireWorkspace = true): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n\n        function call() {\n            return selectors.workspaceAPISelector(getState()).deleteWorkspace(workspaceName, deleteEntireWorkspace);\n        }\n\n        callAPI({\n                    title: `Delete step/workspace \"${workspaceName}\"`, dispatch, call,\n                    requireDoneNotification: true\n                });\n    }\n}\n\n\n/**\n * Bring up the \"New Workspace\" dialog.\n *\n * @returns a Redux action\n */\nexport function newWorkspaceInteractive() {\n    return showDialog('newWorkspaceDialog');\n}\n\nfunction openRemoteWorkspace(dispatch: (action: (Action | ThunkAction)) => void,\n                             getState: () => State) {\n    let jobPromise = selectors.workspaceAPISelector(getState()).listWorkspaces();\n    jobPromise.then(workspaceNames => {\n        dispatch(updateWorkspaceNames(workspaceNames));\n        dispatch(showDialog(OPEN_WORKSPACE_DIALOG_ID));\n    })\n}\n\nfunction deleteRemoteWorkspace(dispatch: (action: (Action | ThunkAction)) => void,\n                               getState: () => State) {\n    let jobPromise = selectors.workspaceAPISelector(getState()).listWorkspaces();\n    jobPromise.then(workspaceNames => {\n        dispatch(updateWorkspaceNames(workspaceNames));\n        dispatch(showDialog(DELETE_WORKSPACE_DIALOG_ID));\n    })\n}\n\nfunction openLocalWorkspace(dispatch: (action: (Action | ThunkAction)) => void,\n                            getState: () => State) {\n    const handleClose = (workspacePath: string | null) => {\n        if (workspacePath) {\n            const workspace = getState().data.workspace;\n            let ok = true;\n            if (workspace) {\n                if (workspace.baseDir === workspacePath) {\n                    // showMessageBox({\n                    //     title: 'Open Workspace',\n                    //     message: 'Workspace is already open.'\n                    // }, MESSAGE_BOX_NO_REPLY);\n                    showToast({\n                                  type: 'warning',\n                                  text: 'Workspace is already open.',\n                              });\n                    return;\n                }\n                ok = maybeSaveCurrentWorkspace(dispatch, getState,\n                                               'Open Workspace',\n                                               'Would you like to save the current workspace before opening the new one?',\n                                               'Press \"Cancel\" to cancel opening a new workspace.'\n                );\n            }\n            if (ok) {\n                dispatch(openWorkspace(workspacePath));\n            }\n        }\n    }\n    dispatch(showSingleFileOpenDialog({\n                                          title: 'Open Workspace - Select Directory',\n                                          buttonLabel: 'Open',\n                                          properties: ['openDirectory'],\n                                      }, handleClose) as any);\n}\n\n/**\n * Let user select a workspace, then ask whether to save the existing workspace, then open new one.\n *\n * @returns a Redux thunk action\n */\nexport function openWorkspaceInteractive(): ThunkAction {\n\n    return (dispatch: Dispatch, getState: GetState) => {\n        if (selectors.isLocalFSAccessAllowedSelector(getState())) {\n            openLocalWorkspace(dispatch, getState);\n        } else {\n            openRemoteWorkspace(dispatch, getState);\n        }\n    };\n}\n\n/**\n * Let user select a workspace, then ask whether to delete the selected workspace.\n *\n * @returns a Redux thunk action\n */\nexport function deleteWorkspaceInteractive(): ThunkAction {\n\n    return (dispatch: Dispatch, getState: GetState) => {\n        if (!selectors.isLocalFSAccessAllowedSelector(getState())) {\n            deleteRemoteWorkspace(dispatch, getState);\n        }\n    };\n}\n\n/**\n * Ask user to whether to save workspace, then close it.\n *\n * @returns a Redux thunk action\n */\nexport function closeWorkspaceInteractive(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const ok = maybeSaveCurrentWorkspace(dispatch, getState,\n                                             'Close Workspace',\n                                             'Would you like to save the current workspace before closing it?',\n                                             'Press \"Cancel\" to cancel closing the workspace.'\n        );\n        if (ok) {\n            dispatch(closeWorkspace())\n        }\n    };\n}\n\n/**\n * Ask user whether to clean workspace, then clean it.\n *\n * @returns a Redux thunk action\n */\nexport function cleanWorkspaceInteractive(): ThunkAction {\n    return (dispatch: Dispatch) => {\n        dispatch(showMessageBox({\n                                    type: 'question',\n                                    title: 'Clean Workspace',\n                                    message: 'Do you really want to clean this workspace?',\n                                    detail: 'This will delete all resources and workflow steps.\\nYou will not be able to undo this operation.',\n                                    buttons: ['Yes', 'No'],\n                                    defaultId: 1,\n                                    cancelId: 1,\n                                }, (answer) => {\n            if (answer && answer.buttonIndex === 0) {\n                dispatch(cleanWorkspace());\n            }\n        }));\n    };\n}\n\n/**\n * Ask user whether to delete a resource/step, then delete it.\n *\n * @returns a Redux thunk action\n */\nexport function deleteResourceInteractive(resName: string): ThunkAction {\n    return (dispatch: Dispatch) => {\n        dispatch(showMessageBox({\n                                    type: 'question',\n                                    title: 'Remove Resource and Workflow Step',\n                                    message: `Do you really want to delete resource and step \"${resName}\"?`,\n                                    detail: 'This will also delete the workflow step that created it.\\n' +\n                                            'You will not be able to undo this operation.',\n                                    buttons: ['Yes', 'No'],\n                                    defaultId: 1,\n                                    cancelId: 1,\n                                }, answer => {\n            if (answer && answer.buttonIndex === 0) {\n                dispatch(deleteResource(resName));\n            }\n        }));\n    };\n}\n\n/**\n * If current workspace is scratch workspace, delegate to \"save as\" action otherwise save it.\n *\n * @returns a Redux thunk action\n */\nexport function saveWorkspaceInteractive(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const workspace = getState().data.workspace;\n        if (workspace.isScratch) {\n            dispatch(saveWorkspaceAsInteractive());\n        } else {\n            dispatch(saveWorkspace())\n        }\n    };\n}\n\n/**\n * Bring up the \"Save Workspace As\" dialog.\n *\n * @returns a Redux action\n */\nexport function saveWorkspaceAsInteractive() {\n    return showDialog('saveWorkspaceAsDialog');\n}\n\n/**\n * Save workspace after asking user whether to do so.\n *\n * @returns false, if action was cancelled, otherwise true\n */\nfunction maybeSaveCurrentWorkspace(dispatch, getState: GetState, title: string, message: string, detail?: string): boolean {\n    const workspace = getState().data.workspace;\n    if (workspace) {\n        const maySave = workspace.workflow.steps.length && (workspace.isModified || !workspace.isSaved);\n        if (maySave) {\n            dispatch(showMessageBox({\n                                        type: 'question',\n                                        title,\n                                        message,\n                                        detail,\n                                        buttons: ['Yes', 'No', 'Cancel'],\n                                        defaultId: 0,\n                                        cancelId: 2,\n                                    }, answer => {\n\n                if (answer) {\n                    if (answer.buttonIndex === 0) {\n                        if (workspace.isScratch) {\n                            dispatch(saveWorkspaceAsInteractive());\n                        } else {\n                            dispatch(saveWorkspace());\n                        }\n                    } else if (answer.buttonIndex === 2) {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n            }));\n        }\n    }\n    return true;\n}\n\nexport function setCurrentWorkspace(workspace: WorkspaceState): ThunkAction {\n    return (dispatch: Dispatch, getState) => {\n        dispatch(setCurrentWorkspaceImpl(workspace));\n        const lastWorkspacePath = workspace.baseDir;\n        if (getState().session.lastWorkspacePath !== lastWorkspacePath) {\n            if (workspace.isScratch) {\n                dispatch(updateSessionState({'lastWorkspacePath': null}));\n            } else {\n                dispatch(updateSessionState({lastWorkspacePath}));\n            }\n        }\n    }\n}\n\nfunction setCurrentWorkspaceImpl(workspace: WorkspaceState): Action {\n    return {type: SET_CURRENT_WORKSPACE, payload: {workspace}};\n}\n\nexport function setSelectedWorkspaceResourceName(selectedWorkspaceResourceName: string): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        dispatch(setSelectedWorkspaceResourceNameImpl(selectedWorkspaceResourceName));\n        if (selectedWorkspaceResourceName && getState().data.workspace) {\n            const resources: Array<ResourceState> = getState().data.workspace.resources;\n            if (resources) {\n                const resource = resources.find(res => res.name === selectedWorkspaceResourceName);\n                if (resource && resource.variables && resource.variables.length) {\n                    const variable = resource.variables.find(variable => !!variable.isDefault);\n                    dispatch(setSelectedVariable(resource,\n                                                 variable || resource.variables[0],\n                                                 selectors.savedLayersSelector(getState())));\n                }\n            }\n        }\n    }\n}\n\nfunction setSelectedWorkspaceResourceNameImpl(selectedWorkspaceResourceName: string): Action {\n    return updateControlState({selectedWorkspaceResourceName});\n}\n\nexport function setSelectedWorkflowStepId(selectedWorkflowStepId: string): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        if (selectedWorkflowStepId) {\n            const resourceMap = selectors.resourceMapSelector(getState());\n            const resource = resourceMap[selectedWorkflowStepId];\n            if (resource) {\n                dispatch(setSelectedWorkspaceResourceName(resource.name));\n            }\n        }\n        dispatch(setSelectedWorkflowStepIdImpl(selectedWorkflowStepId));\n    };\n}\n\nfunction setSelectedWorkflowStepIdImpl(selectedWorkflowStepId: string): Action {\n    return updateControlState({selectedWorkflowStepId});\n}\n\n\nexport function dropWorkspaceResource(opName: string,\n                                      file: File,\n                                      opArgs: OperationKWArgs,\n                                      resName: string | null,\n                                      overwrite: boolean,\n                                      title: string,\n                                      postAction?: Action | ThunkAction): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const state = getState();\n        const dialogState = selectors.dialogStateSelector(FILE_UPLOAD_DIALOG_ID)(state);\n        const webAPIServiceURL = state.communication.webAPIServiceURL;\n        const baseDir = selectors.workspaceBaseDirSelector(getState());\n\n        // Do not fire action when the FileUploadDialog is open as the dialog also uses a drop like event.\n        if (!dialogState.isOpen) {\n            selectors.fileAPISelector(state).uploadFiles(baseDir, file, webAPIServiceURL)\n                     .then((res) => {\n                         showToast({type: res.status, text: 'Upload finished: ' + res.message});\n                         dispatch(setWorkspaceResource(opName, opArgs, resName, overwrite, title, postAction));\n                     })\n                     .catch((error) => {\n                         showToast({type: 'error', text: error.toString()});\n                         console.error(error);\n                     });\n        }\n    }\n}\n\nexport function setWorkspaceResource(opName: string,\n                                     opArgs: OperationKWArgs,\n                                     resName: string | null,\n                                     overwrite: boolean,\n                                     title: string,\n                                     postAction?: Action | ThunkAction): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const baseDir = selectors.workspaceBaseDirSelector(getState());\n        assert.ok(baseDir);\n\n        function call(onProgress) {\n            return selectors.workspaceAPISelector(getState()).setWorkspaceResource(baseDir,\n                                                                                   opName,\n                                                                                   opArgs,\n                                                                                   resName,\n                                                                                   overwrite,\n                                                                                   onProgress);\n        }\n\n        function action(result: [WorkspaceState, string]) {\n            const workspace = result[0];\n            const resName = result[1];\n            dispatch(setCurrentWorkspace(workspace));\n\n            const resource = findResourceByName(selectors.resourcesSelector(getState()), resName);\n            const isFigure = isFigureResource(resource);\n            const isAnimation = isAnimationResource(resource);\n            if (!isFigure && !isAnimation) {\n                dispatch(setSelectedWorkspaceResourceName(resName));\n            }\n            if ((isFigure || isAnimation) && getState().session.autoShowNewFigures) {\n                if (isFigure) {\n                    dispatch(showFigureView(resource, selectors.activeViewIdSelector(getState())))\n                } else if (isAnimation) {\n                    dispatch(showAnimationView(resource, selectors.activeViewIdSelector(getState())))\n                }\n            }\n            if (postAction) {\n                dispatch(postAction);\n            }\n        }\n\n        callAPI({dispatch, title, call, action, requireDoneNotification: true});\n    }\n}\n\nexport function setWorkspaceResourcePersistence(resName: string, persistent: boolean): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const baseDir = selectors.workspaceBaseDirSelector(getState());\n        assert.ok(baseDir);\n\n        function call() {\n            return selectors.workspaceAPISelector(getState()).setWorkspaceResourcePersistence(baseDir, resName, persistent);\n        }\n\n        function action(workspace: WorkspaceState) {\n            dispatch(setCurrentWorkspace(workspace));\n        }\n\n        callAPI({title: 'Change resource persistence', dispatch, call, action});\n    }\n}\n\nexport function renameWorkspaceResource(resName: string, newResName: string): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const baseDir = selectors.workspaceBaseDirSelector(getState());\n        assert.ok(baseDir);\n\n        function call() {\n            return selectors.workspaceAPISelector(getState()).renameWorkspaceResource(baseDir, resName, newResName);\n        }\n\n        function action(workspace: WorkspaceState) {\n            dispatch(setCurrentWorkspace(workspace));\n            dispatch(renameWorkspaceResourceImpl(resName, newResName));\n        }\n\n        callAPI({title: 'Rename resource', dispatch, call, action});\n    };\n}\n\nexport function renameWorkspaceResourceImpl(resName: string, newResName: string): Action {\n    return {type: RENAME_RESOURCE, payload: {resName, newResName}};\n}\n\nexport function getWorkspaceVariableStatistics(resName: string,\n                                               varName: string,\n                                               varIndex: number[],\n                                               action: (statistics: ImageStatisticsState) => any): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const baseDir = selectors.workspaceBaseDirSelector(getState());\n        assert.ok(baseDir);\n\n        function call(onProgress) {\n            return selectors.workspaceAPISelector(getState()).getWorkspaceVariableStatistics(baseDir,\n                                                                                             resName,\n                                                                                             varName,\n                                                                                             varIndex,\n                                                                                             onProgress);\n        }\n\n        function action2(statistics: ImageStatisticsState) {\n            dispatch(action(statistics));\n        }\n\n        const title = `Computing statistics for variable \"${varName}\"`;\n        const requestLock = getLockForGetWorkspaceVariableStatistics(resName, varName, varIndex);\n        callAPI({title, dispatch, call, action: action2, requestLock});\n    }\n}\n\nexport function showTableView(resName: string, varName: string | null, placeAfterViewId: string | null): Action {\n    return {type: SHOW_TABLE_VIEW, payload: {resName, varName, placeAfterViewId}};\n}\n\nexport function showFigureView(resource: ResourceState, placeAfterViewId: string | null): Action {\n    return {type: SHOW_FIGURE_VIEW, payload: {resource, placeAfterViewId}};\n}\n\nexport function showAnimationView(resource: ResourceState, placeAfterViewId: string | null): Action {\n    return {type: SHOW_ANIMATION_VIEW, payload: {resource, placeAfterViewId}};\n}\n\n// noinspection JSUnusedLocalSymbols\nexport function saveFigureImageAs(imageUrl: string, figureId: number): ThunkAction {\n    return () => {\n        if (!electron) {\n            return;\n        }\n        // console.log(\"saveFigureImageAs: \", imageUrl, figureId);\n        electron.shell.openExternal(imageUrl + '/png');\n\n        // showFileSaveDialog({\n        //     title: \"Save Figure As\",\n        //     filters: [\n        //         {name: 'Images', extensions: [\"png\", \"jpeg\", \"tif\"]},\n        //         {name: 'Other', extensions: [\"eps\", \"pdf\", \"ps\", \"raw\", \"svg\"]},\n        //     ]\n        // }, (filePath: string) => {\n        //     console.log(\"saveFigureImageAs:\", filePath);\n        // });\n    };\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Variable actions\n\nexport const SET_SHOW_SELECTED_VARIABLE_LAYER = 'SET_SHOW_SELECTED_VARIABLE_LAYER';\nexport const SET_SELECTED_VARIABLE = 'SET_SELECTED_VARIABLE';\n\nexport function setShowSelectedVariableLayer(showSelectedVariableLayer: boolean): Action {\n    return {type: SET_SHOW_SELECTED_VARIABLE_LAYER, payload: {showSelectedVariableLayer}};\n}\n\nexport function setSelectedVariable(resource: ResourceState,\n                                    selectedVariable: VariableState | null,\n                                    savedLayers?: SavedLayers): Action {\n    return {type: SET_SELECTED_VARIABLE, payload: {resource, selectedVariable, savedLayers}};\n}\n\nexport function addVariableLayer(viewId: string,\n                                 resource: ResourceState,\n                                 variable: VariableState,\n                                 selectLayer: boolean,\n                                 savedLayers?: { [name: string]: LayerState }) {\n    let layer = newVariableLayer(resource, variable, savedLayers);\n    return addLayer(viewId, layer, selectLayer);\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AppMainPage actions\n\nexport function setLeftPanelContainerLayout(leftPanelContainerLayout: PanelContainerLayout) {\n    return updateSessionState({leftPanelContainerLayout});\n}\n\nexport function setRightPanelContainerLayout(rightPanelContainerLayout: PanelContainerLayout) {\n    return updateSessionState({rightPanelContainerLayout});\n}\n\nexport function setSelectedLeftTopPanelId(selectedLeftTopPanelId: string | null) {\n    return updateSessionState({selectedLeftTopPanelId});\n}\n\nexport function setSelectedLeftBottomPanelId(selectedLeftBottomPanelId: string | null) {\n    return updateSessionState({selectedLeftBottomPanelId});\n}\n\nexport function setSelectedRightTopPanelId(selectedRightTopPanelId: string | null) {\n    return updateSessionState({selectedRightTopPanelId});\n}\n\nexport function setSelectedRightBottomPanelId(selectedRightBottomPanelId: string | null) {\n    return updateSessionState({selectedRightBottomPanelId});\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ViewManager actions\n\nexport const ADD_WORLD_VIEW = 'ADD_WORLD_VIEW';\nexport const ADD_TABLE_VIEW = 'ADD_TABLE_VIEW';\nexport const SELECT_VIEW = 'SELECT_VIEW';\nexport const CLOSE_VIEW = 'CLOSE_VIEW';\nexport const CLOSE_ALL_VIEWS = 'CLOSE_ALL_VIEWS';\nexport const SPLIT_VIEW_PANEL = 'SPLIT_VIEW_PANEL';\nexport const CHANGE_VIEW_SPLIT_POS = 'CHANGE_VIEW_SPLIT_POS';\nexport const MOVE_VIEW = 'MOVE_VIEW';\n\n\nexport function addWorldView(placeAfterViewId: string | null, baseMapId: string): Action {\n    return {type: ADD_WORLD_VIEW, payload: {placeAfterViewId, baseMapId}};\n}\n\nexport function selectView(viewPath: ViewPath, viewId: string): Action {\n    return {type: SELECT_VIEW, payload: {viewPath, viewId}};\n}\n\nexport function closeView(viewPath: ViewPath, viewId: string): Action {\n    return {type: CLOSE_VIEW, payload: {viewPath, viewId}};\n}\n\nexport function closeAllViews(viewPath: ViewPath): Action {\n    return {type: CLOSE_ALL_VIEWS, payload: {viewPath}};\n}\n\nexport function splitViewPanel(viewPath: ViewPath, dir: SplitDir, pos: number): Action {\n    return {type: SPLIT_VIEW_PANEL, payload: {viewPath, dir, pos}};\n}\n\nexport function changeViewSplitPos(viewPath: ViewPath, delta: number): Action {\n    return {type: CHANGE_VIEW_SPLIT_POS, payload: {viewPath, delta}};\n}\n\nexport function moveView(sourceViewId: string, placement: 'before' | 'after', targetViewId: string): Action {\n    return {type: MOVE_VIEW, payload: {sourceViewId, placement, targetViewId}};\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// World view actions\n\nexport const SET_VIEW_MODE = 'SET_VIEW_MODE';\nexport const SET_PROJECTION_CODE = 'SET_PROJECTION_CODE';\nexport const SET_LAYER_SPLIT_MODE = 'SET_LAYER_SPLIT_MODE';\nexport const SET_LAYER_SPLIT_POSITION = 'SET_LAYER_SPLIT_POSITION';\nexport const SET_SELECTED_ENTITY_ID = 'SET_SELECTED_ENTITY_ID';\nexport const INC_ENTITY_UPDATE_COUNT = 'INC_ENTITY_UPDATE_COUNT';\nexport const UPDATE_ENTITY_STYLE = 'UPDATE_ENTITY_STYLE';\nexport const UPDATE_MOUSE_IDLE_STATE = 'UPDATE_MOUSE_IDLE_STATE';\n\nexport function setViewMode(viewId: string, viewMode: WorldViewMode): Action {\n    return {type: SET_VIEW_MODE, payload: {viewId, viewMode}};\n}\n\nexport function setLayerSplitMode(viewId: string, layerId: string, splitMode: SplitMode): Action {\n    return {type: SET_LAYER_SPLIT_MODE, payload: {viewId, layerId, splitMode}};\n}\n\nexport function setLayerSplitPosition(viewId: string, layerSplitPosition: number): Action {\n    return {type: SET_LAYER_SPLIT_POSITION, payload: {viewId, layerSplitPosition}};\n}\n\nexport function notifySelectedEntityChange(viewId: string, layer: LayerState | null, selectedEntity: Cesium.Entity | null): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n\n        const selectedEntityId = selectedEntity && selectedEntity.id;\n        dispatch(setSelectedEntityId(viewId, isDefined(selectedEntityId) ? selectedEntityId : null));\n\n        if (selectedEntity\n            && isNumber(selectedEntity['_simp'])\n            && isNumber(selectedEntity['_resId'])\n            && isNumber(selectedEntity['_idx'])) {\n            const isGeometrySimplified = (selectedEntity['_simp'] & 0x01) !== 0;\n            if (isGeometrySimplified) {\n                const workspace = selectors.workspaceSelector(getState());\n                if (workspace) {\n                    const resId = selectedEntity['_resId'];\n                    const featureIndex = +selectedEntity['_idx'];\n                    const baseUrl = selectors.webAPIRestUrlSelector(getState());\n                    const workspaceId = selectors.workspaceIdSelector(getState());\n                    const featureUrl = getFeatureUrl(baseUrl, workspaceId, {resId}, featureIndex);\n                    reloadEntityWithOriginalGeometry(selectedEntity, featureUrl, (layer as any).style);\n                }\n            }\n        }\n    }\n}\n\nfunction setSelectedEntityId(viewId: string, selectedEntityId: string | null): Action {\n    return {type: SET_SELECTED_ENTITY_ID, payload: {viewId, selectedEntityId}};\n}\n\nexport function updateEntityStyle(view: ViewState<any>, entity: Cesium.Entity, style: SimpleStyle) {\n    return (dispatch: Dispatch) => {\n        const layer = getWorldViewVectorLayerForEntity(view, entity);\n        // We cannot dispatch an action with an entity payload, because action logging will no longer work\n        // (probably because Cesium Entities are not plain objects and contain numerous references\n        // to other complex Cesium objects).\n        // This is why we pass the entity ID as payload.\n        // However, entity IDs are only unique within a Cesium Entity DataSource / Cate Vector Layer,\n        // therefore must pass the layer ID and the entity ID to identify the entity.\n        if (layer) {\n            // We will only dispatch actions for entities belong to our own layers.\n            if (layer.id === MY_PLACES_LAYER_ID) {\n                // If this is the placemarks layer, we store the style change in the placemarks (= feature's)\n                // properties: state.session.placemarkCollection.features[entityId].properties = ...style\n                dispatch(updatePlacemarkStyle(entity.id, style));\n            } else {\n                // For all other layer we update the layer's entity styles:\n                // properties: state.control.views[viewId].data.layers[layerId].entityStyles[entityId] = style\n                dispatch(updateEntityStyleImpl(view.id, layer.id, entity.id, style));\n            }\n        }\n        dispatch(incEntityUpdateCount());\n    };\n}\n\nfunction updateEntityStyleImpl(viewId: string, layerId: string, entityId: string, style: SimpleStyle): Action {\n    return {type: UPDATE_ENTITY_STYLE, payload: {viewId, layerId, entityId, style}};\n}\n\nfunction incEntityUpdateCount(): Action {\n    return {type: INC_ENTITY_UPDATE_COUNT};\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Table view actions\n\nexport const UPDATE_TABLE_VIEW_DATA = 'UPDATE_TABLE_VIEW_DATA';\n\nexport function updateTableViewData(viewId: string,\n                                    resName: string | null,\n                                    varName: string | null,\n                                    dataRows?: any[] | null,\n                                    error?: any,\n                                    isLoading?: boolean): Action {\n    dataRows = dataRows || null;\n    error = error || null;\n    isLoading = isLoading || false;\n    return {type: UPDATE_TABLE_VIEW_DATA, payload: {viewId, resName, varName, dataRows, error, isLoading}};\n}\n\nexport function loadTableViewData(viewId: string, resName: string, varName: string | null): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const restUrl = selectors.webAPIRestUrlSelector(getState());\n        const workspaceId = selectors.workspaceIdSelector(getState());\n        const resource = selectors.resourcesSelector(getState()).find(res => res.name === resName);\n        if (resource) {\n            const csvUrl = getCsvUrl(restUrl, workspaceId, {resId: resource.id}, varName);\n            dispatch(updateTableViewData(viewId, resName, varName, null, null, true));\n            d3.csv(csvUrl)\n              .then((dataRows: any[]) => {\n                  dispatch(updateTableViewData(viewId, resName, varName, dataRows, null, false));\n              })\n              .catch((error: any) => {\n                  dispatch(updateTableViewData(viewId, resName, varName, null, error, false));\n              });\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Animation view actions\n\nexport const UPDATE_ANIMATION_VIEW_DATA = 'UPDATE_ANIMATION_VIEW_DATA';\n\nexport function loadAnimationViewData(viewId: string, resId: number): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const restUrl = selectors.webAPIRestUrlSelector(getState());\n        const workspaceId = selectors.workspaceIdSelector(getState());\n        const htmlUrl = getHtmlUrl(restUrl, workspaceId, resId);\n\n        const xmlHttp = new XMLHttpRequest();\n        xmlHttp.onreadystatechange = () => {\n            if (xmlHttp.readyState === 4) {\n                dispatch(setAnimationResult(viewId, xmlHttp.responseText, xmlHttp.status));\n            }\n        };\n        xmlHttp.open('GET', htmlUrl, true); // true for asynchronous\n        xmlHttp.send(null);\n    }\n}\n\nfunction setAnimationResult(viewId: string, innerHTML: string, status: number) {\n    return {type: UPDATE_ANIMATION_VIEW_DATA, payload: {viewId, innerHTML, status}}\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Layer actions\n\nexport const SET_SELECTED_LAYER_ID = 'SET_SELECTED_LAYER_ID';\nexport const ADD_LAYER = 'ADD_LAYER';\nexport const REMOVE_LAYER = 'REMOVE_LAYER';\nexport const UPDATE_LAYER = 'UPDATE_LAYER';\nexport const UPDATE_LAYER_STYLE = 'UPDATE_LAYER_STYLE';\nexport const MOVE_LAYER_UP = 'MOVE_LAYER_UP';\nexport const MOVE_LAYER_DOWN = 'MOVE_LAYER_DOWN';\nexport const SAVE_LAYER = 'SAVE_LAYER';\nexport const SET_BASE_MAP_ID = 'SET_BASE_MAP_ID';\n\nexport function setSelectedLayerId(viewId: string, selectedLayerId: string | null): Action {\n    return {type: SET_SELECTED_LAYER_ID, payload: {viewId, selectedLayerId}};\n}\n\nexport function addLayer(viewId: string, layer: LayerState, selectLayer: boolean): Action {\n    return {type: ADD_LAYER, payload: {viewId, layer, selectLayer}};\n}\n\nexport function removeLayer(viewId: string, id: string): Action {\n    return {type: REMOVE_LAYER, payload: {viewId, id}};\n}\n\nexport function moveLayerUp(viewId: string, id: string): Action {\n    return {type: MOVE_LAYER_UP, payload: {viewId, id}};\n}\n\nexport function moveLayerDown(viewId: string, id: string): Action {\n    return {type: MOVE_LAYER_DOWN, payload: {viewId, id}};\n}\n\nexport function updateLayer(viewId: string, layer: LayerState, ...layerProperties): ThunkAction {\n    return (dispatch: Dispatch) => {\n        if (layerProperties.length) {\n            // layer = {...layer, ...layerProperties};\n            layer = updateObject({}, layer, ...layerProperties);\n        }\n        dispatch(updateLayerImpl(viewId, layer));\n        if (layer.id === AUTO_LAYER_ID) {\n            const varName = (layer as VariableLayerBase).varName;\n            if (varName) {\n                dispatch(saveLayer(varName, layer));\n            }\n        }\n    };\n}\n\nfunction updateLayerImpl(viewId: string, layer: LayerState): Action {\n    return {type: UPDATE_LAYER, payload: {viewId, layer}};\n}\n\nexport function updateLayerStyle(viewId: string, layerId: string, style: SimpleStyle): Action {\n    return {type: UPDATE_LAYER_STYLE, payload: {viewId, layerId, style}};\n}\n\n/**\n * Save layer (in state.session), so it can later be restored.\n *\n * @param key a key\n * @param layer layer data\n * @returns {{type: string, payload: {key: string, layer: LayerState}}}\n */\nexport function saveLayer(key: string, layer: LayerState): Action {\n    return {type: SAVE_LAYER, payload: {key, layer}};\n}\n\nexport function setStyleContext(styleContext: StyleContext) {\n    return updateSessionState({styleContext});\n}\n\nexport function setBaseMap(viewId: string, baseMapId: string): Action {\n    return {type: SET_BASE_MAP_ID, payload: {viewId, baseMapId}};\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ColorMap actions\n\nexport const UPDATE_COLOR_MAPS = 'UPDATE_COLOR_MAPS';\n\n/**\n * Asynchronously load the initial workspace.\n * Called only a single time on app initialisation.\n *\n * @returns a Redux thunk action\n */\nexport function loadColorMaps(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call() {\n            return selectors.colorMapsAPISelector(getState()).getColorMaps();\n        }\n\n        function action(colorMaps: Array<ColorMapCategoryState>) {\n            dispatch(updateColorMaps(colorMaps));\n        }\n\n        callAPI({title: 'Load color maps', dispatch, call, action});\n    }\n}\n\nfunction updateColorMaps(colorMaps: Array<ColorMapCategoryState>): Action {\n    return {type: UPDATE_COLOR_MAPS, payload: {colorMaps}};\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// (User) Preferences actions\n\nexport function showPreferencesDialog() {\n    return showDialog('preferencesDialog');\n}\n\nexport function hidePreferencesDialog() {\n    return hideDialog('preferencesDialog');\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// (User) Preferences actions\n\nexport function showShutdownDialog() {\n    return showDialog('shutdownDialog');\n}\n\nexport function hideShutdownDialog() {\n    return hideDialog('shutdownDialog');\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n// EU GDPR actions\n\nexport const OBTAIN_COOKIE_CONSENT = 'OBTAIN_COOKIE_CONSENT';\n\nexport function obtainCookieConsent(trackingConsentObtained: boolean): Action {\n    return {type: OBTAIN_COOKIE_CONSENT, payload: {trackingConsentObtained}};\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// File choosers and message boxes\n\nexport const OPEN_DIRECTORY_SELECT_DIALOG = 'OPEN_DIRECTORY_SELECT_DIALOG';\nexport const CLOSE_DIRECTORY_SELECT_DIALOG = 'CLOSE_DIRECTORY_SELECT_DIALOG';\n\nfunction openDirectorySelectDialog(options: OpenDialogOptions,\n                                   onClose: (result: OpenDialogResult) => any): Action {\n    return {type: OPEN_DIRECTORY_SELECT_DIALOG, payload: {options, onClose}};\n}\n\nfunction closeDirectorySelectDialog(result: OpenDialogResult): Action {\n    return {type: CLOSE_DIRECTORY_SELECT_DIALOG, payload: {result}};\n}\n\n/**\n * Shows a single-directory select dialog.\n * Similar to \"showFileOpenDialog\" but will always return a single directory path or null.\n *\n * @param openDialogOptions the file-open dialog options, see https://github.com/electron/electron/blob/master/docs/api/dialog.md\n * @param onClose a function which is called with the selected directory path or null if the dialog was canceled\n * @returns a thunk action\n */\nexport function showDirectorySelectDialog(openDialogOptions: OpenDialogOptions,\n                                          onClose: (dirPath: string | null) => void): ThunkAction {\n    const propsSet = new Set(openDialogOptions.properties);\n    propsSet.delete('openFile');\n    propsSet.delete('multiSelections');\n    propsSet.add('openDirectory');\n    openDialogOptions = {\n        ...openDialogOptions,\n        title: openDialogOptions.title || 'Select Directory',\n        buttonLabel: openDialogOptions.buttonLabel || 'Select',\n        properties: Array.from(propsSet)\n    };\n    return (dispatch: Dispatch) => {\n        const handleClose = (result: OpenDialogResult) => {\n            dispatch(closeDirectorySelectDialog(result));\n            onClose(!result.canceled && result.filePaths && result.filePaths.length > 0 ? result.filePaths[0] : null);\n        };\n        dispatch(openDirectorySelectDialog(openDialogOptions, handleClose));\n        desktopActions.showFileOpenDialog(openDialogOptions, handleClose);\n    };\n}\n\nexport const OPEN_FILE_OPEN_DIALOG = 'OPEN_FILE_OPEN_DIALOG';\nexport const CLOSE_FILE_OPEN_DIALOG = 'CLOSE_FILE_OPEN_DIALOG';\n\nfunction openFileOpenDialog(options: OpenDialogOptions,\n                            onClose: (result: OpenDialogResult) => any): Action {\n    return {type: OPEN_FILE_OPEN_DIALOG, payload: {options, onClose}};\n}\n\nfunction closeFileOpenDialog(result: OpenDialogResult): Action {\n    return {type: CLOSE_FILE_OPEN_DIALOG, payload: {result}};\n}\n\n\n/**\n * Shows a file open dialog.\n *\n * @param openDialogOptions the file-save dialog options, see https://github.com/electron/electron/blob/master/docs/api/dialog.md\n * @param onClose a function which is called with the open dialog result\n * @returns a thunk action\n */\nexport function showFileOpenDialog(openDialogOptions: OpenDialogOptions,\n                                   onClose: (result: OpenDialogResult) => void): ThunkAction {\n    return (dispatch: Dispatch) => {\n        const handleClose = (result: OpenDialogResult) => {\n            dispatch(closeFileOpenDialog(result));\n            onClose(result);\n        };\n        dispatch(openFileOpenDialog(openDialogOptions, handleClose));\n        desktopActions.showFileOpenDialog(openDialogOptions, handleClose);\n    };\n}\n\n/**\n * Shows a single-file open dialog.\n * Similar to \"showFileOpenDialog\" but will always return a single path or null.\n *\n * @param openDialogOptions the file-open dialog options, see https://github.com/electron/electron/blob/master/docs/api/dialog.md\n * @param onClose a function which is called with the selected file path or null if the dialog was canceled\n * @returns a thunk action\n */\nexport function showSingleFileOpenDialog(openDialogOptions: OpenDialogOptions,\n                                         onClose: (filePath: string | null) => void): ThunkAction {\n    const propsSet = new Set(openDialogOptions.properties);\n    propsSet.delete('multiSelections')\n    openDialogOptions = {...openDialogOptions, properties: Array.from(propsSet)};\n    return showFileOpenDialog(openDialogOptions,\n                              (result => {\n                                  onClose(!result.canceled && result.filePaths.length > 0 ? result.filePaths[0] : null);\n                              }));\n}\n\n/**\n * Shows a multi-file open dialog.\n * Similar to \"showFileOpenDialog\" but will always return a single path or null.\n *\n * @param openDialogOptions the file-open dialog options, see https://github.com/electron/electron/blob/master/docs/api/dialog.md\n * @param onClose a function which is called with the selected file paths\n * @returns a thunk action\n */\nexport function showMultiFileOpenDialog(openDialogOptions: OpenDialogOptions,\n                                        onClose: (filePaths: string[]) => any): ThunkAction {\n    const propsSet = new Set(openDialogOptions.properties);\n    propsSet.add('multiSelections')\n    openDialogOptions = {...openDialogOptions, properties: Array.from(propsSet)};\n    return showFileOpenDialog(openDialogOptions,\n                              (result => {\n                                  onClose(!result.canceled ? result.filePaths : []);\n                              }));\n}\n\nexport const OPEN_FILE_SAVE_DIALOG = 'OPEN_FILE_SAVE_DIALOG';\nexport const CLOSE_FILE_SAVE_DIALOG = 'CLOSE_FILE_SAVE_DIALOG';\n\nfunction openFileSaveDialog(options: SaveDialogOptions,\n                            onClose: (result: SaveDialogResult) => any): Action {\n    return {type: OPEN_FILE_SAVE_DIALOG, payload: {options, onClose}};\n}\n\nfunction closeFileSaveDialog(result: SaveDialogResult): Action {\n    return {type: CLOSE_FILE_SAVE_DIALOG, payload: {result}};\n}\n\n/**\n * Shows a file save dialog.\n *\n * @param saveDialogOptions the file-save dialog options, see https://github.com/electron/electron/blob/master/docs/api/dialog.md\n * @param onClose a function which is called with the selected file path\n * @returns a thunk action\n */\nexport function showFileSaveDialog(saveDialogOptions: SaveDialogOptions,\n                                   onClose: (result: SaveDialogResult) => any): ThunkAction {\n    return (dispatch: Dispatch) => {\n        const handleClose = (result: SaveDialogResult) => {\n            dispatch(closeFileSaveDialog(result));\n            onClose(result);\n        };\n        dispatch(openFileSaveDialog(saveDialogOptions, handleClose));\n        desktopActions.showFileSaveDialog(saveDialogOptions, handleClose);\n    };\n}\n\nexport const OPEN_MESSAGE_BOX = 'OPEN_MESSAGE_BOX';\nexport const CLOSE_MESSAGE_BOX = 'CLOSE_MESSAGE_BOX';\n\n\nfunction openMessageBox(options: MessageBoxOptions,\n                        onClose: (result: MessageBoxResult | null) => void): Action {\n    return {type: OPEN_MESSAGE_BOX, payload: {options, onClose}};\n}\n\nfunction closeMessageBox(result: MessageBoxResult | null): Action {\n    return {type: CLOSE_MESSAGE_BOX, payload: {result}};\n}\n\nexport function showMessageBox(messageBoxOptions: MessageBoxOptions,\n                               onClose?: (result: MessageBoxResult | null) => void): ThunkAction {\n    return (dispatch: Dispatch) => {\n        const handleClose = (result: MessageBoxResult | null) => {\n            dispatch(closeMessageBox(result));\n            if (onClose) {\n                onClose(result);\n            }\n        };\n        dispatch(openMessageBox(messageBoxOptions, handleClose));\n        desktopActions.showMessageBox(messageBoxOptions, handleClose);\n    };\n}\n\nexport const OPEN_FILE_BROWSE_DIALOG = 'OPEN_FILE_BROWSE_DIALOG';\nexport const CLOSE_FILE_BROWSE_DIALOG = 'CLOSE_FILE_BROWSE_DIALOG';\n\nfunction openFileBrowseDialog(filePath: string,\n                              onClose: () => any): Action {\n    return {type: OPEN_FILE_BROWSE_DIALOG, payload: {options: {defaultPath: filePath}, onClose}};\n}\n\nfunction closeFileBrowseDialog(): Action {\n    return {type: CLOSE_FILE_BROWSE_DIALOG};\n}\n\n/**\n * Show the given file in a file manager. If possible, select the file.\n * @param fullPath\n */\nexport function showItemInFolder(fullPath: string): ThunkAction {\n    return (dispatch: Dispatch) => {\n        const handleClose = () => {\n            dispatch(closeFileBrowseDialog());\n        };\n        dispatch(openFileBrowseDialog(fullPath, handleClose));\n        desktopActions.showItemInFolder(fullPath);\n    };\n}\n\n/**\n * Open the given URL in the desktop's default manner.\n *\n * @param url The URL.\n * @returns {boolean}\n */\nexport function openExternal(url: string): boolean {\n    if (hasElectron('openExternal')) {\n        return electron.shell.openExternal(url);\n    }\n    return false;\n}\n\n\n/**\n * Copies given text to clipboard.\n * @param text The text to be copied.\n */\nexport function copyTextToClipboard(text: string) {\n    if (hasElectron('copyTextToClipboard')) {\n        // noinspection JSIgnoredPromiseFromCall\n        electron.clipboard.writeText(text);\n    } else {\n        copyToClipboard(text);\n    }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n// File upload/download\n\nexport function fileUploadInteractive() {\n    return showDialog('fileUploadDialog');\n}\n\nexport function fileDownloadInteractive() {\n    return showDialog('fileDownloadDialog');\n}\n\nexport function uploadFiles(dir: string, file: File): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const state = getState();\n        const webAPIServiceURL = state.communication.webAPIServiceURL;\n\n        selectors.fileAPISelector(state).uploadFiles(dir, file, webAPIServiceURL)\n                 .then((res) => {\n                     dispatch(updateFileNode(dir + '/' + file.name, true));\n                     showToast({type: res.status, text: 'Upload finished: ' + res.message});\n                 })\n                 .catch((error) => {\n                     showToast({type: 'error', text: error.toString()});\n                     console.error(error);\n                 });\n    }\n}\n\nexport function monitorProcess(processId: string): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        function call(onProgress) {\n            return selectors.fileAPISelector(getState()).monitorProcess(processId, onProgress);\n        }\n\n        function action() {\n            console.info('testing');\n        }\n\n        callAPI({title: 'Monitoring Progress', dispatch, call, action});\n    }\n}\n\nexport function downloadFiles(filePaths: string[]): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        const state = getState();\n        const webAPIServiceURL = state.communication.webAPIServiceURL;\n        const api = selectors.fileAPISelector(state);\n\n        api.downloadFiles(filePaths, 'ignore', webAPIServiceURL)\n           .then(() => {\n               showToast({type: 'success', text: 'Zip ready for download.'});\n           })\n           .catch((error) => {\n               showToast({type: 'error', text: error.toString()});\n               console.error(error);\n           });\n\n    }\n}\n\nfunction hasElectron(functionName: string): boolean {\n    if (!electron) {\n        console.warn(`${functionName}() cannot be executed, module electron not available`);\n        return false;\n    } else if (!electron.ipcRenderer) {\n        console.warn(`${functionName}() cannot be executed, module electron.ipcRenderer not available`);\n        return false;\n    }\n    return true;\n}\n\nexport function handleFetchError(error: any, message: string) {\n    console.info('fetch error: ', message, error);\n    let suffix = '';\n    if (error instanceof HttpError) {\n        if (error.statusText) {\n            suffix = ` (HTTP status ${error.status}: ${error.statusText})`;\n        } else {\n            suffix = ` (HTTP status ${error.status})`;\n        }\n    } else if (error instanceof TypeError) {\n        suffix = ' (wrong URL or no internet)';\n    } else if (error instanceof Error && error.message) {\n        suffix = ` (${error.message})`;\n    }\n    showToast({type: 'error', text: message + suffix});\n}\n\n\nlet _handlersInstalled: boolean = false;\n\nexport function installGlobalHandlers(): ThunkAction {\n    return (dispatch: Dispatch, getState: GetState) => {\n        if (_handlersInstalled) {\n            return;\n        }\n\n        if (electron && electron.ipcRenderer) {\n            const ipcRenderer = electron.ipcRenderer;\n\n            ipcRenderer.on('update-initial-state', (event, initialState) => {\n                dispatch(updateInitialState(initialState));\n            });\n\n            ipcRenderer.on('new-workspace', () => {\n                dispatch(newWorkspaceInteractive() as any);\n            });\n\n            ipcRenderer.on('open-workspace', () => {\n                dispatch(openWorkspaceInteractive() as any);\n            });\n\n            ipcRenderer.on('close-workspace', () => {\n                dispatch(closeWorkspaceInteractive() as any);\n            });\n\n            ipcRenderer.on('save-workspace', () => {\n                dispatch(saveWorkspaceInteractive() as any);\n            });\n\n            ipcRenderer.on('save-workspace-as', () => {\n                dispatch(saveWorkspaceAsInteractive());\n            });\n\n            ipcRenderer.on('delete-workspace', () => {\n                dispatch(deleteWorkspaceInteractive() as any);\n            });\n\n            ipcRenderer.on('show-preferences-dialog', () => {\n                dispatch(showPreferencesDialog());\n            });\n\n            ipcRenderer.on('logout', () => {\n                // dispatch(logout() as any);\n            });\n        }\n\n        document.addEventListener('drop', function (event: any) {\n            event.preventDefault();\n            event.stopPropagation();\n            for (let file of event.dataTransfer.files) {\n                readDroppedFile(file, dispatch);\n            }\n        });\n\n        document.addEventListener('dragover', function (event: any) {\n            event.preventDefault();\n            event.stopPropagation();\n        });\n\n        window.addEventListener('beforeunload', (event: any) => {\n            event.preventDefault();\n            const state = getState();\n            if (state.communication.webAPIClient) {\n                dispatch(savePreferences() as any);\n            }\n            return null;\n        });\n\n        _handlersInstalled = true;\n    }\n}\n\nfunction readDroppedFile(file: File, dispatch: Dispatch) {\n    let opName, opArgs;\n    if (file.name.endsWith('.nc')) {\n        opName = 'read_netcdf';\n        // opArgs = {file: {value: file.path}, normalize: {value: false}}\n    } else if (file.name.endsWith('.txt')) {\n        opName = 'read_text';\n    } else if (file.name.endsWith('.json')) {\n        opName = 'read_json';\n    } else if (file.name.endsWith('.csv')) {\n        opName = 'read_csv';\n    } else if (file.name.endsWith('.geojson') || file.name.endsWith('.shp') || file.name.endsWith('.gml')) {\n        opName = 'read_geo_data_frame';\n    }\n    if (!opArgs) {\n        opArgs = {file: {value: file.name}};\n    }\n    if (opName) {\n        dispatch(dropWorkspaceResource(opName,\n                                       file,\n                                       opArgs,\n                                       null,\n                                       false,\n                                       `Reading dropped file ${file.name}`) as any);\n    } else {\n        console.warn('Dropped file of unrecognized type: ', file.name);\n    }\n}\n","// Requires preload.js in cate-desktop:\r\n//\r\n//  import * as electron from 'electron';\r\n//  (window as any).electron = electron;\r\n//\r\nconst electron = (window as any).electron || null;\r\n\r\nexport default electron;","import copyToClipboard from 'copy-to-clipboard';\r\nimport {\r\n    DesktopActions,\r\n    MessageBoxOptions,\r\n    MessageBoxResult,\r\n    OpenDialogOptions,\r\n    OpenDialogResult,\r\n    SaveDialogOptions, SaveDialogResult\r\n} from './types';\r\nimport electron from './electron';\r\n\r\nconst newDesktopActions = (): DesktopActions => {\r\n\r\n    if (electron) {\r\n        return {\r\n            isNativeUI: true,\r\n\r\n            showFileOpenDialog: (openDialogOptions: OpenDialogOptions, onClose: (result: OpenDialogResult) => any): void => {\r\n                const actionName = 'show-open-dialog';\r\n                electron.ipcRenderer.send(actionName, openDialogOptions, false);\r\n                electron.ipcRenderer.once(actionName + '-reply', (event, result: OpenDialogResult) => {\r\n                    onClose(result);\r\n                });\r\n            },\r\n\r\n            showFileSaveDialog: (saveDialogOptions: SaveDialogOptions, onClose: (result: SaveDialogResult) => any): void => {\r\n                const actionName = 'show-save-dialog';\r\n                electron.ipcRenderer.send(actionName, saveDialogOptions, false);\r\n                electron.ipcRenderer.once(actionName + '-reply', (event, result: SaveDialogResult) => {\r\n                    onClose(result);\r\n                });\r\n            },\r\n\r\n            showMessageBox: (messageBoxOptions: MessageBoxOptions, onClose: (result: MessageBoxResult | null) => any): void => {\r\n                const actionName = 'show-message-box';\r\n                if (!messageBoxOptions.buttons) {\r\n                    messageBoxOptions = {...messageBoxOptions, buttons: ['OK']};\r\n                }\r\n                electron.ipcRenderer.send(actionName, messageBoxOptions, false);\r\n                electron.ipcRenderer.once(actionName + '-reply', (event, buttonIndex: number, checkboxChecked: boolean) => {\r\n                    onClose({buttonIndex, checkboxChecked});\r\n                });\r\n            },\r\n\r\n            showItemInFolder: (fullPath: string): Promise<boolean> => {\r\n                return Promise.resolve(electron.shell.showItemInFolder(fullPath));\r\n            },\r\n\r\n            openItem: (fullPath: string): Promise<boolean> => {\r\n                return Promise.resolve(electron.shell.openItem(fullPath));\r\n            },\r\n\r\n            openExternal: (url: string): Promise<boolean> => {\r\n                return Promise.resolve(electron.shell.openExternal(url));\r\n            },\r\n\r\n            copyTextToClipboard: (text: string): Promise<boolean> => {\r\n                return electron.clipboard.writeText(text);\r\n            },\r\n        }\r\n    } else {\r\n        // noinspection JSUnusedLocalSymbols\r\n        return {\r\n            isNativeUI: false,\r\n\r\n            showFileOpenDialog: (openDialogOptions: OpenDialogOptions, onClose: (result: OpenDialogResult) => any): void => {\r\n                // UI generated by React component MessageBox\r\n            },\r\n\r\n\r\n            showFileSaveDialog: (saveDialogOptions: SaveDialogOptions, onClose: (result: SaveDialogResult) => any): void => {\r\n                // UI generated by React\r\n            },\r\n\r\n            showMessageBox: (messageBoxOptions: MessageBoxOptions, onClose: (result: MessageBoxResult | null) => any): void => {\r\n                // UI generated by React\r\n            },\r\n\r\n            showItemInFolder: (fullPath: string): Promise<boolean> => {\r\n                // UI generated by React\r\n                return Promise.resolve(true);\r\n            },\r\n\r\n            copyTextToClipboard: (text: string): Promise<boolean> => {\r\n                return new Promise((callback: (result: boolean) => any) => {\r\n                    copyToClipboard(text, {onCopy: () => callback(true)});\r\n                });\r\n            },\r\n        }\r\n    }\r\n};\r\n\r\nexport default newDesktopActions();","/**\r\n * Job-related interfaces and type definitions.\r\n *\r\n * @author Norman Fomferra\r\n */\r\n\r\n/**\r\n * A job represents the execution of a remote method.\r\n */\r\nexport interface Job {\r\n    getRequest(): JobRequest;\r\n\r\n    getStatus(): JobStatus;\r\n\r\n    isCancelled(): boolean;\r\n\r\n    cancel(): void;\r\n}\r\n\r\n/**\r\n * A promise representing a remote method call.\r\n */\r\nexport interface JobPromise<JobResponse> extends Promise<JobResponse> {\r\n    getJob(): Job;\r\n\r\n    getJobId(): number;\r\n}\r\n\r\n/**\r\n * All the possible job statuses.\r\n */\r\nexport type JobStatus = 'NEW' | 'SUBMITTED' | 'IN_PROGRESS' | 'FAILED' | 'CANCELLED' | 'DONE';\r\n\r\nexport class JobStatusEnum {\r\n    static readonly NEW = 'NEW';\r\n    static readonly SUBMITTED = 'SUBMITTED';\r\n    static readonly IN_PROGRESS = 'IN_PROGRESS';\r\n    static readonly DONE = 'DONE';\r\n    static readonly FAILED = 'FAILED';\r\n    static readonly CANCELLED = 'CANCELLED';\r\n}\r\n\r\n/**\r\n * Represents a job request using the JSON-RCP 2.0 style.\r\n */\r\nexport interface JobRequest {\r\n    /** The JSON-RCP message identifier. */\r\n    readonly id: number;\r\n    readonly method: string;\r\n    readonly params: Array<any> | Object;\r\n}\r\n\r\n/**\r\n * Job progress information, this is a Cate-specific extension to JSON-RCP 2.0.\r\n */\r\nexport interface JobProgress {\r\n    /** The JSON-RCP message identifier. */\r\n    readonly id: number;\r\n    readonly label?: string;\r\n    readonly message?: string;\r\n    readonly total?: number;\r\n    readonly worked?: number;\r\n}\r\n\r\n/**\r\n * Represents a job failure using the JSON-RCP 2.0 style.\r\n */\r\nexport interface JobFailure {\r\n\r\n    /** A Number that indicates the error type that occurred. */\r\n    readonly code: number;\r\n\r\n    /** A the error message. */\r\n    readonly message: string;\r\n\r\n    /**\r\n     * A Primitive or Structured value that contains additional information about the error.\r\n     * This may be omitted.\r\n     * The value of this member is defined by the Server (e.g. detailed error information, nested errors etc.).\r\n     */\r\n    readonly data?: JobFailureInfo;\r\n}\r\n\r\n/**\r\n * Detailed error information.\r\n */\r\nexport interface JobFailureInfo {\r\n    /** The name of the method which was called while the error occurred. */\r\n    readonly method: string;\r\n\r\n    /** The name of the exception type, e.g. \"OSError\", \"ValidationError\". */\r\n    readonly exception: string;\r\n\r\n    /** Stack trace */\r\n    readonly traceback: string;\r\n}\r\n\r\n/**\r\n * A callback listening for job progress messages.\r\n */\r\nexport type JobProgressHandler = (progress: JobProgress) => void;\r\n\r\n/**\r\n * A callback listening for job responses.\r\n */\r\nexport type JobResponseHandler<JobResponse> = (response: JobResponse) => void;\r\n\r\n/**\r\n * A callback listening for job failures.\r\n */\r\nexport type JobFailureHandler = (failure: JobFailure) => void;\r\n\r\n"],"sourceRoot":""}