define(["./when-54c2dc71","./Check-6c0211bc","./Math-fc8cecf5","./Cartesian2-bddc1162","./Transforms-ec27f304","./RuntimeError-2109023a","./WebGLConstants-76bb35d1","./ComponentDatatype-6d99a1ee","./GeometryAttribute-44fb48f1","./GeometryAttributes-4fcfcf40","./IndexDatatype-53503fee","./IntersectionTests-2626c9e9","./Plane-231f1723","./VertexFormat-7572c785","./arrayRemoveDuplicates-ebc732b0","./EllipsoidRhumbLine-c704bf4c","./EllipsoidGeodesic-30fae80b","./PolylinePipeline-fba5024c","./WallGeometryLibrary-09410f9b"],function(Z,e,j,K,Q,t,a,X,$,ee,te,i,n,p,r,o,s,m,ae){"use strict";var ie=new K.Cartesian3,ne=new K.Cartesian3,re=new K.Cartesian3,oe=new K.Cartesian3,se=new K.Cartesian3,me=new K.Cartesian3,le=new K.Cartesian3,ue=new K.Cartesian3;function d(e){var t=(e=Z.defaultValue(e,Z.defaultValue.EMPTY_OBJECT)).positions,a=e.maximumHeights,i=e.minimumHeights,n=Z.defaultValue(e.vertexFormat,p.VertexFormat.DEFAULT),r=Z.defaultValue(e.granularity,j.CesiumMath.RADIANS_PER_DEGREE),o=Z.defaultValue(e.ellipsoid,K.Ellipsoid.WGS84);this._positions=t,this._minimumHeights=i,this._maximumHeights=a,this._vertexFormat=p.VertexFormat.clone(n),this._granularity=r,this._ellipsoid=K.Ellipsoid.clone(o),this._workerName="createWallGeometry";var s=1+t.length*K.Cartesian3.packedLength+2;Z.defined(i)&&(s+=i.length),Z.defined(a)&&(s+=a.length),this.packedLength=s+K.Ellipsoid.packedLength+p.VertexFormat.packedLength+1}d.pack=function(e,t,a){var i;a=Z.defaultValue(a,0);var n=e._positions,r=n.length;for(t[a++]=r,i=0;i<r;++i,a+=K.Cartesian3.packedLength)K.Cartesian3.pack(n[i],t,a);var o=e._minimumHeights,r=Z.defined(o)?o.length:0;if(t[a++]=r,Z.defined(o))for(i=0;i<r;++i)t[a++]=o[i];var s=e._maximumHeights;if(r=Z.defined(s)?s.length:0,t[a++]=r,Z.defined(s))for(i=0;i<r;++i)t[a++]=s[i];return K.Ellipsoid.pack(e._ellipsoid,t,a),a+=K.Ellipsoid.packedLength,p.VertexFormat.pack(e._vertexFormat,t,a),t[a+=p.VertexFormat.packedLength]=e._granularity,t};var c=K.Ellipsoid.clone(K.Ellipsoid.UNIT_SPHERE),f=new p.VertexFormat,y={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:c,vertexFormat:f,granularity:void 0};return d.unpack=function(e,t,a){t=Z.defaultValue(t,0);for(var i,n,r=e[t++],o=new Array(r),s=0;s<r;++s,t+=K.Cartesian3.packedLength)o[s]=K.Cartesian3.unpack(e,t);if(0<(r=e[t++]))for(i=new Array(r),s=0;s<r;++s)i[s]=e[t++];if(0<(r=e[t++]))for(n=new Array(r),s=0;s<r;++s)n[s]=e[t++];var m=K.Ellipsoid.unpack(e,t,c);t+=K.Ellipsoid.packedLength;var l=p.VertexFormat.unpack(e,t,f),u=e[t+=p.VertexFormat.packedLength];return Z.defined(a)?(a._positions=o,a._minimumHeights=i,a._maximumHeights=n,a._ellipsoid=K.Ellipsoid.clone(m,a._ellipsoid),a._vertexFormat=p.VertexFormat.clone(l,a._vertexFormat),a._granularity=u,a):(y.positions=o,y.minimumHeights=i,y.maximumHeights=n,y.granularity=u,new d(y))},d.fromConstantHeights=function(e){var t=(e=Z.defaultValue(e,Z.defaultValue.EMPTY_OBJECT)).positions,a=e.minimumHeight,i=e.maximumHeight,n=Z.defined(a),r=Z.defined(i);if(n||r)for(var o=t.length,s=n?new Array(o):void 0,m=r?new Array(o):void 0,l=0;l<o;++l)n&&(s[l]=a),r&&(m[l]=i);return new d({positions:t,maximumHeights:m,minimumHeights:s,ellipsoid:e.ellipsoid,vertexFormat:e.vertexFormat})},d.createGeometry=function(e){var t=e._positions,a=e._minimumHeights,i=e._maximumHeights,n=e._vertexFormat,r=e._granularity,o=e._ellipsoid,s=ae.WallGeometryLibrary.computePositions(o,t,i,a,r,!0);if(Z.defined(s)){for(var m=s.bottomPositions,l=s.topPositions,u=s.numCorners,p=l.length,d=2*p,c=n.position?new Float64Array(d):void 0,f=n.normal?new Float32Array(d):void 0,y=n.tangent?new Float32Array(d):void 0,g=n.bitangent?new Float32Array(d):void 0,h=n.st?new Float32Array(d/3*2):void 0,v=0,C=0,b=0,A=0,x=0,_=ue,E=le,w=me,F=!0,L=0,k=1/((p/=3)-t.length+1),G=0;G<p;++G){var H,V,D,P,T,z=3*G,O=K.Cartesian3.fromArray(l,z,ie),S=K.Cartesian3.fromArray(m,z,ne);n.position&&(c[v++]=S.x,c[v++]=S.y,c[v++]=S.z,c[v++]=O.x,c[v++]=O.y,c[v++]=O.z),n.st&&(h[x++]=L,h[x++]=0,h[x++]=L,h[x++]=1),(n.normal||n.tangent||n.bitangent)&&(V=K.Cartesian3.clone(K.Cartesian3.ZERO,se),D=o.scaleToGeodeticSurface(K.Cartesian3.fromArray(l,z,ne),ne),G+1<p&&(H=o.scaleToGeodeticSurface(K.Cartesian3.fromArray(l,3+z,re),re),V=K.Cartesian3.fromArray(l,3+z,se)),F&&(P=K.Cartesian3.subtract(V,O,oe),T=K.Cartesian3.subtract(D,O,ie),_=K.Cartesian3.normalize(K.Cartesian3.cross(T,P,_),_),F=!1),K.Cartesian3.equalsEpsilon(H,D,j.CesiumMath.EPSILON10)?F=!0:(L+=k,n.tangent&&(E=K.Cartesian3.normalize(K.Cartesian3.subtract(H,D,E),E)),n.bitangent&&(w=K.Cartesian3.normalize(K.Cartesian3.cross(_,E,w),w))),n.normal&&(f[C++]=_.x,f[C++]=_.y,f[C++]=_.z,f[C++]=_.x,f[C++]=_.y,f[C++]=_.z),n.tangent&&(y[A++]=E.x,y[A++]=E.y,y[A++]=E.z,y[A++]=E.x,y[A++]=E.y,y[A++]=E.z),n.bitangent&&(g[b++]=w.x,g[b++]=w.y,g[b++]=w.z,g[b++]=w.x,g[b++]=w.y,g[b++]=w.z))}var R=new ee.GeometryAttributes;n.position&&(R.position=new $.GeometryAttribute({componentDatatype:X.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:c})),n.normal&&(R.normal=new $.GeometryAttribute({componentDatatype:X.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:f})),n.tangent&&(R.tangent=new $.GeometryAttribute({componentDatatype:X.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:y})),n.bitangent&&(R.bitangent=new $.GeometryAttribute({componentDatatype:X.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:g})),n.st&&(R.st=new $.GeometryAttribute({componentDatatype:X.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:h}));var I=d/3;d-=6*(u+1);var M=te.IndexDatatype.createTypedArray(I,d),N=0;for(G=0;G<I-2;G+=2){var W,B,U=G,q=G+2,J=K.Cartesian3.fromArray(c,3*U,ie),Y=K.Cartesian3.fromArray(c,3*q,ne);K.Cartesian3.equalsEpsilon(J,Y,j.CesiumMath.EPSILON10)||(W=G+1,B=G+3,M[N++]=W,M[N++]=U,M[N++]=B,M[N++]=B,M[N++]=U,M[N++]=q)}return new $.Geometry({attributes:R,indices:M,primitiveType:$.PrimitiveType.TRIANGLES,boundingSphere:new Q.BoundingSphere.fromVertices(c)})}},function(e,t){return Z.defined(t)&&(e=d.unpack(e,t)),e._ellipsoid=K.Ellipsoid.clone(e._ellipsoid),d.createGeometry(e)}});
