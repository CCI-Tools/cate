name: Unittest Cate

on:
  push:
  release:
    types: [published]

jobs:
  unittest:
    env:
      XCUBE_VERSION: 0.13.0.dev3
      XCUBE_CCI_VERSION: 0.9.7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: get-xcube
        shell: bash
        run: |
          wget https://github.com/dcs4cop/xcube/archive/v"${XCUBE_VERSION}".tar.gz
          tar xvzf v"${XCUBE_VERSION}".tar.gz
          mv xcube-"${XCUBE_VERSION}" xcube
          ls -al
          rm v"${XCUBE_VERSION}".tar.gz
      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          channels: conda-forge
          activate-environment: xcube
          environment-file: xcube/environment.yml
      - name: setup-xcube
        shell: bash -l {0}
        run: |
          cd xcube
          python setup.py install
          cd ..
      - name: setup-xcube-cci
        shell: bash -l {0}
        run: |
          wget https://github.com/dcs4cop/xcube-cci/archive/v"${XCUBE_CCI_VERSION}".tar.gz
          tar xvzf v"${XCUBE_CCI_VERSION}".tar.gz
          cd xcube-cci-"${XCUBE_CCI_VERSION}"
          python setup.py install
          mamba install -y -c conda-forge aiohttp nest-asyncio lxml pydap cartopy jsonschema
      - name: setup-cate
        shell: bash -l {0}
        run: |
          conda info
          conda list
          python setup.py develop
      - name: unittest-cate
        shell: bash -l {0}
        run: |
          # For the unit-tests, disable Numba JIT, otherwise Coverage wont reach the actual Python code
          export NUMBA_DISABLE_JIT=1
          # Uncomment following line if web testing on travis breaks our build
          export CATE_DISABLE_WEB_TESTS=1
          # geopandas in tests break the build on appveyor (maybe the problem of gdal?)
          export CATE_DISABLE_GEOPANDAS_TESTS=1
          export CATE_DISABLE_PLOT_TESTS=1
          export CATE_DISABLE_CLI_UPDATE_TESTS=1
          py.test -v --cov=cate tests
  build-docker-image:
    runs-on: ubuntu-latest
    name: build-docker-image
    needs: unittest
    env:
      APP_NAME: cate
    steps:
      - name: git-checkout
        uses: actions/checkout@v2
      - name: get-release-tag
        id: release
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: info
        id: info
        run: |
          echo "TAG: ${{ steps.release.outputs.tag }}"
          echo "EVENT: ${{ github.event_name }}"
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: build-push-docker-image-latest
        if: ${{ github.event_name == 'push' && steps.release.outputs.tag == 'master'  }}
        with:
          image: ccitools/${{ env.APP_NAME }}
          tags: master, latest
          registry: quay.io
          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: build-push-docker-image
        if: ${{ github.event_name == 'release' }}
        with:
          image: ccitools/${{ env.APP_NAME }}
          tags: ${{ steps.release.outputs.tag }}
          registry: quay.io
          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}
