name: Deploy on Release

on:
  workflow_dispatch:
  release:
    types:
      - created
  push:
    branches:
      - dzelge_xxx_k8s_auto

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v2
      # Determine release name (e.g. v1.0.0, master)
      - name: Set Release Name
        id: releasename
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}
      - name: Tag latest
        run: |
          echo "_______________________________________________"
          echo "Event: ${{ github.event_name }}"
          echo "Version: ${{ steps.releasename.outputs.VERSION }}"
          echo "_______________________________________________"
      # Login to docker repo provider
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}
      # Build release
      - name: Build and push
        id: docker_build_release
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: quay.io/ccitools/cate:${{ steps.releasename.outputs.VERSION }}
      - name: Tag latest
        if: ${{ github.event_name == 'push' && steps.releasename.outputs.VERSION == 'dzelge_xxx_k8s_auto' }}
        run: |
          docker tag quay.io/ccitools/cate:dzelge_xxx_k8s_auto quay.io/ccitools/cate:latest
          docker push quay.io/ccitools/cate:latest

  trigger-deployment:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      # Checkout repo
      - uses: actions/checkout@v2
      # Determine release name
      - name: Set Release Name
        id: releasename
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}
      # Clone k8s-config to udpate versions in values-*.yml
      - name: Clone k8s-configs
        run: |
          git clone https://bcdev:${{ secrets.CATE_GITHUB_K8S_CONFIGS_PAT }}@github.com/bcdev/k8s-configs
          cd k8s-configs

          git config --global user.email "bcdev@brockmann-consult.de"
          git config --global user.name "BC Dev"
      # Deploy to dev and stage for dev releases
      - name: trigger deploy dev
        if: ${{ github.event_name == 'release' && contains(steps.releasename.outputs.VERSION, 'dev') }}
        run: |
          echo "##############################################"
          echo "Deploy dev version ${{ steps.releasename.outputs.VERSION }}"
          echo "##############################################"
          cd k8s-configs
          sed -i -e 's/cate-version [a-z0-9\.]*$/cate-version ${{ steps.releasename.outputs.VERSION }}/g' ke/helm/xcube-hub/values-dev.yaml
          sed -i -e 's/cate-version [a-z0-9\.]*$/cate-version ${{ steps.releasename.outputs.VERSION }}/g' ke/helm/xcube-hub/values-stage.yaml
          git commit -a -m "Updated cate dev version to ${{ steps.releasename.outputs.VERSION }}"
      # Deploy to prod for prod releases
      - name: trigger deploy prod
        if: ${{ github.event_name == 'release' && !contains(steps.releasename.outputs.VERSION, 'dev') }}
        run: |
          echo "##############################################"
          echo "Deploy production version ${{ steps.releasename.outputs.VERSION }}"
          echo "##############################################"
          cd k8s-configs
          sed -i -e 's/cate-version [a-z0-9\.]*$/cate-version ${{ steps.releasename.outputs.VERSION }}/g' ke/helm/xcube-hub/values-prod.yaml
          git commit -a -m "Updated cate production version to ${{ steps.releasename.outputs.VERSION }}"
      # Deploy latest to dev if 'release' is master
      - name: trigger deploy latest
        if: ${{ github.event_name == 'push' && steps.releasename.outputs.VERSION == 'dzelge_xxx_k8s_auto' }}
        run: |
          echo "##############################################"
          echo "Deploy dev version latest"
          echo "##############################################"
          cd k8s-configs
          sed -i -e 's/cate-version [a-z0-9\.]*$/cate-version latest/g' ke/helm/xcube-hub/values-dev.yaml
          git commit -a -m "Updated cate latest version to latest"
      # Push image to docker repo
      - name: Push to k8s-configs
        run: |
          cd k8s-configs
          git push origin main
